[{"QuestionId": "WebQTest-596", "RawQuestion": "where did kansas city royals come from?", "ProcessedQuestion": "where did kansas city royals come from", "Parses": [{"ParseId": "WebQTest-596.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.049n7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.049n7 ns:sports.sports_team.location ?x .\n}\n", "PotentialTopicEntityMention": "kansas city royals", "TopicEntityName": "Kansas City Royals", "TopicEntityMid": "m.049n7", "InferentialChain": ["sports.sports_team.location"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.04f_d", "EntityName": "Kansas City"}]}], "topic_entity": {"m.049n7": "Kansas City Royals"}, "qid_topic_entity": {"Q744530": "Kansas City Royals"}}, {"QuestionId": "WebQTest-1507", "RawQuestion": "who was kate chopin?", "ProcessedQuestion": "who was kate chopin", "Parses": [{"ParseId": "WebQTest-1507.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d8pw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d8pw ns:people.person.profession ?x .\n}\n", "PotentialTopicEntityMention": "kate chopin", "TopicEntityName": "Kate Chopin", "TopicEntityMid": "m.0d8pw", "InferentialChain": ["people.person.profession"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.012t_z", "EntityName": "Businessperson"}, {"AnswerType": "Entity", "AnswerArgument": "m.02xhgwq", "EntityName": "Novelist"}, {"AnswerType": "Entity", "AnswerArgument": "m.0cbd2", "EntityName": "Writer"}, {"AnswerType": "Entity", "AnswerArgument": "m.0kyk", "EntityName": "Author"}]}], "topic_entity": {"m.0d8pw": "Kate Chopin"}, "qid_topic_entity": {"Q230476": "Kate Chopin"}}, {"QuestionId": "WebQTest-1847", "RawQuestion": "where does kurdish people live?", "ProcessedQuestion": "where does kurdish people live", "Parses": [{"ParseId": "WebQTest-1847.P0", "AnnotatorId": 1, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04c28)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04c28 ns:people.ethnicity.geographic_distribution ?x .\n}\n", "PotentialTopicEntityMention": "kurdish people", "TopicEntityName": "Kurds", "TopicEntityMid": "m.04c28", "InferentialChain": ["people.ethnicity.geographic_distribution"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0j0k", "EntityName": "Asia"}]}], "topic_entity": {"m.04c28": "Kurds"}, "qid_topic_entity": {"Q12223": "Kurds"}}, {"QuestionId": "WebQTest-1932", "RawQuestion": "who made the laws in canada?", "ProcessedQuestion": "who made the laws in canada", "Parses": [{"ParseId": "WebQTest-1932.P0", "AnnotatorId": 4, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d060g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d060g ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.governmental_body ?x .\n?x ns:government.governmental_body.jurisdiction ns:m.0d060g .\n}\n", "PotentialTopicEntityMention": "canada", "TopicEntityName": "Canada", "TopicEntityMid": "m.0d060g", "InferentialChain": ["government.governmental_jurisdiction.governing_officials", "government.government_position_held.governmental_body"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.0d060g", "EntityName": "Canada", "SourceNodeIndex": 1, "NodePredicate": "government.governmental_body.jurisdiction", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0h6dy", "EntityName": "House of Commons of Canada"}, {"AnswerType": "Entity", "AnswerArgument": "m.0l_j_", "EntityName": "Parliament of Canada"}]}], "topic_entity": {"m.0d060g": "Canada"}, "qid_topic_entity": {"Q16": "Canada"}}, {"QuestionId": "WebQTest-1853", "RawQuestion": "what made richard hammond famous?", "ProcessedQuestion": "what made richard hammond famous", "Parses": [{"ParseId": "WebQTest-1853.P0", "AnnotatorId": 1, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "VeryLow", "FreeFormComment": "?? "}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02508x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02508x ns:people.person.profession ?x .\n}\n", "PotentialTopicEntityMention": "richard hammond", "TopicEntityName": "Richard Hammond", "TopicEntityMid": "m.02508x", "InferentialChain": ["people.person.profession"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.015cjr", "EntityName": "Presenter"}, {"AnswerType": "Entity", "AnswerArgument": "m.01tkqy", "EntityName": "Stunt Performer"}, {"AnswerType": "Entity", "AnswerArgument": "m.03gjzk", "EntityName": "Television producer"}, {"AnswerType": "Entity", "AnswerArgument": "m.08z956", "EntityName": "Radio personality"}, {"AnswerType": "Entity", "AnswerArgument": "m.0cbd2", "EntityName": "Writer"}, {"AnswerType": "Entity", "AnswerArgument": "m.0d8qb", "EntityName": "Journalist"}, {"AnswerType": "Entity", "AnswerArgument": "m.0dxtg", "EntityName": "Screenwriter"}, {"AnswerType": "Entity", "AnswerArgument": "m.0kyk", "EntityName": "Author"}, {"AnswerType": "Entity", "AnswerArgument": "m.0np9r", "EntityName": "Voice Actor"}]}], "topic_entity": {"m.02508x": "Richard Hammond"}, "qid_topic_entity": {"Q297265": "Richard Hammond"}}, {"QuestionId": "WebQTest-690", "RawQuestion": "what did scott joplin play?", "ProcessedQuestion": "what did scott joplin play", "Parses": [{"ParseId": "WebQTest-690.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07b69)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07b69 ns:music.group_member.instruments_played ?x .\n}\n", "PotentialTopicEntityMention": "scott joplin", "TopicEntityName": "Scott Joplin", "TopicEntityMid": "m.07b69", "InferentialChain": ["music.group_member.instruments_played"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.05r5c", "EntityName": "Piano"}, {"AnswerType": "Entity", "AnswerArgument": "m.06ch55", "EntityName": "Jazz piano"}]}], "topic_entity": {"m.07b69": "Scott Joplin"}, "qid_topic_entity": {"Q191499": "Scott Joplin"}}, {"QuestionId": "WebQTest-794", "RawQuestion": "who does the voice for darth vader?", "ProcessedQuestion": "who does the voice for darth vader", "Parses": [{"ParseId": "WebQTest-794.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f2y0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f2y0 ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.special_performance_type ns:m.02nsjvf .\n}\n", "PotentialTopicEntityMention": "darth vader", "TopicEntityName": "Darth Vader", "TopicEntityMid": "m.0f2y0", "InferentialChain": ["film.film_character.portrayed_in_films", "film.performance.actor"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.02nsjvf", "EntityName": "Voice", "SourceNodeIndex": 0, "NodePredicate": "film.performance.special_performance_type", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0113l6zy", "EntityName": "Dr. Smoov"}, {"AnswerType": "Entity", "AnswerArgument": "m.06wm0z", "EntityName": "Zac Efron"}, {"AnswerType": "Entity", "AnswerArgument": "m.0945y8", "EntityName": "Abraham Benrubi"}, {"AnswerType": "Entity", "AnswerArgument": "m.0b2l8f", "EntityName": "Matt Lanter"}, {"AnswerType": "Entity", "AnswerArgument": "m.0f6_x", "EntityName": "James Earl Jones"}]}], "topic_entity": {"m.0f2y0": "Darth Vader"}, "qid_topic_entity": {"Q51752": "Darth Vader"}}, {"QuestionId": "WebQTest-1685", "RawQuestion": "where did benjamin franklin went to school?", "ProcessedQuestion": "where did benjamin franklin went to school", "Parses": [{"ParseId": "WebQTest-1685.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019fz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019fz ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n", "PotentialTopicEntityMention": "benjamin franklin", "TopicEntityName": "Benjamin Franklin", "TopicEntityMid": "m.019fz", "InferentialChain": ["people.person.education", "education.education.institution"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02kj7g", "EntityName": "Boston Latin School"}]}], "topic_entity": {"m.019fz": "Benjamin Franklin"}, "qid_topic_entity": {"Q34969": "Benjamin Franklin"}}, {"QuestionId": "WebQTest-1707", "RawQuestion": "who plays lex luthor on smallville?", "ProcessedQuestion": "who plays lex luthor on smallville", "Parses": [{"ParseId": "WebQTest-1707.P0", "AnnotatorId": 3, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03g9xj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03g9xj ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.character ns:m.04q78 .\n}\n", "PotentialTopicEntityMention": "smallville", "TopicEntityName": "Smallville", "TopicEntityMid": "m.03g9xj", "InferentialChain": ["tv.tv_program.regular_cast", "tv.regular_tv_appearance.actor"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.04q78", "EntityName": "Alexander Luthor", "SourceNodeIndex": 0, "NodePredicate": "tv.regular_tv_appearance.character", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0q1lp", "EntityName": "Michael Rosenbaum"}]}], "topic_entity": {"m.03g9xj": "Smallville"}, "qid_topic_entity": {"Q180228": "Smallville"}}, {"QuestionId": "WebQTest-1263", "RawQuestion": "what team is cristiano ronaldo play for?", "ProcessedQuestion": "what team is cristiano ronaldo play for", "Parses": [{"ParseId": "WebQTest-1263.P0", "AnnotatorId": 2, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02xt6q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02xt6q ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n", "PotentialTopicEntityMention": "cristiano ronaldo", "TopicEntityName": "Cristiano Ronaldo", "TopicEntityMid": "m.02xt6q", "InferentialChain": ["sports.pro_athlete.teams", "sports.sports_team_roster.team"], "Constraints": [{"Operator": "LessOrEqual", "ArgumentType": "Value", "Argument": "2015-08-10", "EntityName": "", "SourceNodeIndex": 0, "NodePredicate": "sports.sports_team_roster.from", "ValueType": "DateTime"}, {"Operator": "GreaterOrEqual", "ArgumentType": "Value", "Argument": "2015-08-10", "EntityName": "", "SourceNodeIndex": 0, "NodePredicate": "sports.sports_team_roster.to", "ValueType": "DateTime"}], "Time": {"IsRelativeToNow": true, "Start": "0000-00-00", "End": "0000-00-00", "AssociatedConstraints": [0, 1], "PotentialTimeMention": null}, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02rqxc", "EntityName": "Portugal national football team"}, {"AnswerType": "Entity", "AnswerArgument": "m.06l22", "EntityName": "Real Madrid C.F."}]}], "topic_entity": {"m.02xt6q": "Cristiano Ronaldo"}, "qid_topic_entity": {"Q11571": "Cristiano Ronaldo"}}, {"QuestionId": "WebQTest-1612", "RawQuestion": "what type of art did raphael sanzio create?", "ProcessedQuestion": "what type of art did raphael sanzio create", "Parses": [{"ParseId": "WebQTest-1612.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c43g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c43g ns:visual_art.visual_artist.art_forms ?x .\n}\n", "PotentialTopicEntityMention": "raphael sanzio", "TopicEntityName": "Raphael", "TopicEntityMid": "m.0c43g", "InferentialChain": ["visual_art.visual_artist.art_forms"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02csf", "EntityName": "Drawing"}, {"AnswerType": "Entity", "AnswerArgument": "m.05qdh", "EntityName": "Painting"}]}], "topic_entity": {"m.0c43g": "Raphael"}, "qid_topic_entity": {"Q5597": "Raphael"}}, {"QuestionId": "WebQTest-1420", "RawQuestion": "what does monsanto own?", "ProcessedQuestion": "what does monsanto own", "Parses": [{"ParseId": "WebQTest-1420.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0n8m6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0n8m6 ns:business.business_operation.industry ?x .\n}\n", "PotentialTopicEntityMention": "monsanto", "TopicEntityName": "Monsanto", "TopicEntityMid": "m.0n8m6", "InferentialChain": ["business.business_operation.industry"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02ntf00", "EntityName": "Agrochemical"}, {"AnswerType": "Entity", "AnswerArgument": "m.09dh0", "EntityName": "Seed"}, {"AnswerType": "Entity", "AnswerArgument": "m.0g10z", "EntityName": "Chemical industry"}, {"AnswerType": "Entity", "AnswerArgument": "m.0hkf", "EntityName": "Agriculture"}]}], "topic_entity": {"m.0n8m6": "Monsanto"}, "qid_topic_entity": {"Q207983": "Monsanto"}}, {"QuestionId": "WebQTest-883", "RawQuestion": "who was king george vi married to?", "ProcessedQuestion": "who was king george vi married to", "Parses": [{"ParseId": "WebQTest-883.P0", "AnnotatorId": 4, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cm83)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cm83 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.to ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n", "PotentialTopicEntityMention": "king george vi", "TopicEntityName": "George VI", "TopicEntityMid": "m.0cm83", "InferentialChain": ["people.person.spouse_s", "people.marriage.spouse"], "Constraints": [], "Time": null, "Order": {"SortOrder": "Descending", "Start": 0, "Count": 1, "SourceNodeIndex": 0, "NodePredicate": "people.marriage.to", "ValueType": "DateTime"}, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0cm63", "EntityName": "Queen Elizabeth The Queen Mother"}]}], "topic_entity": {"m.0cm83": "George VI"}, "qid_topic_entity": {"Q280856": "George VI"}}, {"QuestionId": "WebQTest-1654", "RawQuestion": "what are bigos?", "ProcessedQuestion": "what are bigos", "Parses": [{"ParseId": "WebQTest-1654.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06815z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06815z ns:food.dish.type_of_dish1 ?x .\n}\n", "PotentialTopicEntityMention": "bigos", "TopicEntityName": "Bigos", "TopicEntityMid": "m.06815z", "InferentialChain": ["food.dish.type_of_dish1"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0jnxw", "EntityName": "Stew"}]}], "topic_entity": {"m.06815z": "Bigos"}, "qid_topic_entity": {"Q598222": "Bigos"}}, {"QuestionId": "WebQTest-402", "RawQuestion": "what does joey jordison play in slipknot?", "ProcessedQuestion": "what does joey jordison play in slipknot", "Parses": [{"ParseId": "WebQTest-402.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01wt4wc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01wt4wc ns:music.group_member.membership ?y .\n?y ns:music.group_membership.role ?x .\n?y ns:music.group_membership.group ns:m.0ntq7 .\n}\n", "PotentialTopicEntityMention": "joey jordison", "TopicEntityName": "Joey Jordison", "TopicEntityMid": "m.01wt4wc", "InferentialChain": ["music.group_member.membership", "music.group_membership.role"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.0ntq7", "EntityName": "Slipknot", "SourceNodeIndex": 0, "NodePredicate": "music.group_membership.group", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02hnl", "EntityName": "Drums"}]}, {"ParseId": "WebQTest-402.P1", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ntq7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ntq7 ns:music.musical_group.member ?y .\n?y ns:music.group_membership.role ?x .\n?y ns:music.group_membership.member ns:m.01wt4wc .\n}\n", "PotentialTopicEntityMention": "slipknot", "TopicEntityName": "Slipknot", "TopicEntityMid": "m.0ntq7", "InferentialChain": ["music.musical_group.member", "music.group_membership.role"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.01wt4wc", "EntityName": "Joey Jordison", "SourceNodeIndex": 0, "NodePredicate": "music.group_membership.member", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02hnl", "EntityName": "Drums"}]}], "topic_entity": {"m.01wt4wc": "Joey Jordison", "m.0ntq7": "Slipknot"}, "qid_topic_entity": {"Q295817": "Joey Jordison", "Q254138": "Slipknot"}}, {"QuestionId": "WebQTest-1180", "RawQuestion": "what sarah dessen books are movies?", "ProcessedQuestion": "what sarah dessen books are movies", "Parses": [{"ParseId": "WebQTest-1180.P0", "AnnotatorId": 1, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Low", "FreeFormComment": "?"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.052s_8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.052s_8 ns:film.film_story_contributor.film_story_credits ?x .\n}\n", "PotentialTopicEntityMention": "sarah dessen", "TopicEntityName": "Sarah Dessen", "TopicEntityMid": "m.052s_8", "InferentialChain": ["film.film_story_contributor.film_story_credits"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.04y364", "EntityName": "How to Deal"}]}], "topic_entity": {"m.052s_8": "Sarah Dessen"}, "qid_topic_entity": {"Q532336": "Sarah Dessen"}}, {"QuestionId": "WebQTest-1316", "RawQuestion": "what was the name of benjamin franklin wife?", "ProcessedQuestion": "what was the name of benjamin franklin wife", "Parses": [{"ParseId": "WebQTest-1316.P0", "AnnotatorId": 4, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019fz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019fz ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.01bl8s .\n}\n", "PotentialTopicEntityMention": "benjamin franklin", "TopicEntityName": "Benjamin Franklin", "TopicEntityMid": "m.019fz", "InferentialChain": ["people.person.spouse_s", "people.marriage.spouse"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.01bl8s", "EntityName": "Common-law marriage", "SourceNodeIndex": 0, "NodePredicate": "people.marriage.type_of_union", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0b15_0", "EntityName": "Deborah Read"}]}], "topic_entity": {"m.019fz": "Benjamin Franklin"}, "qid_topic_entity": {"Q34969": "Benjamin Franklin"}}, {"QuestionId": "WebQTest-106", "RawQuestion": "who did armie hammer play in the social network?", "ProcessedQuestion": "who did armie hammer play in the social network", "Parses": [{"ParseId": "WebQTest-106.P0", "AnnotatorId": 3, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07s846j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07s846j ns:film.film.starring ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.actor ns:m.03y9941 .\n}\n", "PotentialTopicEntityMention": "social network", "TopicEntityName": "The Social Network", "TopicEntityMid": "m.07s846j", "InferentialChain": ["film.film.starring", "film.performance.character"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.03y9941", "EntityName": "Armie Hammer", "SourceNodeIndex": 0, "NodePredicate": "film.performance.actor", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.09tb_f3", "EntityName": "Tyler Winklevoss"}, {"AnswerType": "Entity", "AnswerArgument": "m.09tbj8d", "EntityName": "Cameron Winklevoss"}]}], "topic_entity": {"m.07s846j": "The Social Network"}, "qid_topic_entity": {"Q185888": "The Social Network"}}, {"QuestionId": "WebQTest-514", "RawQuestion": "where is denmark situated?", "ProcessedQuestion": "where is denmark situated", "Parses": [{"ParseId": "WebQTest-514.P0", "AnnotatorId": 3, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0k6nt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0k6nt ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.01nt .\n}\n", "PotentialTopicEntityMention": "denmark", "TopicEntityName": "Denmark", "TopicEntityMid": "m.0k6nt", "InferentialChain": ["location.location.containedby"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.01nt", "EntityName": "Region", "SourceNodeIndex": 0, "NodePredicate": "common.topic.notable_types", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0140mf", "EntityName": "Nordic countries"}, {"AnswerType": "Entity", "AnswerArgument": "m.06mx8", "EntityName": "Scandinavia"}]}], "topic_entity": {"m.0k6nt": "Denmark"}, "qid_topic_entity": {"Q35": "Denmark"}}, {"QuestionId": "WebQTest-1710", "RawQuestion": "what is the currency of the czech republic?", "ProcessedQuestion": "what is the currency of the czech republic", "Parses": [{"ParseId": "WebQTest-1710.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01mjq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01mjq ns:location.country.currency_used ?x .\n}\n", "PotentialTopicEntityMention": "czech republic", "TopicEntityName": "Czech Republic", "TopicEntityMid": "m.01mjq", "InferentialChain": ["location.country.currency_used"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.04rpc3", "EntityName": "Czech koruna"}]}], "topic_entity": {"m.01mjq": "Czech Republic"}, "qid_topic_entity": {"Q213": "Czech Republic"}}, {"QuestionId": "WebQTest-100", "RawQuestion": "what language is spoken in haiti today?", "ProcessedQuestion": "what language is spoken in haiti today", "Parses": [{"ParseId": "WebQTest-100.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03gyl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03gyl ns:location.country.languages_spoken ?x .\n}\n", "PotentialTopicEntityMention": "haiti", "TopicEntityName": "Haiti", "TopicEntityMid": "m.03gyl", "InferentialChain": ["location.country.languages_spoken"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02dhwl", "EntityName": "Haitian Creole"}, {"AnswerType": "Entity", "AnswerArgument": "m.064_8sq", "EntityName": "French"}]}, {"ParseId": "WebQTest-100.P1", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03gyl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03gyl ns:location.country.official_language ?x .\n}\n", "PotentialTopicEntityMention": "haiti", "TopicEntityName": "Haiti", "TopicEntityMid": "m.03gyl", "InferentialChain": ["location.country.official_language"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02dhwl", "EntityName": "Haitian Creole"}, {"AnswerType": "Entity", "AnswerArgument": "m.064_8sq", "EntityName": "French"}]}], "topic_entity": {"m.03gyl": "Haiti"}, "qid_topic_entity": {"Q790": "Haiti"}}, {"QuestionId": "WebQTest-1174", "RawQuestion": "what cancer did jackie kennedy die of?", "ProcessedQuestion": "what cancer did jackie kennedy die of", "Parses": [{"ParseId": "WebQTest-1174.P0", "AnnotatorId": 2, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h6mq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h6mq ns:people.deceased_person.cause_of_death ?x .\n?x ns:medicine.disease.parent_disease ns:m.0qcr0 .\n}\n", "PotentialTopicEntityMention": "jackie kennedy", "TopicEntityName": "Jacqueline Kennedy Onassis", "TopicEntityMid": "m.0h6mq", "InferentialChain": ["people.deceased_person.cause_of_death"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.0qcr0", "EntityName": "Cancer", "SourceNodeIndex": 0, "NodePredicate": "medicine.disease.parent_disease", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0jdk0", "EntityName": "Lymphoma"}]}], "topic_entity": {"m.0h6mq": "Jacqueline Kennedy Onassis"}, "qid_topic_entity": {"Q165421": "Jacqueline Kennedy Onassis"}}, {"QuestionId": "WebQTest-1199", "RawQuestion": "what does kim kardashian work as?", "ProcessedQuestion": "what does kim kardashian work as", "Parses": [{"ParseId": "WebQTest-1199.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0261x8t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0261x8t ns:people.person.profession ?x .\n}\n", "PotentialTopicEntityMention": "kim kardashian", "TopicEntityName": "Kim Kardashian", "TopicEntityMid": "m.0261x8t", "InferentialChain": ["people.person.profession"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.012t_z", "EntityName": "Businessperson"}, {"AnswerType": "Entity", "AnswerArgument": "m.02hqyhw", "EntityName": "Fashion designer"}, {"AnswerType": "Entity", "AnswerArgument": "m.02hrh1q", "EntityName": "Actor"}, {"AnswerType": "Entity", "AnswerArgument": "m.03gjzk", "EntityName": "Television producer"}, {"AnswerType": "Entity", "AnswerArgument": "m.03gkb0", "EntityName": "Socialite"}, {"AnswerType": "Entity", "AnswerArgument": "m.09x_r", "EntityName": "Entrepreneur"}, {"AnswerType": "Entity", "AnswerArgument": "m.0d1pc", "EntityName": "Model"}, {"AnswerType": "Entity", "AnswerArgument": "m.0dypbr", "EntityName": "TV Personality"}]}], "topic_entity": {"m.0261x8t": "Kim Kardashian"}, "qid_topic_entity": {"Q186304": "Kim Kardashian"}}, {"QuestionId": "WebQTest-1008", "RawQuestion": "where is walton indiana?", "ProcessedQuestion": "where is walton indiana", "Parses": [{"ParseId": "WebQTest-1008.P0", "AnnotatorId": 4, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Low", "FreeFormComment": "? Not sure if they want GPS location"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0skd2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0skd2 ns:location.location.containedby ?x .\n}\n", "PotentialTopicEntityMention": "walton indiana", "TopicEntityName": "Walton", "TopicEntityMid": "m.0skd2", "InferentialChain": ["location.location.containedby"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.03chrxx", "EntityName": "Tipton Township"}, {"AnswerType": "Entity", "AnswerArgument": "m.03v1s", "EntityName": "Indiana"}, {"AnswerType": "Entity", "AnswerArgument": "m.09c7w0", "EntityName": "United States of America"}, {"AnswerType": "Entity", "AnswerArgument": "m.0ntm1", "EntityName": "Cass County"}]}], "topic_entity": {"m.0skd2": "Walton"}, "qid_topic_entity": {"Q2551289": "Walton"}}, {"QuestionId": "WebQTest-1080", "RawQuestion": "where did abraham and his descendants live?", "ProcessedQuestion": "where did abraham and his descendants live", "Parses": [{"ParseId": "WebQTest-1080.P0", "AnnotatorId": 3, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "VeryLow", "FreeFormComment": "??"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0pwb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0pwb ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\n}\n", "PotentialTopicEntityMention": "abraham", "TopicEntityName": "Abraham", "TopicEntityMid": "m.0pwb", "InferentialChain": ["people.person.places_lived", "people.place_lived.location"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0524v", "EntityName": "Mesopotamia"}, {"AnswerType": "Entity", "AnswerArgument": "m.0d9f2", "EntityName": "Canaan"}]}], "topic_entity": {"m.0pwb": "Abraham"}, "qid_topic_entity": {"Q9181": "Abraham"}}, {"QuestionId": "WebQTest-1827", "RawQuestion": "what can do in new york?", "ProcessedQuestion": "what can do in new york", "Parses": [{"ParseId": "WebQTest-1827.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02_286)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02_286 ns:travel.travel_destination.tourist_attractions ?x .\n}\n", "PotentialTopicEntityMention": "new york", "TopicEntityName": "New York City", "TopicEntityMid": "m.02_286", "InferentialChain": ["travel.travel_destination.tourist_attractions"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0_ymbw6", "EntityName": "Crocheron Park"}, {"AnswerType": "Entity", "AnswerArgument": "m.012vvtp_", "EntityName": "Travefy"}, {"AnswerType": "Entity", "AnswerArgument": "m.0163ff", "EntityName": "Rockefeller Center"}, {"AnswerType": "Entity", "AnswerArgument": "m.019vsd", "EntityName": "United Nations Headquarters"}, {"AnswerType": "Entity", "AnswerArgument": "m.01kht3", "EntityName": "St. Patrick's Cathedral"}, {"AnswerType": "Entity", "AnswerArgument": "m.01lnd3", "EntityName": "Flatiron Building"}, {"AnswerType": "Entity", "AnswerArgument": "m.01nbpn", "EntityName": "Little Italy"}, {"AnswerType": "Entity", "AnswerArgument": "m.01rs7b", "EntityName": "The Cloisters"}, {"AnswerType": "Entity", "AnswerArgument": "m.01rxnm", "EntityName": "Brooklyn Botanic Garden"}, {"AnswerType": "Entity", "AnswerArgument": "m.01rxr7", "EntityName": "Staten Island Ferry"}, {"AnswerType": "Entity", "AnswerArgument": "m.01rz3c", "EntityName": "Grand Central Terminal"}, {"AnswerType": "Entity", "AnswerArgument": "m.01zmd", "EntityName": "Chrysler Building"}, {"AnswerType": "Entity", "AnswerArgument": "m.021848", "EntityName": "Frick Collection"}, {"AnswerType": "Entity", "AnswerArgument": "m.023r9j", "EntityName": "American Museum of Natural History"}, {"AnswerType": "Entity", "AnswerArgument": "m.026cv0z", "EntityName": "A.I.R. Gallery"}, {"AnswerType": "Entity", "AnswerArgument": "m.02hjvb", "EntityName": "Darien Lake"}, {"AnswerType": "Entity", "AnswerArgument": "m.02nd_", "EntityName": "Empire State Building"}, {"AnswerType": "Entity", "AnswerArgument": "m.02qz9w", "EntityName": "Freedomland U.S.A."}, {"AnswerType": "Entity", "AnswerArgument": "m.02vz0kx", "EntityName": "Andrew Carnegie Mansion"}, {"AnswerType": "Entity", "AnswerArgument": "m.02z7b9_", "EntityName": "Louis Armstrong House"}, {"AnswerType": "Entity", "AnswerArgument": "m.03cfv35", "EntityName": "Headless Horseman Hayrides"}, {"AnswerType": "Entity", "AnswerArgument": "m.03vstx", "EntityName": "George Gustav Heye Center"}, {"AnswerType": "Entity", "AnswerArgument": "m.0403zkg", "EntityName": "Chelsea Art Museum"}, {"AnswerType": "Entity", "AnswerArgument": "m.04053sn", "EntityName": "FusionArts Museum"}, {"AnswerType": "Entity", "AnswerArgument": "m.048ltn", "EntityName": "National Academy Museum and School"}, {"AnswerType": "Entity", "AnswerArgument": "m.04h9fs", "EntityName": "Central Park Zoo"}, {"AnswerType": "Entity", "AnswerArgument": "m.04jpg0f", "EntityName": "Statue of Liberty National Monument"}, {"AnswerType": "Entity", "AnswerArgument": "m.04q3k0p", "EntityName": "New York Public Library for the Performing Arts"}, {"AnswerType": "Entity", "AnswerArgument": "m.04q4sg", "EntityName": "Franklin D. Roosevelt Presidential Library and Museum"}, {"AnswerType": "Entity", "AnswerArgument": "m.04sr12", "EntityName": "Battery Park"}, {"AnswerType": "Entity", "AnswerArgument": "m.051vfm", "EntityName": "American Folk Art Museum"}, {"AnswerType": "Entity", "AnswerArgument": "m.051xk9", "EntityName": "International Center of Photography"}, {"AnswerType": "Entity", "AnswerArgument": "m.0537mx", "EntityName": "Morgan Library & Museum"}, {"AnswerType": "Entity", "AnswerArgument": "m.05f80pd", "EntityName": "New York City Half Marathon"}, {"AnswerType": "Entity", "AnswerArgument": "m.05t0ps", "EntityName": "Wave Hill"}, {"AnswerType": "Entity", "AnswerArgument": "m.06fybq", "EntityName": "Peking"}, {"AnswerType": "Entity", "AnswerArgument": "m.06nhn3", "EntityName": "Japan Society of New York"}, {"AnswerType": "Entity", "AnswerArgument": "m.072p8", "EntityName": "Statue of Liberty"}, {"AnswerType": "Entity", "AnswerArgument": "m.07jwwf", "EntityName": "High Line"}, {"AnswerType": "Entity", "AnswerArgument": "m.07qdr", "EntityName": "Times Square"}, {"AnswerType": "Entity", "AnswerArgument": "m.07trd0", "EntityName": "Theodore Roosevelt Birthplace National Historic Site"}, {"AnswerType": "Entity", "AnswerArgument": "m.0989yy", "EntityName": "Museum of Modern Art Department of Film"}, {"AnswerType": "Entity", "AnswerArgument": "m.09c7b", "EntityName": "Metropolitan Museum of Art"}, {"AnswerType": "Entity", "AnswerArgument": "m.09c7v", "EntityName": "Central Park"}, {"AnswerType": "Entity", "AnswerArgument": "m.09sg3h", "EntityName": "New York Aquarium"}, {"AnswerType": "Entity", "AnswerArgument": "m.09sjx5", "EntityName": "Museum of Sex"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bh8czr", "EntityName": "Gavin Brown's Enterprise"}, {"AnswerType": "Entity", "AnswerArgument": "m.0brl0p", "EntityName": "New York International Fringe Festival"}, {"AnswerType": "Entity", "AnswerArgument": "m.0by0zd5", "EntityName": "Felix M. Warburg House"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bz7bg", "EntityName": "Broadway Theatre"}, {"AnswerType": "Entity", "AnswerArgument": "m.0c02dld", "EntityName": "Henry Clay Frick House"}, {"AnswerType": "Entity", "AnswerArgument": "m.0cc65g0", "EntityName": "New York Mini 10K"}, {"AnswerType": "Entity", "AnswerArgument": "m.0cv4c", "EntityName": "Brooklyn Bridge"}, {"AnswerType": "Entity", "AnswerArgument": "m.0gy74y", "EntityName": "Museum of Arts and Design"}, {"AnswerType": "Entity", "AnswerArgument": "m.0hhjk", "EntityName": "Museum of Modern Art"}, {"AnswerType": "Entity", "AnswerArgument": "m.0j_66", "EntityName": "Madison Square Garden"}, {"AnswerType": "Entity", "AnswerArgument": "m.0j32d_5", "EntityName": "Solomon R. Guggenheim Museum"}, {"AnswerType": "Entity", "AnswerArgument": "m.0jwvjyz", "EntityName": "Museum of Mathematics"}, {"AnswerType": "Entity", "AnswerArgument": "m.0jwy_gm", "EntityName": "UAE Healthy Kidney 10K"}, {"AnswerType": "Entity", "AnswerArgument": "m.0ll4_ht", "EntityName": "Tesla Science Center at Wardenclyffe"}, {"AnswerType": "Entity", "AnswerArgument": "m.0n5wy3b", "EntityName": "Imagination Playground at Burling Slip"}, {"AnswerType": "Entity", "AnswerArgument": "m.0pnb8", "EntityName": "Chinatown"}, {"AnswerType": "Entity", "AnswerArgument": "m.0q9h2", "EntityName": "Solomon R. Guggenheim Museum"}]}], "topic_entity": {"m.02_286": "New York City"}, "qid_topic_entity": {"Q60": "New York City"}}, {"QuestionId": "WebQTest-1767", "RawQuestion": "where was martin luther king jr buried?", "ProcessedQuestion": "where was martin luther king jr buried", "Parses": [{"ParseId": "WebQTest-1767.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.051cc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.051cc ns:people.deceased_person.place_of_burial ?x .\n}\n", "PotentialTopicEntityMention": "martin luther king jr", "TopicEntityName": "Martin Luther King, Jr.", "TopicEntityMid": "m.051cc", "InferentialChain": ["people.deceased_person.place_of_burial"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.050my1", "EntityName": "Martin Luther King, Jr. National Historic Site"}]}], "topic_entity": {"m.051cc": "Martin Luther King, Jr."}, "qid_topic_entity": {"Q8027": "Martin Luther King, Jr."}}, {"QuestionId": "WebQTest-1442", "RawQuestion": "what currency shall i take to croatia?", "ProcessedQuestion": "what currency shall i take to croatia", "Parses": [{"ParseId": "WebQTest-1442.P0", "AnnotatorId": 3, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01pj7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01pj7 ns:location.country.currency_used ?x .\n}\n", "PotentialTopicEntityMention": "croatia", "TopicEntityName": "Croatia", "TopicEntityMid": "m.01pj7", "InferentialChain": ["location.country.currency_used"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02z8jt", "EntityName": "Croatian kuna"}]}], "topic_entity": {"m.01pj7": "Croatia"}, "qid_topic_entity": {"Q224": "Croatia"}}, {"QuestionId": "WebQTest-423", "RawQuestion": "when's the last time the steelers won the superbowl?", "ProcessedQuestion": "when 's the last time the steelers won the superbowl", "Parses": [{"ParseId": "WebQTest-423.P0", "AnnotatorId": 5, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Low", "FreeFormComment": "? no max"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05tfm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05tfm ns:sports.sports_team.championships ?x .\n?x ns:common.topic.notable_types ns:m.01xljv1 .\n?x ns:time.event.end_date ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n", "PotentialTopicEntityMention": "steelers", "TopicEntityName": "Pittsburgh Steelers", "TopicEntityMid": "m.05tfm", "InferentialChain": ["sports.sports_team.championships"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.01xljv1", "EntityName": "Super bowl", "SourceNodeIndex": 0, "NodePredicate": "common.topic.notable_types", "ValueType": "String"}], "Time": null, "Order": {"SortOrder": "Descending", "Start": 0, "Count": 1, "SourceNodeIndex": 0, "NodePredicate": "time.event.end_date", "ValueType": "DateTime"}, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.04n7r5", "EntityName": "Super Bowl XLIII"}]}], "topic_entity": {"m.05tfm": "Pittsburgh Steelers"}, "qid_topic_entity": {"Q191477": "Pittsburgh Steelers"}}, {"QuestionId": "WebQTest-993", "RawQuestion": "who played meg in season 1 of family guy?", "ProcessedQuestion": "who played meg in season 1 of family guy", "Parses": [{"ParseId": "WebQTest-993.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.035szd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.035szd ns:tv.tv_character.appeared_in_tv_program ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.seasons ns:m.027gynh .\n}\n", "PotentialTopicEntityMention": "meg", "TopicEntityName": "Meg Griffin", "TopicEntityMid": "m.035szd", "InferentialChain": ["tv.tv_character.appeared_in_tv_program", "tv.regular_tv_appearance.actor"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.027gynh", "EntityName": "Family Guy - Season 1", "SourceNodeIndex": 0, "NodePredicate": "tv.regular_tv_appearance.seasons", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02k4b2", "EntityName": "Lacey Chabert"}]}], "topic_entity": {"m.035szd": "Meg Griffin"}, "qid_topic_entity": {"Q908772": "Meg Griffin"}}, {"QuestionId": "WebQTest-477", "RawQuestion": "which airport to fly into in buenos aires?", "ProcessedQuestion": "which airport to fly into in buenos aires", "Parses": [{"ParseId": "WebQTest-477.P0", "AnnotatorId": 4, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ly5m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ly5m ns:location.location.nearby_airports ?x .\n}\n", "PotentialTopicEntityMention": "buenos aires", "TopicEntityName": "Buenos Aires", "TopicEntityMid": "m.01ly5m", "InferentialChain": ["location.location.nearby_airports"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01_t37", "EntityName": "Aeroparque Jorge Newbery"}, {"AnswerType": "Entity", "AnswerArgument": "m.01ky3d", "EntityName": "Ministro Pistarini International Airport"}, {"AnswerType": "Entity", "AnswerArgument": "m.04fmtt8", "EntityName": "Don Torcuato Airport"}]}], "topic_entity": {"m.01ly5m": "Buenos Aires"}, "qid_topic_entity": {"Q1486": "Buenos Aires"}}, {"QuestionId": "WebQTest-1322", "RawQuestion": "what other movies has tom hardy played in?", "ProcessedQuestion": "what other movies has tom hardy played in", "Parses": [{"ParseId": "WebQTest-1322.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05xf75)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05xf75 ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n", "PotentialTopicEntityMention": "tom hardy", "TopicEntityName": "Tom Hardy", "TopicEntityMid": "m.05xf75", "InferentialChain": ["film.actor.film", "film.performance.film"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.010b8p1w", "EntityName": "The Revenant"}, {"AnswerType": "Entity", "AnswerArgument": "m.010s_rgr", "EntityName": "Legend"}, {"AnswerType": "Entity", "AnswerArgument": "m.012vy2c1", "EntityName": "London Road"}, {"AnswerType": "Entity", "AnswerArgument": "m.014lc_", "EntityName": "Star Trek Nemesis"}, {"AnswerType": "Entity", "AnswerArgument": "m.02852xd", "EntityName": "Scenes of a Sexual Nature"}, {"AnswerType": "Entity", "AnswerArgument": "m.02d3wv", "EntityName": "Mad Max: Fury Road"}, {"AnswerType": "Entity", "AnswerArgument": "m.02vvwqg", "EntityName": "RocknRolla"}, {"AnswerType": "Entity", "AnswerArgument": "m.02w90vl", "EntityName": "Flood"}, {"AnswerType": "Entity", "AnswerArgument": "m.03g_b58", "EntityName": "Thick as Thieves"}, {"AnswerType": "Entity", "AnswerArgument": "m.03m6sts", "EntityName": "W\u0394Z"}, {"AnswerType": "Entity", "AnswerArgument": "m.03tyb3", "EntityName": "The Virgin Queen"}, {"AnswerType": "Entity", "AnswerArgument": "m.0413tm", "EntityName": "Layer Cake"}, {"AnswerType": "Entity", "AnswerArgument": "m.04cwpt9", "EntityName": "Colditz"}, {"AnswerType": "Entity", "AnswerArgument": "m.04f2_t4", "EntityName": "The Inheritance"}, {"AnswerType": "Entity", "AnswerArgument": "m.04j0l1s", "EntityName": "Sweeney Todd"}, {"AnswerType": "Entity", "AnswerArgument": "m.04j1_st", "EntityName": "Lethal Dose"}, {"AnswerType": "Entity", "AnswerArgument": "m.04z_tyl", "EntityName": "Bronson"}, {"AnswerType": "Entity", "AnswerArgument": "m.05szl93", "EntityName": "Warrior"}, {"AnswerType": "Entity", "AnswerArgument": "m.05t1gh", "EntityName": "Minotaur"}, {"AnswerType": "Entity", "AnswerArgument": "m.0661ql3", "EntityName": "Inception"}, {"AnswerType": "Entity", "AnswerArgument": "m.0681f6", "EntityName": "Gideon's Daughter"}, {"AnswerType": "Entity", "AnswerArgument": "m.07yvsn", "EntityName": "Marie Antoinette"}, {"AnswerType": "Entity", "AnswerArgument": "m.0b62y7", "EntityName": "Dot the I"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bpm4yw", "EntityName": "The Dark Knight Rises"}, {"AnswerType": "Entity", "AnswerArgument": "m.0ck3fq1", "EntityName": "Deserter"}, {"AnswerType": "Entity", "AnswerArgument": "m.0d6_8r", "EntityName": "The Reckoning"}, {"AnswerType": "Entity", "AnswerArgument": "m.0dll_t2", "EntityName": "This Means War"}, {"AnswerType": "Entity", "AnswerArgument": "m.0f_j1n", "EntityName": "Splinter Cell"}, {"AnswerType": "Entity", "AnswerArgument": "m.0gfh84d", "EntityName": "Lawless"}, {"AnswerType": "Entity", "AnswerArgument": "m.0ggbhy7", "EntityName": "Tinker Tailor Soldier Spy"}, {"AnswerType": "Entity", "AnswerArgument": "m.0gp4pz", "EntityName": "EMR"}, {"AnswerType": "Entity", "AnswerArgument": "m.0gx8_b7", "EntityName": "Perfect"}, {"AnswerType": "Entity", "AnswerArgument": "m.0gxmc0c", "EntityName": "Sergeant Slaughter, My Big Brother"}, {"AnswerType": "Entity", "AnswerArgument": "m.0h4ymqz", "EntityName": "Sucker Punch"}, {"AnswerType": "Entity", "AnswerArgument": "m.0nh514x", "EntityName": "Everest"}, {"AnswerType": "Entity", "AnswerArgument": "m.0qm8b", "EntityName": "Black Hawk Down"}, {"AnswerType": "Entity", "AnswerArgument": "m.0tkj5w3", "EntityName": "The Drop"}, {"AnswerType": "Entity", "AnswerArgument": "m.0v3gp6q", "EntityName": "Locke"}, {"AnswerType": "Entity", "AnswerArgument": "m.0vv7fv2", "EntityName": "The Outsider"}, {"AnswerType": "Entity", "AnswerArgument": "m.0w7ptqf", "EntityName": "Child 44"}]}], "topic_entity": {"m.05xf75": "Tom Hardy"}, "qid_topic_entity": {"Q208026": "Tom Hardy"}}, {"QuestionId": "WebQTest-1462", "RawQuestion": "who is running for vice president with barack obama 2012?", "ProcessedQuestion": "who is running for vice president with barack obama 2012", "Parses": [{"ParseId": "WebQTest-1462.P0", "AnnotatorId": 4, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02mjmr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02mjmr ns:government.us_president.vice_president ?x .\n}\n", "PotentialTopicEntityMention": "barack obama", "TopicEntityName": "Barack Obama", "TopicEntityMid": "m.02mjmr", "InferentialChain": ["government.us_president.vice_president"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.012gx2", "EntityName": "Joe Biden"}]}], "topic_entity": {"m.02mjmr": "Barack Obama"}, "qid_topic_entity": {"Q76": "Barack Obama"}}, {"QuestionId": "WebQTest-847", "RawQuestion": "what countries are members of the security council?", "ProcessedQuestion": "what countries are members of the security council", "Parses": [{"ParseId": "WebQTest-847.P0", "AnnotatorId": 3, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07vnr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07vnr ns:base.unitednations.united_nations_body.members ?y .\n?y ns:base.unitednations.united_nations_body_membership.member ?x .\nFILTER(NOT EXISTS {?y ns:base.unitednations.united_nations_body_membership.from ?sk0} || \nEXISTS {?y ns:base.unitednations.united_nations_body_membership.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:base.unitednations.united_nations_body_membership.to ?sk2} || \nEXISTS {?y ns:base.unitednations.united_nations_body_membership.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n", "PotentialTopicEntityMention": "security council", "TopicEntityName": "United Nations Security Council", "TopicEntityMid": "m.07vnr", "InferentialChain": ["base.unitednations.united_nations_body.members", "base.unitednations.united_nations_body_membership.member"], "Constraints": [{"Operator": "LessOrEqual", "ArgumentType": "Value", "Argument": "2015-08-10", "EntityName": "", "SourceNodeIndex": 0, "NodePredicate": "base.unitednations.united_nations_body_membership.from", "ValueType": "DateTime"}, {"Operator": "GreaterOrEqual", "ArgumentType": "Value", "Argument": "2015-08-10", "EntityName": "", "SourceNodeIndex": 0, "NodePredicate": "base.unitednations.united_nations_body_membership.to", "ValueType": "DateTime"}], "Time": {"IsRelativeToNow": true, "Start": "0000-00-00", "End": "0000-00-00", "AssociatedConstraints": [0, 1], "PotentialTimeMention": null}, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01699", "EntityName": "Burkina Faso"}, {"AnswerType": "Entity", "AnswerArgument": "m.01crd5", "EntityName": "Vietnam"}, {"AnswerType": "Entity", "AnswerArgument": "m.01p8s", "EntityName": "Costa Rica"}, {"AnswerType": "Entity", "AnswerArgument": "m.01pj7", "EntityName": "Croatia"}, {"AnswerType": "Entity", "AnswerArgument": "m.06bnz", "EntityName": "Russia"}, {"AnswerType": "Entity", "AnswerArgument": "m.07ssc", "EntityName": "United Kingdom"}, {"AnswerType": "Entity", "AnswerArgument": "m.09c7w0", "EntityName": "United States of America"}, {"AnswerType": "Entity", "AnswerArgument": "m.0d05w3", "EntityName": "China"}, {"AnswerType": "Entity", "AnswerArgument": "m.0f8l9c", "EntityName": "France"}]}], "topic_entity": {"m.07vnr": "United Nations Security Council"}, "qid_topic_entity": {"Q37470": "United Nations Security Council"}}, {"QuestionId": "WebQTest-889", "RawQuestion": "what country did benito mussolini govern?", "ProcessedQuestion": "what country did benito mussolini govern", "Parses": [{"ParseId": "WebQTest-889.P0", "AnnotatorId": 1, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0177g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0177g ns:government.politician.government_positions_held ?y .\n?y ns:government.government_position_held.jurisdiction_of_office ?x .\n}\n", "PotentialTopicEntityMention": "benito mussolini", "TopicEntityName": "Benito Mussolini", "TopicEntityMid": "m.0177g", "InferentialChain": ["government.politician.government_positions_held", "government.government_position_held.jurisdiction_of_office"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.03rjj", "EntityName": "Italy"}]}], "topic_entity": {"m.0177g": "Benito Mussolini"}, "qid_topic_entity": {"Q23559": "Benito Mussolini"}}, {"QuestionId": "WebQTest-1147", "RawQuestion": "what is the zip code for jonesboro ar?", "ProcessedQuestion": "what is the zip code for jonesboro ar", "Parses": [{"ParseId": "WebQTest-1147.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0qskp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0qskp ns:location.citytown.postal_codes ?x .\n}\n", "PotentialTopicEntityMention": "jonesboro ar", "TopicEntityName": "Jonesboro", "TopicEntityMid": "m.0qskp", "InferentialChain": ["location.citytown.postal_codes"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01z4426", "EntityName": "72401"}, {"AnswerType": "Entity", "AnswerArgument": "m.01z4433", "EntityName": "72404"}, {"AnswerType": "Entity", "AnswerArgument": "m.01z45mm", "EntityName": "72403"}, {"AnswerType": "Entity", "AnswerArgument": "m.07nqgrr", "EntityName": "72402"}]}], "topic_entity": {"m.0qskp": "Jonesboro"}, "qid_topic_entity": {"Q61455": "Jonesboro"}}, {"QuestionId": "WebQTest-1055", "RawQuestion": "what to do with kids in essex?", "ProcessedQuestion": "what to do with kids in essex", "Parses": [{"ParseId": "WebQTest-1055.P0", "AnnotatorId": 1, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "VeryLow", "FreeFormComment": "?? "}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02ly_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02ly_ ns:travel.travel_destination.tourist_attractions ?x .\n}\n", "PotentialTopicEntityMention": "essex", "TopicEntityName": "Essex", "TopicEntityMid": "m.02ly_", "InferentialChain": ["travel.travel_destination.tourist_attractions"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.04g1431", "EntityName": "Beth Chatto Gardens"}, {"AnswerType": "Entity", "AnswerArgument": "m.05zjnd", "EntityName": "Colchester Zoo"}, {"AnswerType": "Entity", "AnswerArgument": "m.0ff9kn", "EntityName": "Waltham Abbey Royal Gunpowder Mills"}, {"AnswerType": "Entity", "AnswerArgument": "m.0fyfyd", "EntityName": "RHS Garden, Hyde Hall"}, {"AnswerType": "Entity", "AnswerArgument": "m.0k5wwrf", "EntityName": "Marsh Farm Country Park"}, {"AnswerType": "Entity", "AnswerArgument": "m.0k6f1n4", "EntityName": "Thorndon Country Park"}, {"AnswerType": "Entity", "AnswerArgument": "m.0k6f1nc", "EntityName": "Cudmore Grove Country Park"}, {"AnswerType": "Entity", "AnswerArgument": "m.0k6f1nr", "EntityName": "Green Island Gardens"}, {"AnswerType": "Entity", "AnswerArgument": "m.0k6f1p1", "EntityName": "Mistley Place Park"}, {"AnswerType": "Entity", "AnswerArgument": "m.0v3bszv", "EntityName": "Stansted Mountfitchet Castle"}]}], "topic_entity": {"m.02ly_": "Essex"}, "qid_topic_entity": {"Q23240": "Essex"}}, {"QuestionId": "WebQTest-1558", "RawQuestion": "who is john cena married to?", "ProcessedQuestion": "who is john cena married to", "Parses": [{"ParseId": "WebQTest-1558.P0", "AnnotatorId": 4, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ypx5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ypx5 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n", "PotentialTopicEntityMention": "john cena", "TopicEntityName": "John Cena", "TopicEntityMid": "m.01ypx5", "InferentialChain": ["people.person.spouse_s", "people.marriage.spouse"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.04ztj", "EntityName": "Marriage", "SourceNodeIndex": 0, "NodePredicate": "people.marriage.type_of_union", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.07n79hq", "EntityName": "Elizabeth Huberdeau"}]}], "topic_entity": {"m.01ypx5": "John Cena"}, "qid_topic_entity": {"Q44437": "John Cena"}}, {"QuestionId": "WebQTest-1658", "RawQuestion": "where do they speak turkish?", "ProcessedQuestion": "where do they speak turkish", "Parses": [{"ParseId": "WebQTest-1658.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02hwyss)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02hwyss ns:language.human_language.countries_spoken_in ?x .\n}\n", "PotentialTopicEntityMention": "turkish", "TopicEntityName": "Turkish Language", "TopicEntityMid": "m.02hwyss", "InferentialChain": ["language.human_language.countries_spoken_in"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01ppq", "EntityName": "Cyprus"}, {"AnswerType": "Entity", "AnswerArgument": "m.01znc_", "EntityName": "Turkey"}, {"AnswerType": "Entity", "AnswerArgument": "m.04fh3", "EntityName": "Republic of Kosovo"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bjv6", "EntityName": "Republic of Macedonia"}, {"AnswerType": "Entity", "AnswerArgument": "m.0h7x", "EntityName": "Austria"}]}], "topic_entity": {"m.02hwyss": "Turkish Language"}, "qid_topic_entity": {"Q256": "Turkish Language"}}, {"QuestionId": "WebQTest-1270", "RawQuestion": "what drugs lindsay lohan abuse?", "ProcessedQuestion": "what drugs lindsay lohan abuse", "Parses": [{"ParseId": "WebQTest-1270.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01pgzn_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01pgzn_ ns:base.popstra.celebrity.substance_abuse ?y .\n?y ns:base.popstra.substance_abuse.substance ?x .\n}\n", "PotentialTopicEntityMention": "lindsay lohan", "TopicEntityName": "Lindsay Lohan", "TopicEntityMid": "m.01pgzn_", "InferentialChain": ["base.popstra.celebrity.substance_abuse", "base.popstra.substance_abuse.substance"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.012mj", "EntityName": "Alcoholic beverage"}, {"AnswerType": "Entity", "AnswerArgument": "m.0256b", "EntityName": "Cocaine"}]}], "topic_entity": {"m.01pgzn_": "Lindsay Lohan"}, "qid_topic_entity": {"Q44903": "Lindsay Lohan"}}, {"QuestionId": "WebQTest-1500", "RawQuestion": "where is olympic national park located?", "ProcessedQuestion": "where is olympic national park located", "Parses": [{"ParseId": "WebQTest-1500.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015nrn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015nrn ns:base.usnationalparks.us_national_park.state ?x .\n}\n", "PotentialTopicEntityMention": "olympic national park", "TopicEntityName": "Olympic National Park", "TopicEntityMid": "m.015nrn", "InferentialChain": ["base.usnationalparks.us_national_park.state"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.081yw", "EntityName": "Washington"}]}], "topic_entity": {"m.015nrn": "Olympic National Park"}, "qid_topic_entity": {"Q372093": "Olympic National Park"}}, {"QuestionId": "WebQTest-1742", "RawQuestion": "what type of government japan have?", "ProcessedQuestion": "what type of government japan have", "Parses": [{"ParseId": "WebQTest-1742.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03_3d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03_3d ns:location.country.form_of_government ?x .\n}\n", "PotentialTopicEntityMention": "japan", "TopicEntityName": "Japan", "TopicEntityMid": "m.03_3d", "InferentialChain": ["location.country.form_of_government"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.018wl5", "EntityName": "Parliamentary system"}, {"AnswerType": "Entity", "AnswerArgument": "m.01fpfn", "EntityName": "Unitary state"}, {"AnswerType": "Entity", "AnswerArgument": "m.01q20", "EntityName": "Constitutional monarchy"}]}], "topic_entity": {"m.03_3d": "Japan"}, "qid_topic_entity": {"Q17": "Japan"}}, {"QuestionId": "WebQTest-1116", "RawQuestion": "what is the capital city of spain wiki answers?", "ProcessedQuestion": "what is the capital city of spain wiki answers", "Parses": [{"ParseId": "WebQTest-1116.P0", "AnnotatorId": 2, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mkj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mkj ns:location.country.capital ?x .\n}\n", "PotentialTopicEntityMention": "spain", "TopicEntityName": "Spain", "TopicEntityMid": "m.06mkj", "InferentialChain": ["location.country.capital"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.056_y", "EntityName": "Madrid"}]}], "topic_entity": {"m.06mkj": "Spain"}, "qid_topic_entity": {"Q29": "Spain"}}, {"QuestionId": "WebQTest-1091", "RawQuestion": "what type of religions are in the united states?", "ProcessedQuestion": "what type of religions are in the united states", "Parses": [{"ParseId": "WebQTest-1091.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09c7w0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09c7w0 ns:location.statistical_region.religions ?y .\n?y ns:location.religion_percentage.religion ?x .\n}\n", "PotentialTopicEntityMention": "united states", "TopicEntityName": "United States of America", "TopicEntityMid": "m.09c7w0", "InferentialChain": ["location.statistical_region.religions", "location.religion_percentage.religion"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01lp8", "EntityName": "Christianity"}, {"AnswerType": "Entity", "AnswerArgument": "m.03_gx", "EntityName": "Judaism"}, {"AnswerType": "Entity", "AnswerArgument": "m.03j6c", "EntityName": "Hinduism"}, {"AnswerType": "Entity", "AnswerArgument": "m.07w8f", "EntityName": "Unitarian Universalism"}, {"AnswerType": "Entity", "AnswerArgument": "m.092bf5", "EntityName": "Buddhism"}, {"AnswerType": "Entity", "AnswerArgument": "m.0flw86", "EntityName": "Islam"}, {"AnswerType": "Entity", "AnswerArgument": "m.0kpl", "EntityName": "Atheism"}]}], "topic_entity": {"m.09c7w0": "United States of America"}, "qid_topic_entity": {"Q30": "United States of America"}}, {"QuestionId": "WebQTest-480", "RawQuestion": "where does name pennsylvania come from?", "ProcessedQuestion": "where does name pennsylvania come from", "Parses": [{"ParseId": "WebQTest-480.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05tbn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05tbn ns:symbols.namesake.named_after ?x .\n}\n", "PotentialTopicEntityMention": "pennsylvania", "TopicEntityName": "Pennsylvania", "TopicEntityMid": "m.05tbn", "InferentialChain": ["symbols.namesake.named_after"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.03br25", "EntityName": "William Penn"}]}], "topic_entity": {"m.05tbn": "Pennsylvania"}, "qid_topic_entity": {"Q1400": "Pennsylvania"}}, {"QuestionId": "WebQTest-664", "RawQuestion": "what was firefox programmed in?", "ProcessedQuestion": "what was firefox programmed in", "Parses": [{"ParseId": "WebQTest-664.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01dyhm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01dyhm ns:computer.software.languages_used ?x .\n}\n", "PotentialTopicEntityMention": "firefox", "TopicEntityName": "Firefox", "TopicEntityMid": "m.01dyhm", "InferentialChain": ["computer.software.languages_used"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.011y70", "EntityName": "XUL"}, {"AnswerType": "Entity", "AnswerArgument": "m.015tjh", "EntityName": "Cascading Style Sheets"}, {"AnswerType": "Entity", "AnswerArgument": "m.02p97", "EntityName": "JavaScript"}, {"AnswerType": "Entity", "AnswerArgument": "m.03cjm6", "EntityName": "XBL"}, {"AnswerType": "Entity", "AnswerArgument": "m.0jgqg", "EntityName": "C++"}]}], "topic_entity": {"m.01dyhm": "Firefox"}, "qid_topic_entity": {"Q698": "Firefox"}}, {"QuestionId": "WebQTest-261", "RawQuestion": "what is cindy sherman known for?", "ProcessedQuestion": "what is cindy sherman known for", "Parses": [{"ParseId": "WebQTest-261.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.074g02)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.074g02 ns:people.person.profession ?x .\n}\n", "PotentialTopicEntityMention": "cindy sherman", "TopicEntityName": "Cindy Sherman", "TopicEntityMid": "m.074g02", "InferentialChain": ["people.person.profession"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02jknp", "EntityName": "Film director"}, {"AnswerType": "Entity", "AnswerArgument": "m.03hz6vv", "EntityName": "Visual Artist"}, {"AnswerType": "Entity", "AnswerArgument": "m.0lgw7", "EntityName": "Photographer"}, {"AnswerType": "Entity", "AnswerArgument": "m.0n1h", "EntityName": "Artist"}]}], "topic_entity": {"m.074g02": "Cindy Sherman"}, "qid_topic_entity": {"Q229455": "Cindy Sherman"}}, {"QuestionId": "WebQTest-1788", "RawQuestion": "what artistic style did henri rousseau work in?", "ProcessedQuestion": "what artistic style did henri rousseau work in", "Parses": [{"ParseId": "WebQTest-1788.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02rdf6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02rdf6 ns:visual_art.visual_artist.associated_periods_or_movements ?x .\n}\n", "PotentialTopicEntityMention": "henri rousseau", "TopicEntityName": "Henri Rousseau", "TopicEntityMid": "m.02rdf6", "InferentialChain": ["visual_art.visual_artist.associated_periods_or_movements"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.015r61", "EntityName": "Modern art"}, {"AnswerType": "Entity", "AnswerArgument": "m.015xrq", "EntityName": "Post-Impressionism"}, {"AnswerType": "Entity", "AnswerArgument": "m.01b8q0", "EntityName": "Na\u00efve art"}, {"AnswerType": "Entity", "AnswerArgument": "m.06s0d7", "EntityName": "Primitivism"}]}], "topic_entity": {"m.02rdf6": "Henri Rousseau"}, "qid_topic_entity": {"Q156386": "Henri Rousseau"}}, {"QuestionId": "WebQTest-1021", "RawQuestion": "what happened at benghazi?", "ProcessedQuestion": "what happened at benghazi", "Parses": [{"ParseId": "WebQTest-1021.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01czt9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01czt9 ns:location.location.events ?x .\n}\n", "PotentialTopicEntityMention": "benghazi", "TopicEntityName": "Benghazi", "TopicEntityMid": "m.01czt9", "InferentialChain": ["location.location.events"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0136_03w", "EntityName": "Operation Dignity Battle"}, {"AnswerType": "Entity", "AnswerArgument": "m.0136zn1t", "EntityName": "Battle of Benina Airport"}, {"AnswerType": "Entity", "AnswerArgument": "m.0gg5z_1", "EntityName": "First Battle of Benghazi"}, {"AnswerType": "Entity", "AnswerArgument": "m.0gj8wbw", "EntityName": "Second Battle of Benghazi"}, {"AnswerType": "Entity", "AnswerArgument": "m.0m1x86k", "EntityName": "2012 U.S. diplomatic missions attacks"}, {"AnswerType": "Entity", "AnswerArgument": "m.0n4bfmd", "EntityName": "2012 Benghazi attack"}, {"AnswerType": "Entity", "AnswerArgument": "m.0w1f1vz", "EntityName": "2013 Benghazi conflict"}]}], "topic_entity": {"m.01czt9": "Benghazi"}, "qid_topic_entity": {"Q40816": "Benghazi"}}, {"QuestionId": "WebQTest-572", "RawQuestion": "where did robin cook die?", "ProcessedQuestion": "where did robin cook die", "Parses": [{"ParseId": "WebQTest-572.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019jy5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019jy5 ns:people.deceased_person.place_of_death ?x .\n}\n", "PotentialTopicEntityMention": "robin cook", "TopicEntityName": "Robin Cook", "TopicEntityMid": "m.019jy5", "InferentialChain": ["people.deceased_person.place_of_death"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.012d9h", "EntityName": "Inverness"}]}], "topic_entity": {"m.019jy5": "Robin Cook"}, "qid_topic_entity": {"Q311214": "Robin Cook"}}, {"QuestionId": "WebQTest-126", "RawQuestion": "who wrote the jana gana mana?", "ProcessedQuestion": "who wrote the jana gana mana", "Parses": [{"ParseId": "WebQTest-126.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fl44)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fl44 ns:music.composition.composer ?x .\n}\n", "PotentialTopicEntityMention": "jana gana mana", "TopicEntityName": "Jana Gana Mana", "TopicEntityMid": "m.0fl44", "InferentialChain": ["music.composition.composer"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02vx721", "EntityName": "Ram Singh Thakur"}, {"AnswerType": "Entity", "AnswerArgument": "m.0d0mbj", "EntityName": "Rabindranath Tagore"}]}], "topic_entity": {"m.0fl44": "Jana Gana Mana"}, "qid_topic_entity": {"Q83099": "Jana Gana Mana"}}, {"QuestionId": "WebQTest-1449", "RawQuestion": "what was laura ingalls wilder famous for?", "ProcessedQuestion": "what was laura ingalls wilder famous for", "Parses": [{"ParseId": "WebQTest-1449.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01bt87)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01bt87 ns:people.person.profession ?x .\n}\n", "PotentialTopicEntityMention": "laura ingalls wilder", "TopicEntityName": "Laura Ingalls Wilder", "TopicEntityMid": "m.01bt87", "InferentialChain": ["people.person.profession"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01d30f", "EntityName": "Teacher"}, {"AnswerType": "Entity", "AnswerArgument": "m.0cbd2", "EntityName": "Writer"}, {"AnswerType": "Entity", "AnswerArgument": "m.0d8qb", "EntityName": "Journalist"}, {"AnswerType": "Entity", "AnswerArgument": "m.0kyk", "EntityName": "Author"}]}], "topic_entity": {"m.01bt87": "Laura Ingalls Wilder"}, "qid_topic_entity": {"Q237514": "Laura Ingalls Wilder"}}, {"QuestionId": "WebQTest-317", "RawQuestion": "where does russia import from?", "ProcessedQuestion": "where does russia import from", "Parses": [{"ParseId": "WebQTest-317.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06bnz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06bnz ns:location.statistical_region.places_imported_from ?y .\n?y ns:location.imports_and_exports.imported_from ?x .\n}\n", "PotentialTopicEntityMention": "russia", "TopicEntityName": "Russia", "TopicEntityMid": "m.06bnz", "InferentialChain": ["location.statistical_region.places_imported_from", "location.imports_and_exports.imported_from"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.07t_x", "EntityName": "Uzbekistan"}]}, {"ParseId": "WebQTest-317.P1", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07t21)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07t21 ns:location.statistical_region.places_imported_from ?y .\n?y ns:location.imports_and_exports.imported_from ?x .\n}\n", "PotentialTopicEntityMention": "russia", "TopicEntityName": "Ukraine", "TopicEntityMid": "m.07t21", "InferentialChain": ["location.statistical_region.places_imported_from", "location.imports_and_exports.imported_from"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.07t_x", "EntityName": "Uzbekistan"}]}], "topic_entity": {"m.06bnz": "Russia", "m.07t21": "Ukraine"}, "qid_topic_entity": {"Q159": "Russia", "Q212": "Ukraine"}}, {"QuestionId": "WebQTest-1858", "RawQuestion": "where does dave ramsey live?", "ProcessedQuestion": "where does dave ramsey live", "Parses": [{"ParseId": "WebQTest-1858.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03zf9h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03zf9h ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\n}\n", "PotentialTopicEntityMention": "dave ramsey", "TopicEntityName": "Dave Ramsey", "TopicEntityMid": "m.03zf9h", "InferentialChain": ["people.person.places_lived", "people.place_lived.location"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.05jbn", "EntityName": "Nashville"}]}], "topic_entity": {"m.03zf9h": "Dave Ramsey"}, "qid_topic_entity": {"Q5229632": "Dave Ramsey"}}, {"QuestionId": "WebQTest-1376", "RawQuestion": "what province is montreal canada located?", "ProcessedQuestion": "what province is montreal canada located", "Parses": [{"ParseId": "WebQTest-1376.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.052p7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.052p7 ns:base.biblioness.bibs_location.state ?x .\n}\n", "PotentialTopicEntityMention": "montreal canada", "TopicEntityName": "Montreal", "TopicEntityMid": "m.052p7", "InferentialChain": ["base.biblioness.bibs_location.state"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0694j", "EntityName": "Qu\u00e9bec"}]}, {"ParseId": "WebQTest-1376.P1", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.052p7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.052p7 ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.01nm .\n}\n", "PotentialTopicEntityMention": "montreal canada", "TopicEntityName": "Montreal", "TopicEntityMid": "m.052p7", "InferentialChain": ["location.location.containedby"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.01nm", "EntityName": "Canadian Province", "SourceNodeIndex": 0, "NodePredicate": "common.topic.notable_types", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0694j", "EntityName": "Qu\u00e9bec"}]}], "topic_entity": {"m.052p7": "Montreal"}, "qid_topic_entity": {"Q340": "Montreal"}}, {"QuestionId": "WebQTest-1877", "RawQuestion": "what kind of painter was wassily kandinsky?", "ProcessedQuestion": "what kind of painter was wassily kandinsky", "Parses": [{"ParseId": "WebQTest-1877.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0856z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0856z ns:visual_art.visual_artist.associated_periods_or_movements ?x .\n}\n", "PotentialTopicEntityMention": "wassily kandinsky", "TopicEntityName": "Wassily Kandinsky", "TopicEntityMid": "m.0856z", "InferentialChain": ["visual_art.visual_artist.associated_periods_or_movements"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.015r61", "EntityName": "Modern art"}, {"AnswerType": "Entity", "AnswerArgument": "m.0197s6", "EntityName": "Abstract art"}, {"AnswerType": "Entity", "AnswerArgument": "m.02xk0r", "EntityName": "Der Blaue Reiter"}, {"AnswerType": "Entity", "AnswerArgument": "m.04191d", "EntityName": "German Expressionism"}, {"AnswerType": "Entity", "AnswerArgument": "m.0pybl", "EntityName": "Expressionism"}]}], "topic_entity": {"m.0856z": "Wassily Kandinsky"}, "qid_topic_entity": {"Q61064": "Wassily Kandinsky"}}, {"QuestionId": "WebQTest-1701", "RawQuestion": "what county is st paul minnesota in?", "ProcessedQuestion": "what county is st paul minnesota in", "Parses": [{"ParseId": "WebQTest-1701.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b2lw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b2lw ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n", "PotentialTopicEntityMention": "st paul minnesota", "TopicEntityName": "Saint Paul", "TopicEntityMid": "m.0b2lw", "InferentialChain": ["location.location.containedby"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.0kpym_", "EntityName": "US County", "SourceNodeIndex": 0, "NodePredicate": "common.topic.notable_types", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0nh57", "EntityName": "Ramsey County"}]}], "topic_entity": {"m.0b2lw": "Saint Paul"}, "qid_topic_entity": {"Q28848": "Saint Paul"}}, {"QuestionId": "WebQTest-624", "RawQuestion": "who plays elena gilbert on vampire diaries?", "ProcessedQuestion": "who plays elena gilbert on vampire diaries", "Parses": [{"ParseId": "WebQTest-624.P0", "AnnotatorId": 3, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0790rw8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0790rw8 ns:tv.tv_character.appeared_in_tv_program ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.series ns:m.05sy2k_ .\n}\n", "PotentialTopicEntityMention": "elena gilbert", "TopicEntityName": "Elena Gilbert", "TopicEntityMid": "m.0790rw8", "InferentialChain": ["tv.tv_character.appeared_in_tv_program", "tv.regular_tv_appearance.actor"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.05sy2k_", "EntityName": "The Vampire Diaries", "SourceNodeIndex": 0, "NodePredicate": "tv.regular_tv_appearance.series", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.027nwk2", "EntityName": "Nina Dobrev"}]}], "topic_entity": {"m.0790rw8": "Elena Gilbert"}, "qid_topic_entity": {"Q908634": "Elena Gilbert"}}, {"QuestionId": "WebQTest-359", "RawQuestion": "what team does heskey play for?", "ProcessedQuestion": "what team does heskey play for", "Parses": [{"ParseId": "WebQTest-359.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01yj16)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01yj16 ns:base.schemastaging.athlete_extra.salary ?y .\n?y ns:base.schemastaging.athlete_salary.team ?x .\n}\n", "PotentialTopicEntityMention": "heskey", "TopicEntityName": "Emile Heskey", "TopicEntityMid": "m.01yj16", "InferentialChain": ["base.schemastaging.athlete_extra.salary", "base.schemastaging.athlete_salary.team"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.03d4g8", "EntityName": "Newcastle Jets FC"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bl8l", "EntityName": "Aston Villa F.C."}]}], "topic_entity": {"m.01yj16": "Emile Heskey"}, "qid_topic_entity": {"Q191162": "Emile Heskey"}}, {"QuestionId": "WebQTest-258", "RawQuestion": "which of the following does australia export the most?", "ProcessedQuestion": "which of the following does australia export the most", "Parses": [{"ParseId": "WebQTest-258.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0chghy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0chghy ns:location.statistical_region.major_exports ?y .\n?y ns:location.imports_exports_by_industry.industry ?x .\n}\n", "PotentialTopicEntityMention": "australia", "TopicEntityName": "Australia", "TopicEntityMid": "m.0chghy", "InferentialChain": ["location.statistical_region.major_exports", "location.imports_exports_by_industry.industry"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02h66y8", "EntityName": "Energy industry"}, {"AnswerType": "Entity", "AnswerArgument": "m.0hkf", "EntityName": "Agriculture"}]}], "topic_entity": {"m.0chghy": "Australia"}, "qid_topic_entity": {"Q408": "Australia"}}, {"QuestionId": "WebQTest-142", "RawQuestion": "who developed the tcp ip reference model?", "ProcessedQuestion": "who developed the tcp ip reference model", "Parses": [{"ParseId": "WebQTest-142.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07hzk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07hzk ns:base.argumentmaps.original_idea.innovator ?x .\n}\n", "PotentialTopicEntityMention": "tcp", "TopicEntityName": "Transmission Control Protocol", "TopicEntityMid": "m.07hzk", "InferentialChain": ["base.argumentmaps.original_idea.innovator"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01_z5v", "EntityName": "Robert  E. Kahn"}, {"AnswerType": "Entity", "AnswerArgument": "m.07z23", "EntityName": "Vint Cerf"}]}, {"ParseId": "WebQTest-142.P1", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07hzk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07hzk ns:law.invention.inventor ?x .\n}\n", "PotentialTopicEntityMention": "tcp", "TopicEntityName": "Transmission Control Protocol", "TopicEntityMid": "m.07hzk", "InferentialChain": ["law.invention.inventor"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01_z5v", "EntityName": "Robert  E. Kahn"}, {"AnswerType": "Entity", "AnswerArgument": "m.07z23", "EntityName": "Vint Cerf"}]}], "topic_entity": {"m.07hzk": "Transmission Control Protocol"}, "qid_topic_entity": {"Q8803": "Transmission Control Protocol"}}, {"QuestionId": "WebQTest-273", "RawQuestion": "when did michael jordan return to the nba?", "ProcessedQuestion": "when did michael jordan return to the nba", "Parses": [{"ParseId": "WebQTest-273.P0", "AnnotatorId": 1, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "VeryLow", "FreeFormComment": "??"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.054c1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.054c1 ns:sports.pro_athlete.sports_played_professionally ?y .\n?y ns:sports.pro_sports_played.career_start ?x .\n?y ns:sports.pro_sports_played.sport ns:m.018w8 .\n}\n", "PotentialTopicEntityMention": "michael jordan", "TopicEntityName": "Michael Jordan", "TopicEntityMid": "m.054c1", "InferentialChain": ["sports.pro_athlete.sports_played_professionally", "sports.pro_sports_played.career_start"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.018w8", "EntityName": "Basketball", "SourceNodeIndex": 0, "NodePredicate": "sports.pro_sports_played.sport", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Value", "AnswerArgument": "1984", "EntityName": null}]}], "topic_entity": {"m.054c1": "Michael Jordan"}, "qid_topic_entity": {"Q41421": "Michael Jordan"}}, {"QuestionId": "WebQTest-1726", "RawQuestion": "where is south portland?", "ProcessedQuestion": "where is south portland", "Parses": [{"ParseId": "WebQTest-1726.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0tpk4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0tpk4 ns:location.hud_county_place.county ?x .\n}\n", "PotentialTopicEntityMention": "south portland", "TopicEntityName": "South Portland", "TopicEntityMid": "m.0tpk4", "InferentialChain": ["location.hud_county_place.county"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0nm9h", "EntityName": "Cumberland County"}]}, {"ParseId": "WebQTest-1726.P1", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0tpk4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0tpk4 ns:location.location.containedby ?x .\n}\n", "PotentialTopicEntityMention": "south portland", "TopicEntityName": "South Portland", "TopicEntityMid": "m.0tpk4", "InferentialChain": ["location.location.containedby"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.050ks", "EntityName": "Maine"}, {"AnswerType": "Entity", "AnswerArgument": "m.09c7w0", "EntityName": "United States of America"}, {"AnswerType": "Entity", "AnswerArgument": "m.0nm9h", "EntityName": "Cumberland County"}]}], "topic_entity": {"m.0tpk4": "South Portland"}, "qid_topic_entity": {"Q1000166": "South Portland"}}, {"QuestionId": "WebQTest-920", "RawQuestion": "what schools did sir isaac newton go to?", "ProcessedQuestion": "what schools did sir isaac newton go to", "Parses": [{"ParseId": "WebQTest-920.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03s9v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03s9v ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n", "PotentialTopicEntityMention": "sir isaac newton", "TopicEntityName": "Isaac Newton", "TopicEntityMid": "m.03s9v", "InferentialChain": ["people.person.education", "education.education.institution"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.07tk7", "EntityName": "Trinity College, Cambridge"}, {"AnswerType": "Entity", "AnswerArgument": "m.0h37f2", "EntityName": "The King's School, Grantham"}]}], "topic_entity": {"m.03s9v": "Isaac Newton"}, "qid_topic_entity": {"Q935": "Isaac Newton"}}, {"QuestionId": "WebQTest-1733", "RawQuestion": "who or what influenced frank lloyd wright?", "ProcessedQuestion": "who or what influenced frank lloyd wright", "Parses": [{"ParseId": "WebQTest-1733.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02wlk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02wlk ns:influence.influence_node.influenced_by ?x .\n}\n", "PotentialTopicEntityMention": "frank lloyd wright", "TopicEntityName": "Frank Lloyd Wright", "TopicEntityMid": "m.02wlk", "InferentialChain": ["influence.influence_node.influenced_by"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01cqpy", "EntityName": "Ebenezer Howard"}, {"AnswerType": "Entity", "AnswerArgument": "m.01whq3q", "EntityName": "Georges I. Gurdjieff and Thomas De Hartmann"}, {"AnswerType": "Entity", "AnswerArgument": "m.06jmjj", "EntityName": "Bruce Price"}, {"AnswerType": "Entity", "AnswerArgument": "m.08304", "EntityName": "William Morris"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bwx3", "EntityName": "Henry David Thoreau"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bybqwn", "EntityName": "Elizabeth Gordon"}, {"AnswerType": "Entity", "AnswerArgument": "m.0dvns", "EntityName": "Louis Sullivan"}]}], "topic_entity": {"m.02wlk": "Frank Lloyd Wright"}, "qid_topic_entity": {"Q5604": "Frank Lloyd Wright"}}, {"QuestionId": "WebQTest-668", "RawQuestion": "what has kristen stewart acted in?", "ProcessedQuestion": "what has kristen stewart acted in", "Parses": [{"ParseId": "WebQTest-668.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07swvb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07swvb ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n", "PotentialTopicEntityMention": "kristen stewart", "TopicEntityName": "Kristen Stewart", "TopicEntityMid": "m.07swvb", "InferentialChain": ["film.actor.film", "film.performance.film"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0_g812d", "EntityName": "Still Alice"}, {"AnswerType": "Entity", "AnswerArgument": "m.0_vl_q6", "EntityName": "Equals"}, {"AnswerType": "Entity", "AnswerArgument": "m.0133dmyj", "EntityName": "Billy Lynn's Long Halftime Walk"}, {"AnswerType": "Entity", "AnswerArgument": "m.0295m6", "EntityName": "Catch That Kid"}, {"AnswerType": "Entity", "AnswerArgument": "m.029xhb", "EntityName": "Panic Room"}, {"AnswerType": "Entity", "AnswerArgument": "m.02nhxs", "EntityName": "Speak"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rj2v7", "EntityName": "What Just Happened"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rx2m5", "EntityName": "Into the Wild"}, {"AnswerType": "Entity", "AnswerArgument": "m.02wgbb", "EntityName": "The Flintstones in Viva Rock Vegas"}, {"AnswerType": "Entity", "AnswerArgument": "m.02z8bfh", "EntityName": "Fierce People"}, {"AnswerType": "Entity", "AnswerArgument": "m.03c7twt", "EntityName": "Adventureland"}, {"AnswerType": "Entity", "AnswerArgument": "m.03nm_fh", "EntityName": "Twilight"}, {"AnswerType": "Entity", "AnswerArgument": "m.04q86tb", "EntityName": "Welcome to the Rileys"}, {"AnswerType": "Entity", "AnswerArgument": "m.04ynd_", "EntityName": "Cold Creek Manor"}, {"AnswerType": "Entity", "AnswerArgument": "m.05b3kq9", "EntityName": "Cutlass"}, {"AnswerType": "Entity", "AnswerArgument": "m.05p5m5f", "EntityName": "The Cake Eaters"}, {"AnswerType": "Entity", "AnswerArgument": "m.05pdh86", "EntityName": "The Twilight Saga: New Moon"}, {"AnswerType": "Entity", "AnswerArgument": "m.05q7874", "EntityName": "The Runaways"}, {"AnswerType": "Entity", "AnswerArgument": "m.06wjwv", "EntityName": "The Thirteenth Year"}, {"AnswerType": "Entity", "AnswerArgument": "m.075wx7_", "EntityName": "Eclipse"}, {"AnswerType": "Entity", "AnswerArgument": "m.075wx89", "EntityName": "The Twilight Saga: Breaking Dawn - Part 1"}, {"AnswerType": "Entity", "AnswerArgument": "m.08ldl8", "EntityName": "Undertow"}, {"AnswerType": "Entity", "AnswerArgument": "m.09bw4_", "EntityName": "Jumper"}, {"AnswerType": "Entity", "AnswerArgument": "m.09qs_s", "EntityName": "Zathura"}, {"AnswerType": "Entity", "AnswerArgument": "m.0b6hmnc", "EntityName": "The Yellow Handkerchief"}, {"AnswerType": "Entity", "AnswerArgument": "m.0cp0t91", "EntityName": "On the Road"}, {"AnswerType": "Entity", "AnswerArgument": "m.0cty5n", "EntityName": "The Safety of Objects"}, {"AnswerType": "Entity", "AnswerArgument": "m.0d5jxc", "EntityName": "The Messengers"}, {"AnswerType": "Entity", "AnswerArgument": "m.0djz0rc", "EntityName": "The Twilight Saga: Breaking Dawn - Part 2"}, {"AnswerType": "Entity", "AnswerArgument": "m.0fjckn", "EntityName": "In the Land of Women"}, {"AnswerType": "Entity", "AnswerArgument": "m.0g5qs2k", "EntityName": "Snow White and the Huntsman"}, {"AnswerType": "Entity", "AnswerArgument": "m.0n4n1y_", "EntityName": "Snow White and the Huntsman 2"}, {"AnswerType": "Entity", "AnswerArgument": "m.0w06pqf", "EntityName": "The Big Shoe"}, {"AnswerType": "Entity", "AnswerArgument": "m.0w06rkh", "EntityName": "Clouds of Sils Maria"}, {"AnswerType": "Entity", "AnswerArgument": "m.0w1zl9t", "EntityName": "Camp X-Ray"}, {"AnswerType": "Entity", "AnswerArgument": "m.0ywy_65", "EntityName": "American Ultra"}, {"AnswerType": "Entity", "AnswerArgument": "m.0ywy9pl", "EntityName": "Anesthesia"}]}], "topic_entity": {"m.07swvb": "Kristen Stewart"}, "qid_topic_entity": {"Q126599": "Kristen Stewart"}}, {"QuestionId": "WebQTest-991", "RawQuestion": "who played donna on west wing?", "ProcessedQuestion": "who played donna on west wing", "Parses": [{"ParseId": "WebQTest-991.P0", "AnnotatorId": 5, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02kvknw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02kvknw ns:tv.tv_character.appeared_in_tv_program ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.series ns:m.0g60z .\n}\n", "PotentialTopicEntityMention": "donna", "TopicEntityName": "Donnatella Moss", "TopicEntityMid": "m.02kvknw", "InferentialChain": ["tv.tv_character.appeared_in_tv_program", "tv.regular_tv_appearance.actor"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.0g60z", "EntityName": "The West Wing", "SourceNodeIndex": 0, "NodePredicate": "tv.regular_tv_appearance.series", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.040t74", "EntityName": "Janel Moloney"}]}], "topic_entity": {"m.02kvknw": "Donnatella Moss"}, "qid_topic_entity": {"Q3036775": "Donnatella Moss"}}, {"QuestionId": "WebQTest-1626", "RawQuestion": "who wrote st trinians?", "ProcessedQuestion": "who wrote st trinians", "Parses": [{"ParseId": "WebQTest-1626.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01nxmb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01nxmb ns:fictional_universe.fictional_universe.created_by ?x .\n}\n", "PotentialTopicEntityMention": "st trinians", "TopicEntityName": "St Trinian's School", "TopicEntityMid": "m.01nxmb", "InferentialChain": ["fictional_universe.fictional_universe.created_by"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01v2jh", "EntityName": "Ronald Searle"}]}], "topic_entity": {"m.01nxmb": "St Trinian's School"}, "qid_topic_entity": {"Q3495306": "St Trinian's School"}}, {"QuestionId": "WebQTest-1257", "RawQuestion": "where is denmark south carolina?", "ProcessedQuestion": "where is denmark south carolina", "Parses": [{"ParseId": "WebQTest-1257.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_kl9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_kl9 ns:location.hud_county_place.county ?x .\n}\n", "PotentialTopicEntityMention": "denmark south carolina", "TopicEntityName": "Denmark", "TopicEntityMid": "m.0_kl9", "InferentialChain": ["location.hud_county_place.county"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0mw39", "EntityName": "Bamberg County"}]}, {"ParseId": "WebQTest-1257.P1", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_kl9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_kl9 ns:location.location.containedby ?x .\n}\n", "PotentialTopicEntityMention": "denmark south carolina", "TopicEntityName": "Denmark", "TopicEntityMid": "m.0_kl9", "InferentialChain": ["location.location.containedby"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.06yxd", "EntityName": "South Carolina"}, {"AnswerType": "Entity", "AnswerArgument": "m.09c7w0", "EntityName": "United States of America"}, {"AnswerType": "Entity", "AnswerArgument": "m.0mw39", "EntityName": "Bamberg County"}]}], "topic_entity": {"m.0_kl9": "Denmark"}, "qid_topic_entity": {"Q936697": "Denmark"}}, {"QuestionId": "WebQTest-531", "RawQuestion": "what style of music does michael jackson perform?", "ProcessedQuestion": "what style of music does michael jackson perform", "Parses": [{"ParseId": "WebQTest-531.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09889g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09889g ns:music.artist.genre ?x .\n}\n", "PotentialTopicEntityMention": "michael jackson", "TopicEntityName": "Michael Jackson", "TopicEntityMid": "m.09889g", "InferentialChain": ["music.artist.genre"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.021_z5", "EntityName": "New jack swing"}, {"AnswerType": "Entity", "AnswerArgument": "m.025sc50", "EntityName": "Contemporary R&B"}, {"AnswerType": "Entity", "AnswerArgument": "m.026z9", "EntityName": "Disco"}, {"AnswerType": "Entity", "AnswerArgument": "m.02bqnt", "EntityName": "Motown Sound"}, {"AnswerType": "Entity", "AnswerArgument": "m.02lkt", "EntityName": "Electronic music"}, {"AnswerType": "Entity", "AnswerArgument": "m.02lnbg", "EntityName": "Dance-pop"}, {"AnswerType": "Entity", "AnswerArgument": "m.02vjzr", "EntityName": "Adult contemporary music"}, {"AnswerType": "Entity", "AnswerArgument": "m.02x8m", "EntityName": "Funk"}, {"AnswerType": "Entity", "AnswerArgument": "m.03c34yl", "EntityName": "Post-disco"}, {"AnswerType": "Entity", "AnswerArgument": "m.05bt6j", "EntityName": "Pop rock"}, {"AnswerType": "Entity", "AnswerArgument": "m.064t9", "EntityName": "Pop music"}, {"AnswerType": "Entity", "AnswerArgument": "m.06by7", "EntityName": "Rock music"}, {"AnswerType": "Entity", "AnswerArgument": "m.06j6l", "EntityName": "Rhythm and blues"}, {"AnswerType": "Entity", "AnswerArgument": "m.0ggx5q", "EntityName": "Dance music"}, {"AnswerType": "Entity", "AnswerArgument": "m.0gywn", "EntityName": "Soul music"}]}], "topic_entity": {"m.09889g": "Michael Jackson"}, "qid_topic_entity": {"Q2831": "Michael Jackson"}}, {"QuestionId": "WebQTest-592", "RawQuestion": "when did shays rebellion start?", "ProcessedQuestion": "when did shays rebellion start", "Parses": [{"ParseId": "WebQTest-592.P0", "AnnotatorId": 1, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0x284)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0x284 ns:time.event.start_date ?x .\n}\n", "PotentialTopicEntityMention": "shays rebellion", "TopicEntityName": "Shays' Rebellion", "TopicEntityMid": "m.0x284", "InferentialChain": ["time.event.start_date"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Value", "AnswerArgument": "1786", "EntityName": null}]}], "topic_entity": {"m.0x284": "Shays' Rebellion"}, "qid_topic_entity": {"Q392601": "Shays' Rebellion"}}, {"QuestionId": "WebQTest-253", "RawQuestion": "what countries included in the uk?", "ProcessedQuestion": "what countries included in the uk", "Parses": [{"ParseId": "WebQTest-253.P0", "AnnotatorId": 3, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ssc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ssc ns:base.aareas.schema.administrative_area.administrative_children ?x .\n?x ns:base.aareas.schema.administrative_area.administrative_area_type ns:m.0hzjlmp .\n}\n", "PotentialTopicEntityMention": "uk", "TopicEntityName": "United Kingdom", "TopicEntityMid": "m.07ssc", "InferentialChain": ["base.aareas.schema.administrative_area.administrative_children"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.0hzjlmp", "EntityName": "UK constituent country", "SourceNodeIndex": 0, "NodePredicate": "base.aareas.schema.administrative_area.administrative_area_type", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02jx1", "EntityName": "England"}, {"AnswerType": "Entity", "AnswerArgument": "m.05bcl", "EntityName": "Northern Ireland"}, {"AnswerType": "Entity", "AnswerArgument": "m.06q1r", "EntityName": "Scotland"}, {"AnswerType": "Entity", "AnswerArgument": "m.0j5g9", "EntityName": "Wales"}]}], "topic_entity": {"m.07ssc": "United Kingdom"}, "qid_topic_entity": {"Q145": "United Kingdom"}}, {"QuestionId": "WebQTest-1600", "RawQuestion": "what honor did agatha christie receive in 1971?", "ProcessedQuestion": "what honor did agatha christie receive in 1971", "Parses": [{"ParseId": "WebQTest-1600.P0", "AnnotatorId": 1, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ldd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ldd ns:award.award_winner.awards_won ?y .\n?y ns:award.award_honor.award ?x .\nFILTER(NOT EXISTS {?y ns:award.award_honor.year ?sk0} || \nEXISTS {?y ns:award.award_honor.year ?sk1 . \nFILTER(xsd:datetime(?sk1) >= \"1971-01-01\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:award.award_honor.year ?sk2} || \nEXISTS {?y ns:award.award_honor.year ?sk3 . \nFILTER(xsd:datetime(?sk3) <= \"1971-12-31\"^^xsd:dateTime) })\n}\n", "PotentialTopicEntityMention": "agatha christie", "TopicEntityName": "Agatha Christie", "TopicEntityMid": "m.0ldd", "InferentialChain": ["award.award_winner.awards_won", "award.award_honor.award"], "Constraints": [{"Operator": "GreaterOrEqual", "ArgumentType": "Value", "Argument": "1971-01-01", "EntityName": "", "SourceNodeIndex": 0, "NodePredicate": "award.award_honor.year", "ValueType": "DateTime"}, {"Operator": "LessOrEqual", "ArgumentType": "Value", "Argument": "1971-12-31", "EntityName": "", "SourceNodeIndex": 0, "NodePredicate": "award.award_honor.year", "ValueType": "DateTime"}], "Time": {"IsRelativeToNow": false, "Start": "1971-01-01", "End": "1971-12-31", "AssociatedConstraints": [0, 1], "PotentialTimeMention": "1971"}, "Order": null, "Answers": []}], "topic_entity": {"m.0ldd": "Agatha Christie"}, "qid_topic_entity": {"Q35064": "Agatha Christie"}}, {"QuestionId": "WebQTest-1848", "RawQuestion": "what instrument does louis armstrong?", "ProcessedQuestion": "what instrument does louis armstrong", "Parses": [{"ParseId": "WebQTest-1848.P0", "AnnotatorId": 2, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04n32)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04n32 ns:music.group_member.instruments_played ?x .\n}\n", "PotentialTopicEntityMention": "louis armstrong", "TopicEntityName": "Louis Armstrong", "TopicEntityMid": "m.04n32", "InferentialChain": ["music.group_member.instruments_played"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.020w2", "EntityName": "Cornet"}, {"AnswerType": "Entity", "AnswerArgument": "m.07gql", "EntityName": "Trumpet"}]}], "topic_entity": {"m.04n32": "Louis Armstrong"}, "qid_topic_entity": {"Q1779": "Louis Armstrong"}}, {"QuestionId": "WebQTest-1781", "RawQuestion": "who or what influenced albert einstein?", "ProcessedQuestion": "who or what influenced albert einstein", "Parses": [{"ParseId": "WebQTest-1781.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jcx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jcx ns:influence.influence_node.influenced_by ?x .\n}\n", "PotentialTopicEntityMention": "albert einstein", "TopicEntityName": "Albert Einstein", "TopicEntityMid": "m.0jcx", "InferentialChain": ["influence.influence_node.influenced_by"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.012102", "EntityName": "Henry George"}, {"AnswerType": "Entity", "AnswerArgument": "m.015n8", "EntityName": "Baruch Spinoza"}, {"AnswerType": "Entity", "AnswerArgument": "m.015yk8", "EntityName": "Karl Pearson"}, {"AnswerType": "Entity", "AnswerArgument": "m.01bgwr", "EntityName": "Hermann Minkowski"}, {"AnswerType": "Entity", "AnswerArgument": "m.01dfd4", "EntityName": "Moritz Schlick"}, {"AnswerType": "Entity", "AnswerArgument": "m.026lj", "EntityName": "David Hume"}, {"AnswerType": "Entity", "AnswerArgument": "m.032l1", "EntityName": "Fyodor Dostoyevsky"}, {"AnswerType": "Entity", "AnswerArgument": "m.03cdg", "EntityName": "George Bernard Shaw"}, {"AnswerType": "Entity", "AnswerArgument": "m.03s9v", "EntityName": "Isaac Newton"}, {"AnswerType": "Entity", "AnswerArgument": "m.0434m", "EntityName": "James Clerk Maxwell"}, {"AnswerType": "Entity", "AnswerArgument": "m.04xfb", "EntityName": "Mahatma Gandhi"}, {"AnswerType": "Entity", "AnswerArgument": "m.05q658z", "EntityName": "Riazuddin"}, {"AnswerType": "Entity", "AnswerArgument": "m.05vy1", "EntityName": "Paul Val\u00e9ry"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bjvq", "EntityName": "Bernhard Riemann"}, {"AnswerType": "Entity", "AnswerArgument": "m.0dm1p", "EntityName": "Thomas Young"}, {"AnswerType": "Entity", "AnswerArgument": "m.0fcy0", "EntityName": "Ernst Mach"}, {"AnswerType": "Entity", "AnswerArgument": "m.0j3v", "EntityName": "Arthur Schopenhauer"}, {"AnswerType": "Entity", "AnswerArgument": "m.0m3hd", "EntityName": "Hendrik Lorentz"}]}], "topic_entity": {"m.0jcx": "Albert Einstein"}, "qid_topic_entity": {"Q937": "Albert Einstein"}}, {"QuestionId": "WebQTest-1911", "RawQuestion": "where did scott fitzgerald go to college?", "ProcessedQuestion": "where did scott fitzgerald go to college", "Parses": [{"ParseId": "WebQTest-1911.P0", "AnnotatorId": 5, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02zjd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02zjd ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n", "PotentialTopicEntityMention": "scott fitzgerald", "TopicEntityName": "F. Scott Fitzgerald", "TopicEntityMid": "m.02zjd", "InferentialChain": ["people.person.education", "education.education.institution"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.01y2hnl", "EntityName": "College/University", "SourceNodeIndex": 1, "NodePredicate": "common.topic.notable_types", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.05zl0", "EntityName": "Princeton University"}]}], "topic_entity": {"m.02zjd": "F. Scott Fitzgerald"}, "qid_topic_entity": {"Q93354": "F. Scott Fitzgerald"}}, {"QuestionId": "WebQTest-1926", "RawQuestion": "when did the libyan conflict start?", "ProcessedQuestion": "when did the libyan conflict start", "Parses": [{"ParseId": "WebQTest-1926.P0", "AnnotatorId": 1, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gh674m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gh674m ns:time.event.start_date ?x .\n}\n", "PotentialTopicEntityMention": "libyan conflict", "TopicEntityName": "2011 military intervention in Libya", "TopicEntityMid": "m.0gh674m", "InferentialChain": ["time.event.start_date"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Value", "AnswerArgument": "2011-03-19", "EntityName": null}]}], "topic_entity": {"m.0gh674m": "2011 military intervention in Libya"}, "qid_topic_entity": {"Q210714": "2011 military intervention in Libya"}}, {"QuestionId": "WebQTest-80", "RawQuestion": "what county is greeley colorado in?", "ProcessedQuestion": "what county is greeley colorado in", "Parses": [{"ParseId": "WebQTest-80.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0rczx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0rczx ns:location.hud_county_place.county ?x .\n}\n", "PotentialTopicEntityMention": "greeley colorado", "TopicEntityName": "Greeley", "TopicEntityMid": "m.0rczx", "InferentialChain": ["location.hud_county_place.county"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0n_ps", "EntityName": "Weld County"}]}, {"ParseId": "WebQTest-80.P1", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0rczx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0rczx ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n", "PotentialTopicEntityMention": "greeley colorado", "TopicEntityName": "Greeley", "TopicEntityMid": "m.0rczx", "InferentialChain": ["location.location.containedby"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.0kpym_", "EntityName": "US County", "SourceNodeIndex": 0, "NodePredicate": "common.topic.notable_types", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0n_ps", "EntityName": "Weld County"}]}], "topic_entity": {"m.0rczx": "Greeley"}, "qid_topic_entity": {"Q94274": "Greeley"}}, {"QuestionId": "WebQTest-1221", "RawQuestion": "what college did joakim noah?", "ProcessedQuestion": "what college did joakim noah", "Parses": [{"ParseId": "WebQTest-1221.P0", "AnnotatorId": 5, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c2yrf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c2yrf ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n", "PotentialTopicEntityMention": "joakim noah", "TopicEntityName": "Joakim Noah", "TopicEntityMid": "m.0c2yrf", "InferentialChain": ["people.person.education", "education.education.institution"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.01y2hnl", "EntityName": "College/University", "SourceNodeIndex": 1, "NodePredicate": "common.topic.notable_types", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0j_sncb", "EntityName": "University of Florida"}]}], "topic_entity": {"m.0c2yrf": "Joakim Noah"}, "qid_topic_entity": {"Q311735": "Joakim Noah"}}, {"QuestionId": "WebQTest-1628", "RawQuestion": "what type government does mexico have?", "ProcessedQuestion": "what type government does mexico have", "Parses": [{"ParseId": "WebQTest-1628.P0", "AnnotatorId": 2, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b90_r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b90_r ns:location.country.form_of_government ?x .\n}\n", "PotentialTopicEntityMention": "mexico", "TopicEntityName": "Mexico", "TopicEntityMid": "m.0b90_r", "InferentialChain": ["location.country.form_of_government"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01d9r3", "EntityName": "Presidential system"}, {"AnswerType": "Entity", "AnswerArgument": "m.0c9rw5", "EntityName": "Constitutional republic"}, {"AnswerType": "Entity", "AnswerArgument": "m.0j729", "EntityName": "Federal republic"}]}], "topic_entity": {"m.0b90_r": "Mexico"}, "qid_topic_entity": {"Q96": "Mexico"}}, {"QuestionId": "WebQTest-1268", "RawQuestion": "where did jay moriarty die?", "ProcessedQuestion": "where did jay moriarty die", "Parses": [{"ParseId": "WebQTest-1268.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04jswm8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04jswm8 ns:people.deceased_person.place_of_death ?x .\n}\n", "PotentialTopicEntityMention": "jay moriarty", "TopicEntityName": "Jay Moriarty", "TopicEntityMid": "m.04jswm8", "InferentialChain": ["people.deceased_person.place_of_death"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.04ty8", "EntityName": "Maldives"}]}], "topic_entity": {"m.04jswm8": "Jay Moriarty"}, "qid_topic_entity": {"Q3737389": "Jay Moriarty"}}, {"QuestionId": "WebQTest-1879", "RawQuestion": "what money does cuba use?", "ProcessedQuestion": "what money does cuba use", "Parses": [{"ParseId": "WebQTest-1879.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d04z6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d04z6 ns:location.country.currency_used ?x .\n}\n", "PotentialTopicEntityMention": "cuba", "TopicEntityName": "Cuba", "TopicEntityMid": "m.0d04z6", "InferentialChain": ["location.country.currency_used"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.049p2z", "EntityName": "Cuban peso"}, {"AnswerType": "Entity", "AnswerArgument": "m.049p6c", "EntityName": "Cuban convertible peso"}]}], "topic_entity": {"m.0d04z6": "Cuba"}, "qid_topic_entity": {"Q241": "Cuba"}}, {"QuestionId": "WebQTest-308", "RawQuestion": "who did reese witherspoon get married to?", "ProcessedQuestion": "who did reese witherspoon get married to", "Parses": [{"ParseId": "WebQTest-308.P0", "AnnotatorId": 4, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0n6f8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0n6f8 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\nFILTER(NOT EXISTS {?y ns:people.marriage.from ?sk0} || \nEXISTS {?y ns:people.marriage.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.marriage.to ?sk2} || \nEXISTS {?y ns:people.marriage.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n", "PotentialTopicEntityMention": "reese witherspoon", "TopicEntityName": "Reese Witherspoon", "TopicEntityMid": "m.0n6f8", "InferentialChain": ["people.person.spouse_s", "people.marriage.spouse"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.04ztj", "EntityName": "Marriage", "SourceNodeIndex": 0, "NodePredicate": "people.marriage.type_of_union", "ValueType": "String"}, {"Operator": "LessOrEqual", "ArgumentType": "Value", "Argument": "2015-08-10", "EntityName": "", "SourceNodeIndex": 0, "NodePredicate": "people.marriage.from", "ValueType": "DateTime"}, {"Operator": "GreaterOrEqual", "ArgumentType": "Value", "Argument": "2015-08-10", "EntityName": "", "SourceNodeIndex": 0, "NodePredicate": "people.marriage.to", "ValueType": "DateTime"}], "Time": {"IsRelativeToNow": true, "Start": "0000-00-00", "End": "0000-00-00", "AssociatedConstraints": [1, 2], "PotentialTimeMention": null}, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0gxm_yg", "EntityName": "Jim Toth"}]}], "topic_entity": {"m.0n6f8": "Reese Witherspoon"}, "qid_topic_entity": {"Q44063": "Reese Witherspoon"}}, {"QuestionId": "WebQTest-1940", "RawQuestion": "who do islamic people follow?", "ProcessedQuestion": "who do islamic people follow", "Parses": [{"ParseId": "WebQTest-1940.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0flw86)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0flw86 ns:religion.religion.deities ?x .\n}\n", "PotentialTopicEntityMention": "islamic", "TopicEntityName": "Islam", "TopicEntityMid": "m.0flw86", "InferentialChain": ["religion.religion.deities"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.055v4c", "EntityName": "Ramdev Pir"}, {"AnswerType": "Entity", "AnswerArgument": "m.0d05l6", "EntityName": "God"}, {"AnswerType": "Entity", "AnswerArgument": "m.0jfd", "EntityName": "Allah"}]}], "topic_entity": {"m.0flw86": "Islam"}, "qid_topic_entity": {"Q432": "Islam"}}, {"QuestionId": "WebQTest-908", "RawQuestion": "what awards gary paulsen won?", "ProcessedQuestion": "what awards gary paulsen won", "Parses": [{"ParseId": "WebQTest-908.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04fpcx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04fpcx ns:award.award_winner.awards_won ?y .\n?y ns:award.award_honor.award ?x .\n}\n", "PotentialTopicEntityMention": "gary paulsen", "TopicEntityName": "Gary Paulsen", "TopicEntityMid": "m.04fpcx", "InferentialChain": ["award.award_winner.awards_won", "award.award_honor.award"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01cd7p", "EntityName": "John Newbery Medal"}, {"AnswerType": "Entity", "AnswerArgument": "m.027x4ws", "EntityName": "Dorothy Canfield Fisher Children's Book Award"}, {"AnswerType": "Entity", "AnswerArgument": "m.0463dxd", "EntityName": "Margaret Edwards Award"}, {"AnswerType": "Entity", "AnswerArgument": "m.04p1pmd", "EntityName": "Spur Award for Best Juvenile Fiction"}, {"AnswerType": "Entity", "AnswerArgument": "m.04p1pmh", "EntityName": "Spur Award for Best Juvenile Nonfiction"}, {"AnswerType": "Entity", "AnswerArgument": "m.09kkqzd", "EntityName": "Anne V. Zarrow Award for Young Readers' Literature"}, {"AnswerType": "Entity", "AnswerArgument": "m.0djddy", "EntityName": "Regina Medal"}]}], "topic_entity": {"m.04fpcx": "Gary Paulsen"}, "qid_topic_entity": {"Q718463": "Gary Paulsen"}}, {"QuestionId": "WebQTest-166", "RawQuestion": "what was dr seuss education?", "ProcessedQuestion": "what was dr seuss education", "Parses": [{"ParseId": "WebQTest-166.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02g3w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02g3w ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n", "PotentialTopicEntityMention": "dr seuss", "TopicEntityName": "Theodore Lesieg", "TopicEntityMid": "m.02g3w", "InferentialChain": ["people.person.education", "education.education.institution"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02bqy", "EntityName": "Dartmouth College"}, {"AnswerType": "Entity", "AnswerArgument": "m.07tgn", "EntityName": "University of Oxford"}, {"AnswerType": "Entity", "AnswerArgument": "m.0ym1n", "EntityName": "Lincoln College, Oxford"}]}], "topic_entity": {"m.02g3w": "Theodore Lesieg"}, "qid_topic_entity": {"Q298685": "Theodore Lesieg"}}, {"QuestionId": "WebQTest-537", "RawQuestion": "what has charlie hunnam been in?", "ProcessedQuestion": "what has charlie hunnam been in", "Parses": [{"ParseId": "WebQTest-537.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.057yk8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.057yk8 ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n", "PotentialTopicEntityMention": "charlie hunnam", "TopicEntityName": "Charlie Hunnam", "TopicEntityMid": "m.057yk8", "InferentialChain": ["film.actor.film", "film.performance.film"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "g.11b6gq6dl2", "EntityName": "Knights of the Roundtable: King Arthur"}, {"AnswerType": "Entity", "AnswerArgument": "m.02cbhg", "EntityName": "Cold Mountain"}, {"AnswerType": "Entity", "AnswerArgument": "m.02z0nhq", "EntityName": "Nicholas Nickleby"}, {"AnswerType": "Entity", "AnswerArgument": "m.04y5gz", "EntityName": "Whatever Happened to Harold Smith?"}, {"AnswerType": "Entity", "AnswerArgument": "m.079s_7", "EntityName": "Green Street"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bk88p", "EntityName": "Abandon"}, {"AnswerType": "Entity", "AnswerArgument": "m.0fh2v5", "EntityName": "Children of Men"}, {"AnswerType": "Entity", "AnswerArgument": "m.0g55y4p", "EntityName": "The Ledge"}, {"AnswerType": "Entity", "AnswerArgument": "m.0gx0plf", "EntityName": "Deadfall"}, {"AnswerType": "Entity", "AnswerArgument": "m.0gyffmd", "EntityName": "Frankie Go Boom"}, {"AnswerType": "Entity", "AnswerArgument": "m.0h0yd81", "EntityName": "Pacific Rim"}, {"AnswerType": "Entity", "AnswerArgument": "m.0zn1hg0", "EntityName": "Crimson Peak"}]}], "topic_entity": {"m.057yk8": "Charlie Hunnam"}, "qid_topic_entity": {"Q356294": "Charlie Hunnam"}}, {"QuestionId": "WebQTest-963", "RawQuestion": "who is the miami dolphins quarterback?", "ProcessedQuestion": "who is the miami dolphins quarterback", "Parses": [{"ParseId": "WebQTest-963.P0", "AnnotatorId": 2, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04vn5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04vn5 ns:sports.sports_team.roster ?y .\n?y ns:sports.sports_team_roster.player ?x .\n?y ns:sports.sports_team_roster.position ns:m.06b1q .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n", "PotentialTopicEntityMention": "miami dolphins", "TopicEntityName": "Miami Dolphins", "TopicEntityMid": "m.04vn5", "InferentialChain": ["sports.sports_team.roster", "sports.sports_team_roster.player"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.06b1q", "EntityName": "Quarterback", "SourceNodeIndex": 0, "NodePredicate": "sports.sports_team_roster.position", "ValueType": "String"}, {"Operator": "LessOrEqual", "ArgumentType": "Value", "Argument": "2015-08-10", "EntityName": "", "SourceNodeIndex": 0, "NodePredicate": "sports.sports_team_roster.from", "ValueType": "DateTime"}, {"Operator": "GreaterOrEqual", "ArgumentType": "Value", "Argument": "2015-08-10", "EntityName": "", "SourceNodeIndex": 0, "NodePredicate": "sports.sports_team_roster.to", "ValueType": "DateTime"}], "Time": {"IsRelativeToNow": true, "Start": "0000-00-00", "End": "0000-00-00", "AssociatedConstraints": [1, 2], "PotentialTimeMention": null}, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.027n35s", "EntityName": "Matt Moore"}, {"AnswerType": "Entity", "AnswerArgument": "m.04q9syl", "EntityName": "Ryan Tannehill"}]}], "topic_entity": {"m.04vn5": "Miami Dolphins"}, "qid_topic_entity": {"Q223243": "Miami Dolphins"}}, {"QuestionId": "WebQTest-246", "RawQuestion": "what was nikola tesla inventions?", "ProcessedQuestion": "what was nikola tesla inventions", "Parses": [{"ParseId": "WebQTest-246.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05d1y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05d1y ns:law.inventor.inventions ?x .\n}\n", "PotentialTopicEntityMention": "nikola tesla", "TopicEntityName": "Nikola Tesla", "TopicEntityMid": "m.05d1y", "InferentialChain": ["law.inventor.inventions"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01s499", "EntityName": "Neon lamp"}, {"AnswerType": "Entity", "AnswerArgument": "m.02p196m", "EntityName": "Induction motor"}, {"AnswerType": "Entity", "AnswerArgument": "m.08262", "EntityName": "Wireless telegraphy"}, {"AnswerType": "Entity", "AnswerArgument": "m.09pf_", "EntityName": "Three-phase electric power"}, {"AnswerType": "Entity", "AnswerArgument": "m.09rh1", "EntityName": "Tesla coil"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bt33", "EntityName": "Alternating current"}, {"AnswerType": "Entity", "AnswerArgument": "m.0qjjc", "EntityName": "Remote control"}]}], "topic_entity": {"m.05d1y": "Nikola Tesla"}, "qid_topic_entity": {"Q9036": "Nikola Tesla"}}, {"QuestionId": "WebQTest-1824", "RawQuestion": "what type of currency do they use in spain?", "ProcessedQuestion": "what type of currency do they use in spain", "Parses": [{"ParseId": "WebQTest-1824.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mkj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mkj ns:location.country.currency_used ?x .\n}\n", "PotentialTopicEntityMention": "spain", "TopicEntityName": "Spain", "TopicEntityMid": "m.06mkj", "InferentialChain": ["location.country.currency_used"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02l6h", "EntityName": "Euro"}]}], "topic_entity": {"m.06mkj": "Spain"}, "qid_topic_entity": {"Q29": "Spain"}}, {"QuestionId": "WebQTest-616", "RawQuestion": "what was queen elizabeth ii childhood nickname?", "ProcessedQuestion": "what was queen elizabeth ii childhood nickname", "Parses": [{"ParseId": "WebQTest-616.P0", "AnnotatorId": 1, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Low", "FreeFormComment": "?"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d1_f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d1_f ns:base.schemastaging.context_name.nickname ?x .\n}\n", "PotentialTopicEntityMention": "elizabeth ii", "TopicEntityName": "Elizabeth II", "TopicEntityMid": "m.0d1_f", "InferentialChain": ["base.schemastaging.context_name.nickname"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Value", "AnswerArgument": "Elizabeth II", "EntityName": null}, {"AnswerType": "Value", "AnswerArgument": "Lilibet", "EntityName": null}]}], "topic_entity": {"m.0d1_f": "Elizabeth II"}, "qid_topic_entity": {"Q9682": "Elizabeth II"}}, {"QuestionId": "WebQTest-417", "RawQuestion": "who plays kenneth?", "ProcessedQuestion": "who plays kenneth", "Parses": [{"ParseId": "WebQTest-417.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0272jt5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0272jt5 ns:tv.tv_character.appeared_in_tv_program ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n}\n", "PotentialTopicEntityMention": "kenneth", "TopicEntityName": "Kenneth Parcell", "TopicEntityMid": "m.0272jt5", "InferentialChain": ["tv.tv_character.appeared_in_tv_program", "tv.regular_tv_appearance.actor"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0h27vc", "EntityName": "Jack McBrayer"}]}], "topic_entity": {"m.0272jt5": "Kenneth Parcell"}, "qid_topic_entity": {"Q6390576": "Kenneth Parcell"}}, {"QuestionId": "WebQTest-652", "RawQuestion": "what kind of hispanic is selena gomez?", "ProcessedQuestion": "what kind of hispanic is selena gomez", "Parses": [{"ParseId": "WebQTest-652.P0", "AnnotatorId": 2, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "VeryLow", "FreeFormComment": "??"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gs6vr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gs6vr ns:people.person.ethnicity ?x .\n}\n", "PotentialTopicEntityMention": "selena gomez", "TopicEntityName": "Selena Gomez", "TopicEntityMid": "m.0gs6vr", "InferentialChain": ["people.person.ethnicity"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.09k5jvk", "EntityName": "Mexicans"}, {"AnswerType": "Entity", "AnswerArgument": "m.0xnvg", "EntityName": "Italian American"}]}], "topic_entity": {"m.0gs6vr": "Selena Gomez"}, "qid_topic_entity": {"Q83287": "Selena Gomez"}}, {"QuestionId": "WebQTest-16", "RawQuestion": "what countries are part of the uk?", "ProcessedQuestion": "what countries are part of the uk", "Parses": [{"ParseId": "WebQTest-16.P0", "AnnotatorId": 3, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ssc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ssc ns:base.aareas.schema.administrative_area.administrative_children ?x .\n?x ns:base.aareas.schema.administrative_area.administrative_area_type ns:m.0hzjlmp .\n}\n", "PotentialTopicEntityMention": "uk", "TopicEntityName": "United Kingdom", "TopicEntityMid": "m.07ssc", "InferentialChain": ["base.aareas.schema.administrative_area.administrative_children"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.0hzjlmp", "EntityName": "UK constituent country", "SourceNodeIndex": 0, "NodePredicate": "base.aareas.schema.administrative_area.administrative_area_type", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02jx1", "EntityName": "England"}, {"AnswerType": "Entity", "AnswerArgument": "m.05bcl", "EntityName": "Northern Ireland"}, {"AnswerType": "Entity", "AnswerArgument": "m.06q1r", "EntityName": "Scotland"}, {"AnswerType": "Entity", "AnswerArgument": "m.0j5g9", "EntityName": "Wales"}]}], "topic_entity": {"m.07ssc": "United Kingdom"}, "qid_topic_entity": {"Q145": "United Kingdom"}}, {"QuestionId": "WebQTest-294", "RawQuestion": "who was carolus linnaeus?", "ProcessedQuestion": "who was carolus linnaeus", "Parses": [{"ParseId": "WebQTest-294.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01lwd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01lwd ns:people.person.profession ?x .\n}\n", "PotentialTopicEntityMention": "carolus linnaeus", "TopicEntityName": "Carl Linnaeus", "TopicEntityMid": "m.01lwd", "InferentialChain": ["people.person.profession"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02h6p1f", "EntityName": "Botanist"}, {"AnswerType": "Entity", "AnswerArgument": "m.05t4q", "EntityName": "Physician"}, {"AnswerType": "Entity", "AnswerArgument": "m.06q2q", "EntityName": "Scientist"}, {"AnswerType": "Entity", "AnswerArgument": "m.07lqg0", "EntityName": "Biologist"}]}], "topic_entity": {"m.01lwd": "Carl Linnaeus"}, "qid_topic_entity": {"Q1043": "Carl Linnaeus"}}, {"QuestionId": "WebQTest-703", "RawQuestion": "what currency should i take to mexico?", "ProcessedQuestion": "what currency should i take to mexico", "Parses": [{"ParseId": "WebQTest-703.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b90_r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b90_r ns:location.country.currency_used ?x .\n}\n", "PotentialTopicEntityMention": "mexico", "TopicEntityName": "Mexico", "TopicEntityMid": "m.0b90_r", "InferentialChain": ["location.country.currency_used"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.012ts8", "EntityName": "Mexican peso"}]}], "topic_entity": {"m.0b90_r": "Mexico"}, "qid_topic_entity": {"Q96": "Mexico"}}, {"QuestionId": "WebQTest-1489", "RawQuestion": "what character did billy d williams play in star wars?", "ProcessedQuestion": "what character did billy d williams play in star wars", "Parses": [{"ParseId": "WebQTest-1489.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027_sn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027_sn ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.0g55yqj .\n}\n", "PotentialTopicEntityMention": "billy d williams", "TopicEntityName": "Billy Dee Williams", "TopicEntityMid": "m.027_sn", "InferentialChain": ["film.actor.film", "film.performance.character"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.0g55yqj", "EntityName": "Robot Chicken: Star Wars Episode III", "SourceNodeIndex": 0, "NodePredicate": "film.performance.film", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0ddrb", "EntityName": "Lando Calrissian"}]}, {"ParseId": "WebQTest-1489.P1", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027_sn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027_sn ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.0f3m1 .\n}\n", "PotentialTopicEntityMention": "billy d williams", "TopicEntityName": "Billy Dee Williams", "TopicEntityMid": "m.027_sn", "InferentialChain": ["film.actor.film", "film.performance.character"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.0f3m1", "EntityName": "Star Wars Episode V: The Empire Strikes Back", "SourceNodeIndex": 0, "NodePredicate": "film.performance.film", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0ddrb", "EntityName": "Lando Calrissian"}]}, {"ParseId": "WebQTest-1489.P2", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027_sn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027_sn ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.0ddjy .\n}\n", "PotentialTopicEntityMention": "billy d williams", "TopicEntityName": "Billy Dee Williams", "TopicEntityMid": "m.027_sn", "InferentialChain": ["film.actor.film", "film.performance.character"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.0ddjy", "EntityName": "Return of the Jedi", "SourceNodeIndex": 0, "NodePredicate": "film.performance.film", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0ddrb", "EntityName": "Lando Calrissian"}]}], "topic_entity": {"m.027_sn": "Billy Dee Williams"}, "qid_topic_entity": {"Q358345": "Billy Dee Williams"}}, {"QuestionId": "WebQTest-156", "RawQuestion": "what time zone am i in california?", "ProcessedQuestion": "what time zone am i in california", "Parses": [{"ParseId": "WebQTest-156.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01n7q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01n7q ns:location.location.time_zones ?x .\n}\n", "PotentialTopicEntityMention": "california", "TopicEntityName": "California", "TopicEntityMid": "m.01n7q", "InferentialChain": ["location.location.time_zones"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02lcqs", "EntityName": "Pacific Time Zone"}]}], "topic_entity": {"m.01n7q": "California"}, "qid_topic_entity": {"Q99": "California"}}, {"QuestionId": "WebQTest-1763", "RawQuestion": "who are the st louis cardinals coaches?", "ProcessedQuestion": "who are the st louis cardinals coaches", "Parses": [{"ParseId": "WebQTest-1763.P0", "AnnotatorId": 4, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06x68)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06x68 ns:baseball.baseball_team.current_coaches ?y .\n?y ns:baseball.current_coaching_tenure.baseball_coach ?x .\n}\n", "PotentialTopicEntityMention": "st louis cardinals", "TopicEntityName": "St. Louis Cardinals", "TopicEntityMid": "m.06x68", "InferentialChain": ["baseball.baseball_team.current_coaches", "baseball.current_coaching_tenure.baseball_coach"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0271dv6", "EntityName": "Joe Pettini"}, {"AnswerType": "Entity", "AnswerArgument": "m.02p7knr", "EntityName": "Marty Mason"}, {"AnswerType": "Entity", "AnswerArgument": "m.03_507", "EntityName": "Hal McRae"}, {"AnswerType": "Entity", "AnswerArgument": "m.07sckg", "EntityName": "Dave Duncan"}, {"AnswerType": "Entity", "AnswerArgument": "m.07vcky", "EntityName": "Jos\u00e9 Oquendo"}, {"AnswerType": "Entity", "AnswerArgument": "m.0glr18", "EntityName": "Dave McKay"}]}], "topic_entity": {"m.06x68": "St. Louis Cardinals"}, "qid_topic_entity": {"Q504309": "St. Louis Cardinals"}}, {"QuestionId": "WebQTest-1572", "RawQuestion": "what should i do today in san francisco?", "ProcessedQuestion": "what should i do today in san francisco", "Parses": [{"ParseId": "WebQTest-1572.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d6lp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d6lp ns:travel.travel_destination.tourist_attractions ?x .\n}\n", "PotentialTopicEntityMention": "san francisco", "TopicEntityName": "San Francisco", "TopicEntityMid": "m.0d6lp", "InferentialChain": ["travel.travel_destination.tourist_attractions"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.012_1t", "EntityName": "San Francisco Museum of Modern Art"}, {"AnswerType": "Entity", "AnswerArgument": "m.012vvtp_", "EntityName": "Travefy"}, {"AnswerType": "Entity", "AnswerArgument": "m.01z4cc", "EntityName": "Angel Island"}, {"AnswerType": "Entity", "AnswerArgument": "m.022q0n", "EntityName": "Coit Tower"}, {"AnswerType": "Entity", "AnswerArgument": "m.023x4y", "EntityName": "Lombard Street"}, {"AnswerType": "Entity", "AnswerArgument": "m.0245vl", "EntityName": "Asian Art Museum of San Francisco"}, {"AnswerType": "Entity", "AnswerArgument": "m.025psq", "EntityName": "Golden Gate Park"}, {"AnswerType": "Entity", "AnswerArgument": "m.027yy0b", "EntityName": "Yerba Buena Center for the Arts"}, {"AnswerType": "Entity", "AnswerArgument": "m.029bdk", "EntityName": "Chinatown"}, {"AnswerType": "Entity", "AnswerArgument": "m.02p_8jw", "EntityName": "Haas-Lilienthal House"}, {"AnswerType": "Entity", "AnswerArgument": "m.02pqty5", "EntityName": "San Francisco Railway Museum"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rwwk9", "EntityName": "Contemporary Jewish Museum"}, {"AnswerType": "Entity", "AnswerArgument": "m.02z4m5c", "EntityName": "Consulate General of Mexico, San Francisco"}, {"AnswerType": "Entity", "AnswerArgument": "m.034gjn", "EntityName": "Exploratorium"}, {"AnswerType": "Entity", "AnswerArgument": "m.035p3", "EntityName": "Golden Gate Bridge"}, {"AnswerType": "Entity", "AnswerArgument": "m.03p_pq", "EntityName": "San Francisco City Hall"}, {"AnswerType": "Entity", "AnswerArgument": "m.04lh5gw", "EntityName": "Camera Obscura"}, {"AnswerType": "Entity", "AnswerArgument": "m.04ptrc", "EntityName": "San Francisco cable car system"}, {"AnswerType": "Entity", "AnswerArgument": "m.04vhpfx", "EntityName": "San Francisco Fire Department Museum"}, {"AnswerType": "Entity", "AnswerArgument": "m.050wqp", "EntityName": "Union Square"}, {"AnswerType": "Entity", "AnswerArgument": "m.057mlm", "EntityName": "Fisherman's Wharf"}, {"AnswerType": "Entity", "AnswerArgument": "m.058h2l", "EntityName": "Ghirardelli Square"}, {"AnswerType": "Entity", "AnswerArgument": "m.0595pv", "EntityName": "Cartoon Art Museum"}, {"AnswerType": "Entity", "AnswerArgument": "m.05nxnt", "EntityName": "Baker Beach"}, {"AnswerType": "Entity", "AnswerArgument": "m.05vvwl", "EntityName": "San Francisco Ferry Building"}, {"AnswerType": "Entity", "AnswerArgument": "m.05w70m", "EntityName": "Twin Peaks"}, {"AnswerType": "Entity", "AnswerArgument": "m.061tjx", "EntityName": "Crissy Field"}, {"AnswerType": "Entity", "AnswerArgument": "m.09ybm9", "EntityName": "Mus\u00e9e M\u00e9canique"}, {"AnswerType": "Entity", "AnswerArgument": "m.0f726z", "EntityName": "Museum of the African Diaspora"}, {"AnswerType": "Entity", "AnswerArgument": "m.0fhvgc", "EntityName": "Japanese Tea Garden"}, {"AnswerType": "Entity", "AnswerArgument": "m.0g2_pk", "EntityName": "St. Regis Museum Tower"}, {"AnswerType": "Entity", "AnswerArgument": "m.0g687", "EntityName": "Presidio of San Francisco"}, {"AnswerType": "Entity", "AnswerArgument": "m.0h594", "EntityName": "Alcatraz Island"}, {"AnswerType": "Entity", "AnswerArgument": "m.0hmt3bb", "EntityName": "Ripley's Believe It or Not! Museum"}, {"AnswerType": "Entity", "AnswerArgument": "m.0j2gj8v", "EntityName": "Palace of the Legion of Honor"}]}], "topic_entity": {"m.0d6lp": "San Francisco"}, "qid_topic_entity": {"Q62": "San Francisco"}}]