[{"QuestionId": "WebQTest-596", "RawQuestion": "where did kansas city royals come from?", "ProcessedQuestion": "where did kansas city royals come from", "Parses": [{"ParseId": "WebQTest-596.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.049n7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.049n7 ns:sports.sports_team.location ?x .\n}\n", "PotentialTopicEntityMention": "kansas city royals", "TopicEntityName": "Kansas City Royals", "TopicEntityMid": "m.049n7", "InferentialChain": ["sports.sports_team.location"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.04f_d", "EntityName": "Kansas City"}]}], "topic_entity": {"m.049n7": "Kansas City Royals"}, "qid_topic_entity": {"Q744530": "Kansas City Royals"}}, {"QuestionId": "WebQTest-1507", "RawQuestion": "who was kate chopin?", "ProcessedQuestion": "who was kate chopin", "Parses": [{"ParseId": "WebQTest-1507.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d8pw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d8pw ns:people.person.profession ?x .\n}\n", "PotentialTopicEntityMention": "kate chopin", "TopicEntityName": "Kate Chopin", "TopicEntityMid": "m.0d8pw", "InferentialChain": ["people.person.profession"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.012t_z", "EntityName": "Businessperson"}, {"AnswerType": "Entity", "AnswerArgument": "m.02xhgwq", "EntityName": "Novelist"}, {"AnswerType": "Entity", "AnswerArgument": "m.0cbd2", "EntityName": "Writer"}, {"AnswerType": "Entity", "AnswerArgument": "m.0kyk", "EntityName": "Author"}]}], "topic_entity": {"m.0d8pw": "Kate Chopin"}, "qid_topic_entity": {"Q230476": "Kate Chopin"}}, {"QuestionId": "WebQTest-1847", "RawQuestion": "where does kurdish people live?", "ProcessedQuestion": "where does kurdish people live", "Parses": [{"ParseId": "WebQTest-1847.P0", "AnnotatorId": 1, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04c28)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04c28 ns:people.ethnicity.geographic_distribution ?x .\n}\n", "PotentialTopicEntityMention": "kurdish people", "TopicEntityName": "Kurds", "TopicEntityMid": "m.04c28", "InferentialChain": ["people.ethnicity.geographic_distribution"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0j0k", "EntityName": "Asia"}]}], "topic_entity": {"m.04c28": "Kurds"}, "qid_topic_entity": {"Q12223": "Kurds"}}, {"QuestionId": "WebQTest-1932", "RawQuestion": "who made the laws in canada?", "ProcessedQuestion": "who made the laws in canada", "Parses": [{"ParseId": "WebQTest-1932.P0", "AnnotatorId": 4, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d060g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d060g ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.governmental_body ?x .\n?x ns:government.governmental_body.jurisdiction ns:m.0d060g .\n}\n", "PotentialTopicEntityMention": "canada", "TopicEntityName": "Canada", "TopicEntityMid": "m.0d060g", "InferentialChain": ["government.governmental_jurisdiction.governing_officials", "government.government_position_held.governmental_body"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.0d060g", "EntityName": "Canada", "SourceNodeIndex": 1, "NodePredicate": "government.governmental_body.jurisdiction", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0h6dy", "EntityName": "House of Commons of Canada"}, {"AnswerType": "Entity", "AnswerArgument": "m.0l_j_", "EntityName": "Parliament of Canada"}]}], "topic_entity": {"m.0d060g": "Canada"}, "qid_topic_entity": {"Q16": "Canada"}}, {"QuestionId": "WebQTest-1853", "RawQuestion": "what made richard hammond famous?", "ProcessedQuestion": "what made richard hammond famous", "Parses": [{"ParseId": "WebQTest-1853.P0", "AnnotatorId": 1, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "VeryLow", "FreeFormComment": "?? "}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02508x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02508x ns:people.person.profession ?x .\n}\n", "PotentialTopicEntityMention": "richard hammond", "TopicEntityName": "Richard Hammond", "TopicEntityMid": "m.02508x", "InferentialChain": ["people.person.profession"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.015cjr", "EntityName": "Presenter"}, {"AnswerType": "Entity", "AnswerArgument": "m.01tkqy", "EntityName": "Stunt Performer"}, {"AnswerType": "Entity", "AnswerArgument": "m.03gjzk", "EntityName": "Television producer"}, {"AnswerType": "Entity", "AnswerArgument": "m.08z956", "EntityName": "Radio personality"}, {"AnswerType": "Entity", "AnswerArgument": "m.0cbd2", "EntityName": "Writer"}, {"AnswerType": "Entity", "AnswerArgument": "m.0d8qb", "EntityName": "Journalist"}, {"AnswerType": "Entity", "AnswerArgument": "m.0dxtg", "EntityName": "Screenwriter"}, {"AnswerType": "Entity", "AnswerArgument": "m.0kyk", "EntityName": "Author"}, {"AnswerType": "Entity", "AnswerArgument": "m.0np9r", "EntityName": "Voice Actor"}]}], "topic_entity": {"m.02508x": "Richard Hammond"}, "qid_topic_entity": {"Q297265": "Richard Hammond"}}, {"QuestionId": "WebQTest-690", "RawQuestion": "what did scott joplin play?", "ProcessedQuestion": "what did scott joplin play", "Parses": [{"ParseId": "WebQTest-690.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07b69)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07b69 ns:music.group_member.instruments_played ?x .\n}\n", "PotentialTopicEntityMention": "scott joplin", "TopicEntityName": "Scott Joplin", "TopicEntityMid": "m.07b69", "InferentialChain": ["music.group_member.instruments_played"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.05r5c", "EntityName": "Piano"}, {"AnswerType": "Entity", "AnswerArgument": "m.06ch55", "EntityName": "Jazz piano"}]}], "topic_entity": {"m.07b69": "Scott Joplin"}, "qid_topic_entity": {"Q191499": "Scott Joplin"}}, {"QuestionId": "WebQTest-794", "RawQuestion": "who does the voice for darth vader?", "ProcessedQuestion": "who does the voice for darth vader", "Parses": [{"ParseId": "WebQTest-794.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f2y0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f2y0 ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.special_performance_type ns:m.02nsjvf .\n}\n", "PotentialTopicEntityMention": "darth vader", "TopicEntityName": "Darth Vader", "TopicEntityMid": "m.0f2y0", "InferentialChain": ["film.film_character.portrayed_in_films", "film.performance.actor"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.02nsjvf", "EntityName": "Voice", "SourceNodeIndex": 0, "NodePredicate": "film.performance.special_performance_type", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0113l6zy", "EntityName": "Dr. Smoov"}, {"AnswerType": "Entity", "AnswerArgument": "m.06wm0z", "EntityName": "Zac Efron"}, {"AnswerType": "Entity", "AnswerArgument": "m.0945y8", "EntityName": "Abraham Benrubi"}, {"AnswerType": "Entity", "AnswerArgument": "m.0b2l8f", "EntityName": "Matt Lanter"}, {"AnswerType": "Entity", "AnswerArgument": "m.0f6_x", "EntityName": "James Earl Jones"}]}], "topic_entity": {"m.0f2y0": "Darth Vader"}, "qid_topic_entity": {"Q51752": "Darth Vader"}}, {"QuestionId": "WebQTest-1685", "RawQuestion": "where did benjamin franklin went to school?", "ProcessedQuestion": "where did benjamin franklin went to school", "Parses": [{"ParseId": "WebQTest-1685.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019fz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019fz ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n", "PotentialTopicEntityMention": "benjamin franklin", "TopicEntityName": "Benjamin Franklin", "TopicEntityMid": "m.019fz", "InferentialChain": ["people.person.education", "education.education.institution"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02kj7g", "EntityName": "Boston Latin School"}]}], "topic_entity": {"m.019fz": "Benjamin Franklin"}, "qid_topic_entity": {"Q34969": "Benjamin Franklin"}}, {"QuestionId": "WebQTest-1707", "RawQuestion": "who plays lex luthor on smallville?", "ProcessedQuestion": "who plays lex luthor on smallville", "Parses": [{"ParseId": "WebQTest-1707.P0", "AnnotatorId": 3, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03g9xj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03g9xj ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.character ns:m.04q78 .\n}\n", "PotentialTopicEntityMention": "smallville", "TopicEntityName": "Smallville", "TopicEntityMid": "m.03g9xj", "InferentialChain": ["tv.tv_program.regular_cast", "tv.regular_tv_appearance.actor"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.04q78", "EntityName": "Alexander Luthor", "SourceNodeIndex": 0, "NodePredicate": "tv.regular_tv_appearance.character", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0q1lp", "EntityName": "Michael Rosenbaum"}]}], "topic_entity": {"m.03g9xj": "Smallville"}, "qid_topic_entity": {"Q180228": "Smallville"}}, {"QuestionId": "WebQTest-1263", "RawQuestion": "what team is cristiano ronaldo play for?", "ProcessedQuestion": "what team is cristiano ronaldo play for", "Parses": [{"ParseId": "WebQTest-1263.P0", "AnnotatorId": 2, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02xt6q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02xt6q ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n", "PotentialTopicEntityMention": "cristiano ronaldo", "TopicEntityName": "Cristiano Ronaldo", "TopicEntityMid": "m.02xt6q", "InferentialChain": ["sports.pro_athlete.teams", "sports.sports_team_roster.team"], "Constraints": [{"Operator": "LessOrEqual", "ArgumentType": "Value", "Argument": "2015-08-10", "EntityName": "", "SourceNodeIndex": 0, "NodePredicate": "sports.sports_team_roster.from", "ValueType": "DateTime"}, {"Operator": "GreaterOrEqual", "ArgumentType": "Value", "Argument": "2015-08-10", "EntityName": "", "SourceNodeIndex": 0, "NodePredicate": "sports.sports_team_roster.to", "ValueType": "DateTime"}], "Time": {"IsRelativeToNow": true, "Start": "0000-00-00", "End": "0000-00-00", "AssociatedConstraints": [0, 1], "PotentialTimeMention": null}, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02rqxc", "EntityName": "Portugal national football team"}, {"AnswerType": "Entity", "AnswerArgument": "m.06l22", "EntityName": "Real Madrid C.F."}]}], "topic_entity": {"m.02xt6q": "Cristiano Ronaldo"}, "qid_topic_entity": {"Q11571": "Cristiano Ronaldo"}}, {"QuestionId": "WebQTest-1612", "RawQuestion": "what type of art did raphael sanzio create?", "ProcessedQuestion": "what type of art did raphael sanzio create", "Parses": [{"ParseId": "WebQTest-1612.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c43g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c43g ns:visual_art.visual_artist.art_forms ?x .\n}\n", "PotentialTopicEntityMention": "raphael sanzio", "TopicEntityName": "Raphael", "TopicEntityMid": "m.0c43g", "InferentialChain": ["visual_art.visual_artist.art_forms"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02csf", "EntityName": "Drawing"}, {"AnswerType": "Entity", "AnswerArgument": "m.05qdh", "EntityName": "Painting"}]}], "topic_entity": {"m.0c43g": "Raphael"}, "qid_topic_entity": {"Q5597": "Raphael"}}, {"QuestionId": "WebQTest-1420", "RawQuestion": "what does monsanto own?", "ProcessedQuestion": "what does monsanto own", "Parses": [{"ParseId": "WebQTest-1420.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0n8m6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0n8m6 ns:business.business_operation.industry ?x .\n}\n", "PotentialTopicEntityMention": "monsanto", "TopicEntityName": "Monsanto", "TopicEntityMid": "m.0n8m6", "InferentialChain": ["business.business_operation.industry"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02ntf00", "EntityName": "Agrochemical"}, {"AnswerType": "Entity", "AnswerArgument": "m.09dh0", "EntityName": "Seed"}, {"AnswerType": "Entity", "AnswerArgument": "m.0g10z", "EntityName": "Chemical industry"}, {"AnswerType": "Entity", "AnswerArgument": "m.0hkf", "EntityName": "Agriculture"}]}], "topic_entity": {"m.0n8m6": "Monsanto"}, "qid_topic_entity": {"Q207983": "Monsanto"}}, {"QuestionId": "WebQTest-883", "RawQuestion": "who was king george vi married to?", "ProcessedQuestion": "who was king george vi married to", "Parses": [{"ParseId": "WebQTest-883.P0", "AnnotatorId": 4, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cm83)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cm83 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.to ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n", "PotentialTopicEntityMention": "king george vi", "TopicEntityName": "George VI", "TopicEntityMid": "m.0cm83", "InferentialChain": ["people.person.spouse_s", "people.marriage.spouse"], "Constraints": [], "Time": null, "Order": {"SortOrder": "Descending", "Start": 0, "Count": 1, "SourceNodeIndex": 0, "NodePredicate": "people.marriage.to", "ValueType": "DateTime"}, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0cm63", "EntityName": "Queen Elizabeth The Queen Mother"}]}], "topic_entity": {"m.0cm83": "George VI"}, "qid_topic_entity": {"Q280856": "George VI"}}, {"QuestionId": "WebQTest-1654", "RawQuestion": "what are bigos?", "ProcessedQuestion": "what are bigos", "Parses": [{"ParseId": "WebQTest-1654.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06815z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06815z ns:food.dish.type_of_dish1 ?x .\n}\n", "PotentialTopicEntityMention": "bigos", "TopicEntityName": "Bigos", "TopicEntityMid": "m.06815z", "InferentialChain": ["food.dish.type_of_dish1"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0jnxw", "EntityName": "Stew"}]}], "topic_entity": {"m.06815z": "Bigos"}, "qid_topic_entity": {"Q598222": "Bigos"}}, {"QuestionId": "WebQTest-402", "RawQuestion": "what does joey jordison play in slipknot?", "ProcessedQuestion": "what does joey jordison play in slipknot", "Parses": [{"ParseId": "WebQTest-402.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01wt4wc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01wt4wc ns:music.group_member.membership ?y .\n?y ns:music.group_membership.role ?x .\n?y ns:music.group_membership.group ns:m.0ntq7 .\n}\n", "PotentialTopicEntityMention": "joey jordison", "TopicEntityName": "Joey Jordison", "TopicEntityMid": "m.01wt4wc", "InferentialChain": ["music.group_member.membership", "music.group_membership.role"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.0ntq7", "EntityName": "Slipknot", "SourceNodeIndex": 0, "NodePredicate": "music.group_membership.group", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02hnl", "EntityName": "Drums"}]}, {"ParseId": "WebQTest-402.P1", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ntq7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ntq7 ns:music.musical_group.member ?y .\n?y ns:music.group_membership.role ?x .\n?y ns:music.group_membership.member ns:m.01wt4wc .\n}\n", "PotentialTopicEntityMention": "slipknot", "TopicEntityName": "Slipknot", "TopicEntityMid": "m.0ntq7", "InferentialChain": ["music.musical_group.member", "music.group_membership.role"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.01wt4wc", "EntityName": "Joey Jordison", "SourceNodeIndex": 0, "NodePredicate": "music.group_membership.member", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02hnl", "EntityName": "Drums"}]}], "topic_entity": {"m.01wt4wc": "Joey Jordison", "m.0ntq7": "Slipknot"}, "qid_topic_entity": {"Q295817": "Joey Jordison", "Q254138": "Slipknot"}}, {"QuestionId": "WebQTest-1180", "RawQuestion": "what sarah dessen books are movies?", "ProcessedQuestion": "what sarah dessen books are movies", "Parses": [{"ParseId": "WebQTest-1180.P0", "AnnotatorId": 1, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Low", "FreeFormComment": "?"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.052s_8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.052s_8 ns:film.film_story_contributor.film_story_credits ?x .\n}\n", "PotentialTopicEntityMention": "sarah dessen", "TopicEntityName": "Sarah Dessen", "TopicEntityMid": "m.052s_8", "InferentialChain": ["film.film_story_contributor.film_story_credits"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.04y364", "EntityName": "How to Deal"}]}], "topic_entity": {"m.052s_8": "Sarah Dessen"}, "qid_topic_entity": {"Q532336": "Sarah Dessen"}}, {"QuestionId": "WebQTest-1316", "RawQuestion": "what was the name of benjamin franklin wife?", "ProcessedQuestion": "what was the name of benjamin franklin wife", "Parses": [{"ParseId": "WebQTest-1316.P0", "AnnotatorId": 4, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019fz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019fz ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.01bl8s .\n}\n", "PotentialTopicEntityMention": "benjamin franklin", "TopicEntityName": "Benjamin Franklin", "TopicEntityMid": "m.019fz", "InferentialChain": ["people.person.spouse_s", "people.marriage.spouse"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.01bl8s", "EntityName": "Common-law marriage", "SourceNodeIndex": 0, "NodePredicate": "people.marriage.type_of_union", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0b15_0", "EntityName": "Deborah Read"}]}], "topic_entity": {"m.019fz": "Benjamin Franklin"}, "qid_topic_entity": {"Q34969": "Benjamin Franklin"}}, {"QuestionId": "WebQTest-106", "RawQuestion": "who did armie hammer play in the social network?", "ProcessedQuestion": "who did armie hammer play in the social network", "Parses": [{"ParseId": "WebQTest-106.P0", "AnnotatorId": 3, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07s846j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07s846j ns:film.film.starring ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.actor ns:m.03y9941 .\n}\n", "PotentialTopicEntityMention": "social network", "TopicEntityName": "The Social Network", "TopicEntityMid": "m.07s846j", "InferentialChain": ["film.film.starring", "film.performance.character"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.03y9941", "EntityName": "Armie Hammer", "SourceNodeIndex": 0, "NodePredicate": "film.performance.actor", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.09tb_f3", "EntityName": "Tyler Winklevoss"}, {"AnswerType": "Entity", "AnswerArgument": "m.09tbj8d", "EntityName": "Cameron Winklevoss"}]}], "topic_entity": {"m.07s846j": "The Social Network"}, "qid_topic_entity": {"Q185888": "The Social Network"}}, {"QuestionId": "WebQTest-514", "RawQuestion": "where is denmark situated?", "ProcessedQuestion": "where is denmark situated", "Parses": [{"ParseId": "WebQTest-514.P0", "AnnotatorId": 3, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0k6nt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0k6nt ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.01nt .\n}\n", "PotentialTopicEntityMention": "denmark", "TopicEntityName": "Denmark", "TopicEntityMid": "m.0k6nt", "InferentialChain": ["location.location.containedby"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.01nt", "EntityName": "Region", "SourceNodeIndex": 0, "NodePredicate": "common.topic.notable_types", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0140mf", "EntityName": "Nordic countries"}, {"AnswerType": "Entity", "AnswerArgument": "m.06mx8", "EntityName": "Scandinavia"}]}], "topic_entity": {"m.0k6nt": "Denmark"}, "qid_topic_entity": {"Q35": "Denmark"}}, {"QuestionId": "WebQTest-1710", "RawQuestion": "what is the currency of the czech republic?", "ProcessedQuestion": "what is the currency of the czech republic", "Parses": [{"ParseId": "WebQTest-1710.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01mjq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01mjq ns:location.country.currency_used ?x .\n}\n", "PotentialTopicEntityMention": "czech republic", "TopicEntityName": "Czech Republic", "TopicEntityMid": "m.01mjq", "InferentialChain": ["location.country.currency_used"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.04rpc3", "EntityName": "Czech koruna"}]}], "topic_entity": {"m.01mjq": "Czech Republic"}, "qid_topic_entity": {"Q213": "Czech Republic"}}, {"QuestionId": "WebQTest-100", "RawQuestion": "what language is spoken in haiti today?", "ProcessedQuestion": "what language is spoken in haiti today", "Parses": [{"ParseId": "WebQTest-100.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03gyl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03gyl ns:location.country.languages_spoken ?x .\n}\n", "PotentialTopicEntityMention": "haiti", "TopicEntityName": "Haiti", "TopicEntityMid": "m.03gyl", "InferentialChain": ["location.country.languages_spoken"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02dhwl", "EntityName": "Haitian Creole"}, {"AnswerType": "Entity", "AnswerArgument": "m.064_8sq", "EntityName": "French"}]}, {"ParseId": "WebQTest-100.P1", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03gyl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03gyl ns:location.country.official_language ?x .\n}\n", "PotentialTopicEntityMention": "haiti", "TopicEntityName": "Haiti", "TopicEntityMid": "m.03gyl", "InferentialChain": ["location.country.official_language"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02dhwl", "EntityName": "Haitian Creole"}, {"AnswerType": "Entity", "AnswerArgument": "m.064_8sq", "EntityName": "French"}]}], "topic_entity": {"m.03gyl": "Haiti"}, "qid_topic_entity": {"Q790": "Haiti"}}, {"QuestionId": "WebQTest-1174", "RawQuestion": "what cancer did jackie kennedy die of?", "ProcessedQuestion": "what cancer did jackie kennedy die of", "Parses": [{"ParseId": "WebQTest-1174.P0", "AnnotatorId": 2, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h6mq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h6mq ns:people.deceased_person.cause_of_death ?x .\n?x ns:medicine.disease.parent_disease ns:m.0qcr0 .\n}\n", "PotentialTopicEntityMention": "jackie kennedy", "TopicEntityName": "Jacqueline Kennedy Onassis", "TopicEntityMid": "m.0h6mq", "InferentialChain": ["people.deceased_person.cause_of_death"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.0qcr0", "EntityName": "Cancer", "SourceNodeIndex": 0, "NodePredicate": "medicine.disease.parent_disease", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0jdk0", "EntityName": "Lymphoma"}]}], "topic_entity": {"m.0h6mq": "Jacqueline Kennedy Onassis"}, "qid_topic_entity": {"Q165421": "Jacqueline Kennedy Onassis"}}, {"QuestionId": "WebQTest-1199", "RawQuestion": "what does kim kardashian work as?", "ProcessedQuestion": "what does kim kardashian work as", "Parses": [{"ParseId": "WebQTest-1199.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0261x8t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0261x8t ns:people.person.profession ?x .\n}\n", "PotentialTopicEntityMention": "kim kardashian", "TopicEntityName": "Kim Kardashian", "TopicEntityMid": "m.0261x8t", "InferentialChain": ["people.person.profession"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.012t_z", "EntityName": "Businessperson"}, {"AnswerType": "Entity", "AnswerArgument": "m.02hqyhw", "EntityName": "Fashion designer"}, {"AnswerType": "Entity", "AnswerArgument": "m.02hrh1q", "EntityName": "Actor"}, {"AnswerType": "Entity", "AnswerArgument": "m.03gjzk", "EntityName": "Television producer"}, {"AnswerType": "Entity", "AnswerArgument": "m.03gkb0", "EntityName": "Socialite"}, {"AnswerType": "Entity", "AnswerArgument": "m.09x_r", "EntityName": "Entrepreneur"}, {"AnswerType": "Entity", "AnswerArgument": "m.0d1pc", "EntityName": "Model"}, {"AnswerType": "Entity", "AnswerArgument": "m.0dypbr", "EntityName": "TV Personality"}]}], "topic_entity": {"m.0261x8t": "Kim Kardashian"}, "qid_topic_entity": {"Q186304": "Kim Kardashian"}}, {"QuestionId": "WebQTest-1008", "RawQuestion": "where is walton indiana?", "ProcessedQuestion": "where is walton indiana", "Parses": [{"ParseId": "WebQTest-1008.P0", "AnnotatorId": 4, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Low", "FreeFormComment": "? Not sure if they want GPS location"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0skd2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0skd2 ns:location.location.containedby ?x .\n}\n", "PotentialTopicEntityMention": "walton indiana", "TopicEntityName": "Walton", "TopicEntityMid": "m.0skd2", "InferentialChain": ["location.location.containedby"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.03chrxx", "EntityName": "Tipton Township"}, {"AnswerType": "Entity", "AnswerArgument": "m.03v1s", "EntityName": "Indiana"}, {"AnswerType": "Entity", "AnswerArgument": "m.09c7w0", "EntityName": "United States of America"}, {"AnswerType": "Entity", "AnswerArgument": "m.0ntm1", "EntityName": "Cass County"}]}], "topic_entity": {"m.0skd2": "Walton"}, "qid_topic_entity": {"Q2551289": "Walton"}}, {"QuestionId": "WebQTest-1080", "RawQuestion": "where did abraham and his descendants live?", "ProcessedQuestion": "where did abraham and his descendants live", "Parses": [{"ParseId": "WebQTest-1080.P0", "AnnotatorId": 3, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "VeryLow", "FreeFormComment": "??"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0pwb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0pwb ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\n}\n", "PotentialTopicEntityMention": "abraham", "TopicEntityName": "Abraham", "TopicEntityMid": "m.0pwb", "InferentialChain": ["people.person.places_lived", "people.place_lived.location"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0524v", "EntityName": "Mesopotamia"}, {"AnswerType": "Entity", "AnswerArgument": "m.0d9f2", "EntityName": "Canaan"}]}], "topic_entity": {"m.0pwb": "Abraham"}, "qid_topic_entity": {"Q9181": "Abraham"}}, {"QuestionId": "WebQTest-1827", "RawQuestion": "what can do in new york?", "ProcessedQuestion": "what can do in new york", "Parses": [{"ParseId": "WebQTest-1827.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02_286)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02_286 ns:travel.travel_destination.tourist_attractions ?x .\n}\n", "PotentialTopicEntityMention": "new york", "TopicEntityName": "New York City", "TopicEntityMid": "m.02_286", "InferentialChain": ["travel.travel_destination.tourist_attractions"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0_ymbw6", "EntityName": "Crocheron Park"}, {"AnswerType": "Entity", "AnswerArgument": "m.012vvtp_", "EntityName": "Travefy"}, {"AnswerType": "Entity", "AnswerArgument": "m.0163ff", "EntityName": "Rockefeller Center"}, {"AnswerType": "Entity", "AnswerArgument": "m.019vsd", "EntityName": "United Nations Headquarters"}, {"AnswerType": "Entity", "AnswerArgument": "m.01kht3", "EntityName": "St. Patrick's Cathedral"}, {"AnswerType": "Entity", "AnswerArgument": "m.01lnd3", "EntityName": "Flatiron Building"}, {"AnswerType": "Entity", "AnswerArgument": "m.01nbpn", "EntityName": "Little Italy"}, {"AnswerType": "Entity", "AnswerArgument": "m.01rs7b", "EntityName": "The Cloisters"}, {"AnswerType": "Entity", "AnswerArgument": "m.01rxnm", "EntityName": "Brooklyn Botanic Garden"}, {"AnswerType": "Entity", "AnswerArgument": "m.01rxr7", "EntityName": "Staten Island Ferry"}, {"AnswerType": "Entity", "AnswerArgument": "m.01rz3c", "EntityName": "Grand Central Terminal"}, {"AnswerType": "Entity", "AnswerArgument": "m.01zmd", "EntityName": "Chrysler Building"}, {"AnswerType": "Entity", "AnswerArgument": "m.021848", "EntityName": "Frick Collection"}, {"AnswerType": "Entity", "AnswerArgument": "m.023r9j", "EntityName": "American Museum of Natural History"}, {"AnswerType": "Entity", "AnswerArgument": "m.026cv0z", "EntityName": "A.I.R. Gallery"}, {"AnswerType": "Entity", "AnswerArgument": "m.02hjvb", "EntityName": "Darien Lake"}, {"AnswerType": "Entity", "AnswerArgument": "m.02nd_", "EntityName": "Empire State Building"}, {"AnswerType": "Entity", "AnswerArgument": "m.02qz9w", "EntityName": "Freedomland U.S.A."}, {"AnswerType": "Entity", "AnswerArgument": "m.02vz0kx", "EntityName": "Andrew Carnegie Mansion"}, {"AnswerType": "Entity", "AnswerArgument": "m.02z7b9_", "EntityName": "Louis Armstrong House"}, {"AnswerType": "Entity", "AnswerArgument": "m.03cfv35", "EntityName": "Headless Horseman Hayrides"}, {"AnswerType": "Entity", "AnswerArgument": "m.03vstx", "EntityName": "George Gustav Heye Center"}, {"AnswerType": "Entity", "AnswerArgument": "m.0403zkg", "EntityName": "Chelsea Art Museum"}, {"AnswerType": "Entity", "AnswerArgument": "m.04053sn", "EntityName": "FusionArts Museum"}, {"AnswerType": "Entity", "AnswerArgument": "m.048ltn", "EntityName": "National Academy Museum and School"}, {"AnswerType": "Entity", "AnswerArgument": "m.04h9fs", "EntityName": "Central Park Zoo"}, {"AnswerType": "Entity", "AnswerArgument": "m.04jpg0f", "EntityName": "Statue of Liberty National Monument"}, {"AnswerType": "Entity", "AnswerArgument": "m.04q3k0p", "EntityName": "New York Public Library for the Performing Arts"}, {"AnswerType": "Entity", "AnswerArgument": "m.04q4sg", "EntityName": "Franklin D. Roosevelt Presidential Library and Museum"}, {"AnswerType": "Entity", "AnswerArgument": "m.04sr12", "EntityName": "Battery Park"}, {"AnswerType": "Entity", "AnswerArgument": "m.051vfm", "EntityName": "American Folk Art Museum"}, {"AnswerType": "Entity", "AnswerArgument": "m.051xk9", "EntityName": "International Center of Photography"}, {"AnswerType": "Entity", "AnswerArgument": "m.0537mx", "EntityName": "Morgan Library & Museum"}, {"AnswerType": "Entity", "AnswerArgument": "m.05f80pd", "EntityName": "New York City Half Marathon"}, {"AnswerType": "Entity", "AnswerArgument": "m.05t0ps", "EntityName": "Wave Hill"}, {"AnswerType": "Entity", "AnswerArgument": "m.06fybq", "EntityName": "Peking"}, {"AnswerType": "Entity", "AnswerArgument": "m.06nhn3", "EntityName": "Japan Society of New York"}, {"AnswerType": "Entity", "AnswerArgument": "m.072p8", "EntityName": "Statue of Liberty"}, {"AnswerType": "Entity", "AnswerArgument": "m.07jwwf", "EntityName": "High Line"}, {"AnswerType": "Entity", "AnswerArgument": "m.07qdr", "EntityName": "Times Square"}, {"AnswerType": "Entity", "AnswerArgument": "m.07trd0", "EntityName": "Theodore Roosevelt Birthplace National Historic Site"}, {"AnswerType": "Entity", "AnswerArgument": "m.0989yy", "EntityName": "Museum of Modern Art Department of Film"}, {"AnswerType": "Entity", "AnswerArgument": "m.09c7b", "EntityName": "Metropolitan Museum of Art"}, {"AnswerType": "Entity", "AnswerArgument": "m.09c7v", "EntityName": "Central Park"}, {"AnswerType": "Entity", "AnswerArgument": "m.09sg3h", "EntityName": "New York Aquarium"}, {"AnswerType": "Entity", "AnswerArgument": "m.09sjx5", "EntityName": "Museum of Sex"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bh8czr", "EntityName": "Gavin Brown's Enterprise"}, {"AnswerType": "Entity", "AnswerArgument": "m.0brl0p", "EntityName": "New York International Fringe Festival"}, {"AnswerType": "Entity", "AnswerArgument": "m.0by0zd5", "EntityName": "Felix M. Warburg House"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bz7bg", "EntityName": "Broadway Theatre"}, {"AnswerType": "Entity", "AnswerArgument": "m.0c02dld", "EntityName": "Henry Clay Frick House"}, {"AnswerType": "Entity", "AnswerArgument": "m.0cc65g0", "EntityName": "New York Mini 10K"}, {"AnswerType": "Entity", "AnswerArgument": "m.0cv4c", "EntityName": "Brooklyn Bridge"}, {"AnswerType": "Entity", "AnswerArgument": "m.0gy74y", "EntityName": "Museum of Arts and Design"}, {"AnswerType": "Entity", "AnswerArgument": "m.0hhjk", "EntityName": "Museum of Modern Art"}, {"AnswerType": "Entity", "AnswerArgument": "m.0j_66", "EntityName": "Madison Square Garden"}, {"AnswerType": "Entity", "AnswerArgument": "m.0j32d_5", "EntityName": "Solomon R. Guggenheim Museum"}, {"AnswerType": "Entity", "AnswerArgument": "m.0jwvjyz", "EntityName": "Museum of Mathematics"}, {"AnswerType": "Entity", "AnswerArgument": "m.0jwy_gm", "EntityName": "UAE Healthy Kidney 10K"}, {"AnswerType": "Entity", "AnswerArgument": "m.0ll4_ht", "EntityName": "Tesla Science Center at Wardenclyffe"}, {"AnswerType": "Entity", "AnswerArgument": "m.0n5wy3b", "EntityName": "Imagination Playground at Burling Slip"}, {"AnswerType": "Entity", "AnswerArgument": "m.0pnb8", "EntityName": "Chinatown"}, {"AnswerType": "Entity", "AnswerArgument": "m.0q9h2", "EntityName": "Solomon R. Guggenheim Museum"}]}], "topic_entity": {"m.02_286": "New York City"}, "qid_topic_entity": {"Q60": "New York City"}}, {"QuestionId": "WebQTest-1767", "RawQuestion": "where was martin luther king jr buried?", "ProcessedQuestion": "where was martin luther king jr buried", "Parses": [{"ParseId": "WebQTest-1767.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.051cc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.051cc ns:people.deceased_person.place_of_burial ?x .\n}\n", "PotentialTopicEntityMention": "martin luther king jr", "TopicEntityName": "Martin Luther King, Jr.", "TopicEntityMid": "m.051cc", "InferentialChain": ["people.deceased_person.place_of_burial"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.050my1", "EntityName": "Martin Luther King, Jr. National Historic Site"}]}], "topic_entity": {"m.051cc": "Martin Luther King, Jr."}, "qid_topic_entity": {"Q8027": "Martin Luther King, Jr."}}, {"QuestionId": "WebQTest-1442", "RawQuestion": "what currency shall i take to croatia?", "ProcessedQuestion": "what currency shall i take to croatia", "Parses": [{"ParseId": "WebQTest-1442.P0", "AnnotatorId": 3, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01pj7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01pj7 ns:location.country.currency_used ?x .\n}\n", "PotentialTopicEntityMention": "croatia", "TopicEntityName": "Croatia", "TopicEntityMid": "m.01pj7", "InferentialChain": ["location.country.currency_used"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02z8jt", "EntityName": "Croatian kuna"}]}], "topic_entity": {"m.01pj7": "Croatia"}, "qid_topic_entity": {"Q224": "Croatia"}}, {"QuestionId": "WebQTest-423", "RawQuestion": "when's the last time the steelers won the superbowl?", "ProcessedQuestion": "when 's the last time the steelers won the superbowl", "Parses": [{"ParseId": "WebQTest-423.P0", "AnnotatorId": 5, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Low", "FreeFormComment": "? no max"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05tfm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05tfm ns:sports.sports_team.championships ?x .\n?x ns:common.topic.notable_types ns:m.01xljv1 .\n?x ns:time.event.end_date ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n", "PotentialTopicEntityMention": "steelers", "TopicEntityName": "Pittsburgh Steelers", "TopicEntityMid": "m.05tfm", "InferentialChain": ["sports.sports_team.championships"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.01xljv1", "EntityName": "Super bowl", "SourceNodeIndex": 0, "NodePredicate": "common.topic.notable_types", "ValueType": "String"}], "Time": null, "Order": {"SortOrder": "Descending", "Start": 0, "Count": 1, "SourceNodeIndex": 0, "NodePredicate": "time.event.end_date", "ValueType": "DateTime"}, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.04n7r5", "EntityName": "Super Bowl XLIII"}]}], "topic_entity": {"m.05tfm": "Pittsburgh Steelers"}, "qid_topic_entity": {"Q191477": "Pittsburgh Steelers"}}, {"QuestionId": "WebQTest-993", "RawQuestion": "who played meg in season 1 of family guy?", "ProcessedQuestion": "who played meg in season 1 of family guy", "Parses": [{"ParseId": "WebQTest-993.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.035szd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.035szd ns:tv.tv_character.appeared_in_tv_program ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.seasons ns:m.027gynh .\n}\n", "PotentialTopicEntityMention": "meg", "TopicEntityName": "Meg Griffin", "TopicEntityMid": "m.035szd", "InferentialChain": ["tv.tv_character.appeared_in_tv_program", "tv.regular_tv_appearance.actor"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.027gynh", "EntityName": "Family Guy - Season 1", "SourceNodeIndex": 0, "NodePredicate": "tv.regular_tv_appearance.seasons", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02k4b2", "EntityName": "Lacey Chabert"}]}], "topic_entity": {"m.035szd": "Meg Griffin"}, "qid_topic_entity": {"Q908772": "Meg Griffin"}}, {"QuestionId": "WebQTest-477", "RawQuestion": "which airport to fly into in buenos aires?", "ProcessedQuestion": "which airport to fly into in buenos aires", "Parses": [{"ParseId": "WebQTest-477.P0", "AnnotatorId": 4, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ly5m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ly5m ns:location.location.nearby_airports ?x .\n}\n", "PotentialTopicEntityMention": "buenos aires", "TopicEntityName": "Buenos Aires", "TopicEntityMid": "m.01ly5m", "InferentialChain": ["location.location.nearby_airports"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01_t37", "EntityName": "Aeroparque Jorge Newbery"}, {"AnswerType": "Entity", "AnswerArgument": "m.01ky3d", "EntityName": "Ministro Pistarini International Airport"}, {"AnswerType": "Entity", "AnswerArgument": "m.04fmtt8", "EntityName": "Don Torcuato Airport"}]}], "topic_entity": {"m.01ly5m": "Buenos Aires"}, "qid_topic_entity": {"Q1486": "Buenos Aires"}}, {"QuestionId": "WebQTest-1322", "RawQuestion": "what other movies has tom hardy played in?", "ProcessedQuestion": "what other movies has tom hardy played in", "Parses": [{"ParseId": "WebQTest-1322.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05xf75)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05xf75 ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n", "PotentialTopicEntityMention": "tom hardy", "TopicEntityName": "Tom Hardy", "TopicEntityMid": "m.05xf75", "InferentialChain": ["film.actor.film", "film.performance.film"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.010b8p1w", "EntityName": "The Revenant"}, {"AnswerType": "Entity", "AnswerArgument": "m.010s_rgr", "EntityName": "Legend"}, {"AnswerType": "Entity", "AnswerArgument": "m.012vy2c1", "EntityName": "London Road"}, {"AnswerType": "Entity", "AnswerArgument": "m.014lc_", "EntityName": "Star Trek Nemesis"}, {"AnswerType": "Entity", "AnswerArgument": "m.02852xd", "EntityName": "Scenes of a Sexual Nature"}, {"AnswerType": "Entity", "AnswerArgument": "m.02d3wv", "EntityName": "Mad Max: Fury Road"}, {"AnswerType": "Entity", "AnswerArgument": "m.02vvwqg", "EntityName": "RocknRolla"}, {"AnswerType": "Entity", "AnswerArgument": "m.02w90vl", "EntityName": "Flood"}, {"AnswerType": "Entity", "AnswerArgument": "m.03g_b58", "EntityName": "Thick as Thieves"}, {"AnswerType": "Entity", "AnswerArgument": "m.03m6sts", "EntityName": "W\u0394Z"}, {"AnswerType": "Entity", "AnswerArgument": "m.03tyb3", "EntityName": "The Virgin Queen"}, {"AnswerType": "Entity", "AnswerArgument": "m.0413tm", "EntityName": "Layer Cake"}, {"AnswerType": "Entity", "AnswerArgument": "m.04cwpt9", "EntityName": "Colditz"}, {"AnswerType": "Entity", "AnswerArgument": "m.04f2_t4", "EntityName": "The Inheritance"}, {"AnswerType": "Entity", "AnswerArgument": "m.04j0l1s", "EntityName": "Sweeney Todd"}, {"AnswerType": "Entity", "AnswerArgument": "m.04j1_st", "EntityName": "Lethal Dose"}, {"AnswerType": "Entity", "AnswerArgument": "m.04z_tyl", "EntityName": "Bronson"}, {"AnswerType": "Entity", "AnswerArgument": "m.05szl93", "EntityName": "Warrior"}, {"AnswerType": "Entity", "AnswerArgument": "m.05t1gh", "EntityName": "Minotaur"}, {"AnswerType": "Entity", "AnswerArgument": "m.0661ql3", "EntityName": "Inception"}, {"AnswerType": "Entity", "AnswerArgument": "m.0681f6", "EntityName": "Gideon's Daughter"}, {"AnswerType": "Entity", "AnswerArgument": "m.07yvsn", "EntityName": "Marie Antoinette"}, {"AnswerType": "Entity", "AnswerArgument": "m.0b62y7", "EntityName": "Dot the I"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bpm4yw", "EntityName": "The Dark Knight Rises"}, {"AnswerType": "Entity", "AnswerArgument": "m.0ck3fq1", "EntityName": "Deserter"}, {"AnswerType": "Entity", "AnswerArgument": "m.0d6_8r", "EntityName": "The Reckoning"}, {"AnswerType": "Entity", "AnswerArgument": "m.0dll_t2", "EntityName": "This Means War"}, {"AnswerType": "Entity", "AnswerArgument": "m.0f_j1n", "EntityName": "Splinter Cell"}, {"AnswerType": "Entity", "AnswerArgument": "m.0gfh84d", "EntityName": "Lawless"}, {"AnswerType": "Entity", "AnswerArgument": "m.0ggbhy7", "EntityName": "Tinker Tailor Soldier Spy"}, {"AnswerType": "Entity", "AnswerArgument": "m.0gp4pz", "EntityName": "EMR"}, {"AnswerType": "Entity", "AnswerArgument": "m.0gx8_b7", "EntityName": "Perfect"}, {"AnswerType": "Entity", "AnswerArgument": "m.0gxmc0c", "EntityName": "Sergeant Slaughter, My Big Brother"}, {"AnswerType": "Entity", "AnswerArgument": "m.0h4ymqz", "EntityName": "Sucker Punch"}, {"AnswerType": "Entity", "AnswerArgument": "m.0nh514x", "EntityName": "Everest"}, {"AnswerType": "Entity", "AnswerArgument": "m.0qm8b", "EntityName": "Black Hawk Down"}, {"AnswerType": "Entity", "AnswerArgument": "m.0tkj5w3", "EntityName": "The Drop"}, {"AnswerType": "Entity", "AnswerArgument": "m.0v3gp6q", "EntityName": "Locke"}, {"AnswerType": "Entity", "AnswerArgument": "m.0vv7fv2", "EntityName": "The Outsider"}, {"AnswerType": "Entity", "AnswerArgument": "m.0w7ptqf", "EntityName": "Child 44"}]}], "topic_entity": {"m.05xf75": "Tom Hardy"}, "qid_topic_entity": {"Q208026": "Tom Hardy"}}, {"QuestionId": "WebQTest-1462", "RawQuestion": "who is running for vice president with barack obama 2012?", "ProcessedQuestion": "who is running for vice president with barack obama 2012", "Parses": [{"ParseId": "WebQTest-1462.P0", "AnnotatorId": 4, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02mjmr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02mjmr ns:government.us_president.vice_president ?x .\n}\n", "PotentialTopicEntityMention": "barack obama", "TopicEntityName": "Barack Obama", "TopicEntityMid": "m.02mjmr", "InferentialChain": ["government.us_president.vice_president"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.012gx2", "EntityName": "Joe Biden"}]}], "topic_entity": {"m.02mjmr": "Barack Obama"}, "qid_topic_entity": {"Q76": "Barack Obama"}}, {"QuestionId": "WebQTest-847", "RawQuestion": "what countries are members of the security council?", "ProcessedQuestion": "what countries are members of the security council", "Parses": [{"ParseId": "WebQTest-847.P0", "AnnotatorId": 3, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07vnr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07vnr ns:base.unitednations.united_nations_body.members ?y .\n?y ns:base.unitednations.united_nations_body_membership.member ?x .\nFILTER(NOT EXISTS {?y ns:base.unitednations.united_nations_body_membership.from ?sk0} || \nEXISTS {?y ns:base.unitednations.united_nations_body_membership.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:base.unitednations.united_nations_body_membership.to ?sk2} || \nEXISTS {?y ns:base.unitednations.united_nations_body_membership.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n", "PotentialTopicEntityMention": "security council", "TopicEntityName": "United Nations Security Council", "TopicEntityMid": "m.07vnr", "InferentialChain": ["base.unitednations.united_nations_body.members", "base.unitednations.united_nations_body_membership.member"], "Constraints": [{"Operator": "LessOrEqual", "ArgumentType": "Value", "Argument": "2015-08-10", "EntityName": "", "SourceNodeIndex": 0, "NodePredicate": "base.unitednations.united_nations_body_membership.from", "ValueType": "DateTime"}, {"Operator": "GreaterOrEqual", "ArgumentType": "Value", "Argument": "2015-08-10", "EntityName": "", "SourceNodeIndex": 0, "NodePredicate": "base.unitednations.united_nations_body_membership.to", "ValueType": "DateTime"}], "Time": {"IsRelativeToNow": true, "Start": "0000-00-00", "End": "0000-00-00", "AssociatedConstraints": [0, 1], "PotentialTimeMention": null}, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01699", "EntityName": "Burkina Faso"}, {"AnswerType": "Entity", "AnswerArgument": "m.01crd5", "EntityName": "Vietnam"}, {"AnswerType": "Entity", "AnswerArgument": "m.01p8s", "EntityName": "Costa Rica"}, {"AnswerType": "Entity", "AnswerArgument": "m.01pj7", "EntityName": "Croatia"}, {"AnswerType": "Entity", "AnswerArgument": "m.06bnz", "EntityName": "Russia"}, {"AnswerType": "Entity", "AnswerArgument": "m.07ssc", "EntityName": "United Kingdom"}, {"AnswerType": "Entity", "AnswerArgument": "m.09c7w0", "EntityName": "United States of America"}, {"AnswerType": "Entity", "AnswerArgument": "m.0d05w3", "EntityName": "China"}, {"AnswerType": "Entity", "AnswerArgument": "m.0f8l9c", "EntityName": "France"}]}], "topic_entity": {"m.07vnr": "United Nations Security Council"}, "qid_topic_entity": {"Q37470": "United Nations Security Council"}}, {"QuestionId": "WebQTest-889", "RawQuestion": "what country did benito mussolini govern?", "ProcessedQuestion": "what country did benito mussolini govern", "Parses": [{"ParseId": "WebQTest-889.P0", "AnnotatorId": 1, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0177g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0177g ns:government.politician.government_positions_held ?y .\n?y ns:government.government_position_held.jurisdiction_of_office ?x .\n}\n", "PotentialTopicEntityMention": "benito mussolini", "TopicEntityName": "Benito Mussolini", "TopicEntityMid": "m.0177g", "InferentialChain": ["government.politician.government_positions_held", "government.government_position_held.jurisdiction_of_office"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.03rjj", "EntityName": "Italy"}]}], "topic_entity": {"m.0177g": "Benito Mussolini"}, "qid_topic_entity": {"Q23559": "Benito Mussolini"}}, {"QuestionId": "WebQTest-1147", "RawQuestion": "what is the zip code for jonesboro ar?", "ProcessedQuestion": "what is the zip code for jonesboro ar", "Parses": [{"ParseId": "WebQTest-1147.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0qskp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0qskp ns:location.citytown.postal_codes ?x .\n}\n", "PotentialTopicEntityMention": "jonesboro ar", "TopicEntityName": "Jonesboro", "TopicEntityMid": "m.0qskp", "InferentialChain": ["location.citytown.postal_codes"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01z4426", "EntityName": "72401"}, {"AnswerType": "Entity", "AnswerArgument": "m.01z4433", "EntityName": "72404"}, {"AnswerType": "Entity", "AnswerArgument": "m.01z45mm", "EntityName": "72403"}, {"AnswerType": "Entity", "AnswerArgument": "m.07nqgrr", "EntityName": "72402"}]}], "topic_entity": {"m.0qskp": "Jonesboro"}, "qid_topic_entity": {"Q61455": "Jonesboro"}}, {"QuestionId": "WebQTest-1055", "RawQuestion": "what to do with kids in essex?", "ProcessedQuestion": "what to do with kids in essex", "Parses": [{"ParseId": "WebQTest-1055.P0", "AnnotatorId": 1, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "VeryLow", "FreeFormComment": "?? "}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02ly_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02ly_ ns:travel.travel_destination.tourist_attractions ?x .\n}\n", "PotentialTopicEntityMention": "essex", "TopicEntityName": "Essex", "TopicEntityMid": "m.02ly_", "InferentialChain": ["travel.travel_destination.tourist_attractions"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.04g1431", "EntityName": "Beth Chatto Gardens"}, {"AnswerType": "Entity", "AnswerArgument": "m.05zjnd", "EntityName": "Colchester Zoo"}, {"AnswerType": "Entity", "AnswerArgument": "m.0ff9kn", "EntityName": "Waltham Abbey Royal Gunpowder Mills"}, {"AnswerType": "Entity", "AnswerArgument": "m.0fyfyd", "EntityName": "RHS Garden, Hyde Hall"}, {"AnswerType": "Entity", "AnswerArgument": "m.0k5wwrf", "EntityName": "Marsh Farm Country Park"}, {"AnswerType": "Entity", "AnswerArgument": "m.0k6f1n4", "EntityName": "Thorndon Country Park"}, {"AnswerType": "Entity", "AnswerArgument": "m.0k6f1nc", "EntityName": "Cudmore Grove Country Park"}, {"AnswerType": "Entity", "AnswerArgument": "m.0k6f1nr", "EntityName": "Green Island Gardens"}, {"AnswerType": "Entity", "AnswerArgument": "m.0k6f1p1", "EntityName": "Mistley Place Park"}, {"AnswerType": "Entity", "AnswerArgument": "m.0v3bszv", "EntityName": "Stansted Mountfitchet Castle"}]}], "topic_entity": {"m.02ly_": "Essex"}, "qid_topic_entity": {"Q23240": "Essex"}}, {"QuestionId": "WebQTest-1558", "RawQuestion": "who is john cena married to?", "ProcessedQuestion": "who is john cena married to", "Parses": [{"ParseId": "WebQTest-1558.P0", "AnnotatorId": 4, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ypx5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ypx5 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n", "PotentialTopicEntityMention": "john cena", "TopicEntityName": "John Cena", "TopicEntityMid": "m.01ypx5", "InferentialChain": ["people.person.spouse_s", "people.marriage.spouse"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.04ztj", "EntityName": "Marriage", "SourceNodeIndex": 0, "NodePredicate": "people.marriage.type_of_union", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.07n79hq", "EntityName": "Elizabeth Huberdeau"}]}], "topic_entity": {"m.01ypx5": "John Cena"}, "qid_topic_entity": {"Q44437": "John Cena"}}, {"QuestionId": "WebQTest-1658", "RawQuestion": "where do they speak turkish?", "ProcessedQuestion": "where do they speak turkish", "Parses": [{"ParseId": "WebQTest-1658.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02hwyss)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02hwyss ns:language.human_language.countries_spoken_in ?x .\n}\n", "PotentialTopicEntityMention": "turkish", "TopicEntityName": "Turkish Language", "TopicEntityMid": "m.02hwyss", "InferentialChain": ["language.human_language.countries_spoken_in"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01ppq", "EntityName": "Cyprus"}, {"AnswerType": "Entity", "AnswerArgument": "m.01znc_", "EntityName": "Turkey"}, {"AnswerType": "Entity", "AnswerArgument": "m.04fh3", "EntityName": "Republic of Kosovo"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bjv6", "EntityName": "Republic of Macedonia"}, {"AnswerType": "Entity", "AnswerArgument": "m.0h7x", "EntityName": "Austria"}]}], "topic_entity": {"m.02hwyss": "Turkish Language"}, "qid_topic_entity": {"Q256": "Turkish Language"}}, {"QuestionId": "WebQTest-1270", "RawQuestion": "what drugs lindsay lohan abuse?", "ProcessedQuestion": "what drugs lindsay lohan abuse", "Parses": [{"ParseId": "WebQTest-1270.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01pgzn_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01pgzn_ ns:base.popstra.celebrity.substance_abuse ?y .\n?y ns:base.popstra.substance_abuse.substance ?x .\n}\n", "PotentialTopicEntityMention": "lindsay lohan", "TopicEntityName": "Lindsay Lohan", "TopicEntityMid": "m.01pgzn_", "InferentialChain": ["base.popstra.celebrity.substance_abuse", "base.popstra.substance_abuse.substance"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.012mj", "EntityName": "Alcoholic beverage"}, {"AnswerType": "Entity", "AnswerArgument": "m.0256b", "EntityName": "Cocaine"}]}], "topic_entity": {"m.01pgzn_": "Lindsay Lohan"}, "qid_topic_entity": {"Q44903": "Lindsay Lohan"}}, {"QuestionId": "WebQTest-1500", "RawQuestion": "where is olympic national park located?", "ProcessedQuestion": "where is olympic national park located", "Parses": [{"ParseId": "WebQTest-1500.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015nrn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015nrn ns:base.usnationalparks.us_national_park.state ?x .\n}\n", "PotentialTopicEntityMention": "olympic national park", "TopicEntityName": "Olympic National Park", "TopicEntityMid": "m.015nrn", "InferentialChain": ["base.usnationalparks.us_national_park.state"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.081yw", "EntityName": "Washington"}]}], "topic_entity": {"m.015nrn": "Olympic National Park"}, "qid_topic_entity": {"Q372093": "Olympic National Park"}}, {"QuestionId": "WebQTest-1742", "RawQuestion": "what type of government japan have?", "ProcessedQuestion": "what type of government japan have", "Parses": [{"ParseId": "WebQTest-1742.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03_3d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03_3d ns:location.country.form_of_government ?x .\n}\n", "PotentialTopicEntityMention": "japan", "TopicEntityName": "Japan", "TopicEntityMid": "m.03_3d", "InferentialChain": ["location.country.form_of_government"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.018wl5", "EntityName": "Parliamentary system"}, {"AnswerType": "Entity", "AnswerArgument": "m.01fpfn", "EntityName": "Unitary state"}, {"AnswerType": "Entity", "AnswerArgument": "m.01q20", "EntityName": "Constitutional monarchy"}]}], "topic_entity": {"m.03_3d": "Japan"}, "qid_topic_entity": {"Q17": "Japan"}}, {"QuestionId": "WebQTest-1116", "RawQuestion": "what is the capital city of spain wiki answers?", "ProcessedQuestion": "what is the capital city of spain wiki answers", "Parses": [{"ParseId": "WebQTest-1116.P0", "AnnotatorId": 2, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mkj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mkj ns:location.country.capital ?x .\n}\n", "PotentialTopicEntityMention": "spain", "TopicEntityName": "Spain", "TopicEntityMid": "m.06mkj", "InferentialChain": ["location.country.capital"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.056_y", "EntityName": "Madrid"}]}], "topic_entity": {"m.06mkj": "Spain"}, "qid_topic_entity": {"Q29": "Spain"}}, {"QuestionId": "WebQTest-1091", "RawQuestion": "what type of religions are in the united states?", "ProcessedQuestion": "what type of religions are in the united states", "Parses": [{"ParseId": "WebQTest-1091.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09c7w0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09c7w0 ns:location.statistical_region.religions ?y .\n?y ns:location.religion_percentage.religion ?x .\n}\n", "PotentialTopicEntityMention": "united states", "TopicEntityName": "United States of America", "TopicEntityMid": "m.09c7w0", "InferentialChain": ["location.statistical_region.religions", "location.religion_percentage.religion"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01lp8", "EntityName": "Christianity"}, {"AnswerType": "Entity", "AnswerArgument": "m.03_gx", "EntityName": "Judaism"}, {"AnswerType": "Entity", "AnswerArgument": "m.03j6c", "EntityName": "Hinduism"}, {"AnswerType": "Entity", "AnswerArgument": "m.07w8f", "EntityName": "Unitarian Universalism"}, {"AnswerType": "Entity", "AnswerArgument": "m.092bf5", "EntityName": "Buddhism"}, {"AnswerType": "Entity", "AnswerArgument": "m.0flw86", "EntityName": "Islam"}, {"AnswerType": "Entity", "AnswerArgument": "m.0kpl", "EntityName": "Atheism"}]}], "topic_entity": {"m.09c7w0": "United States of America"}, "qid_topic_entity": {"Q30": "United States of America"}}, {"QuestionId": "WebQTest-480", "RawQuestion": "where does name pennsylvania come from?", "ProcessedQuestion": "where does name pennsylvania come from", "Parses": [{"ParseId": "WebQTest-480.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05tbn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05tbn ns:symbols.namesake.named_after ?x .\n}\n", "PotentialTopicEntityMention": "pennsylvania", "TopicEntityName": "Pennsylvania", "TopicEntityMid": "m.05tbn", "InferentialChain": ["symbols.namesake.named_after"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.03br25", "EntityName": "William Penn"}]}], "topic_entity": {"m.05tbn": "Pennsylvania"}, "qid_topic_entity": {"Q1400": "Pennsylvania"}}, {"QuestionId": "WebQTest-664", "RawQuestion": "what was firefox programmed in?", "ProcessedQuestion": "what was firefox programmed in", "Parses": [{"ParseId": "WebQTest-664.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01dyhm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01dyhm ns:computer.software.languages_used ?x .\n}\n", "PotentialTopicEntityMention": "firefox", "TopicEntityName": "Firefox", "TopicEntityMid": "m.01dyhm", "InferentialChain": ["computer.software.languages_used"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.011y70", "EntityName": "XUL"}, {"AnswerType": "Entity", "AnswerArgument": "m.015tjh", "EntityName": "Cascading Style Sheets"}, {"AnswerType": "Entity", "AnswerArgument": "m.02p97", "EntityName": "JavaScript"}, {"AnswerType": "Entity", "AnswerArgument": "m.03cjm6", "EntityName": "XBL"}, {"AnswerType": "Entity", "AnswerArgument": "m.0jgqg", "EntityName": "C++"}]}], "topic_entity": {"m.01dyhm": "Firefox"}, "qid_topic_entity": {"Q698": "Firefox"}}, {"QuestionId": "WebQTest-261", "RawQuestion": "what is cindy sherman known for?", "ProcessedQuestion": "what is cindy sherman known for", "Parses": [{"ParseId": "WebQTest-261.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.074g02)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.074g02 ns:people.person.profession ?x .\n}\n", "PotentialTopicEntityMention": "cindy sherman", "TopicEntityName": "Cindy Sherman", "TopicEntityMid": "m.074g02", "InferentialChain": ["people.person.profession"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02jknp", "EntityName": "Film director"}, {"AnswerType": "Entity", "AnswerArgument": "m.03hz6vv", "EntityName": "Visual Artist"}, {"AnswerType": "Entity", "AnswerArgument": "m.0lgw7", "EntityName": "Photographer"}, {"AnswerType": "Entity", "AnswerArgument": "m.0n1h", "EntityName": "Artist"}]}], "topic_entity": {"m.074g02": "Cindy Sherman"}, "qid_topic_entity": {"Q229455": "Cindy Sherman"}}, {"QuestionId": "WebQTest-1788", "RawQuestion": "what artistic style did henri rousseau work in?", "ProcessedQuestion": "what artistic style did henri rousseau work in", "Parses": [{"ParseId": "WebQTest-1788.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02rdf6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02rdf6 ns:visual_art.visual_artist.associated_periods_or_movements ?x .\n}\n", "PotentialTopicEntityMention": "henri rousseau", "TopicEntityName": "Henri Rousseau", "TopicEntityMid": "m.02rdf6", "InferentialChain": ["visual_art.visual_artist.associated_periods_or_movements"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.015r61", "EntityName": "Modern art"}, {"AnswerType": "Entity", "AnswerArgument": "m.015xrq", "EntityName": "Post-Impressionism"}, {"AnswerType": "Entity", "AnswerArgument": "m.01b8q0", "EntityName": "Na\u00efve art"}, {"AnswerType": "Entity", "AnswerArgument": "m.06s0d7", "EntityName": "Primitivism"}]}], "topic_entity": {"m.02rdf6": "Henri Rousseau"}, "qid_topic_entity": {"Q156386": "Henri Rousseau"}}, {"QuestionId": "WebQTest-1021", "RawQuestion": "what happened at benghazi?", "ProcessedQuestion": "what happened at benghazi", "Parses": [{"ParseId": "WebQTest-1021.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01czt9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01czt9 ns:location.location.events ?x .\n}\n", "PotentialTopicEntityMention": "benghazi", "TopicEntityName": "Benghazi", "TopicEntityMid": "m.01czt9", "InferentialChain": ["location.location.events"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0136_03w", "EntityName": "Operation Dignity Battle"}, {"AnswerType": "Entity", "AnswerArgument": "m.0136zn1t", "EntityName": "Battle of Benina Airport"}, {"AnswerType": "Entity", "AnswerArgument": "m.0gg5z_1", "EntityName": "First Battle of Benghazi"}, {"AnswerType": "Entity", "AnswerArgument": "m.0gj8wbw", "EntityName": "Second Battle of Benghazi"}, {"AnswerType": "Entity", "AnswerArgument": "m.0m1x86k", "EntityName": "2012 U.S. diplomatic missions attacks"}, {"AnswerType": "Entity", "AnswerArgument": "m.0n4bfmd", "EntityName": "2012 Benghazi attack"}, {"AnswerType": "Entity", "AnswerArgument": "m.0w1f1vz", "EntityName": "2013 Benghazi conflict"}]}], "topic_entity": {"m.01czt9": "Benghazi"}, "qid_topic_entity": {"Q40816": "Benghazi"}}, {"QuestionId": "WebQTest-572", "RawQuestion": "where did robin cook die?", "ProcessedQuestion": "where did robin cook die", "Parses": [{"ParseId": "WebQTest-572.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019jy5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019jy5 ns:people.deceased_person.place_of_death ?x .\n}\n", "PotentialTopicEntityMention": "robin cook", "TopicEntityName": "Robin Cook", "TopicEntityMid": "m.019jy5", "InferentialChain": ["people.deceased_person.place_of_death"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.012d9h", "EntityName": "Inverness"}]}], "topic_entity": {"m.019jy5": "Robin Cook"}, "qid_topic_entity": {"Q311214": "Robin Cook"}}, {"QuestionId": "WebQTest-126", "RawQuestion": "who wrote the jana gana mana?", "ProcessedQuestion": "who wrote the jana gana mana", "Parses": [{"ParseId": "WebQTest-126.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fl44)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fl44 ns:music.composition.composer ?x .\n}\n", "PotentialTopicEntityMention": "jana gana mana", "TopicEntityName": "Jana Gana Mana", "TopicEntityMid": "m.0fl44", "InferentialChain": ["music.composition.composer"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02vx721", "EntityName": "Ram Singh Thakur"}, {"AnswerType": "Entity", "AnswerArgument": "m.0d0mbj", "EntityName": "Rabindranath Tagore"}]}], "topic_entity": {"m.0fl44": "Jana Gana Mana"}, "qid_topic_entity": {"Q83099": "Jana Gana Mana"}}, {"QuestionId": "WebQTest-1449", "RawQuestion": "what was laura ingalls wilder famous for?", "ProcessedQuestion": "what was laura ingalls wilder famous for", "Parses": [{"ParseId": "WebQTest-1449.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01bt87)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01bt87 ns:people.person.profession ?x .\n}\n", "PotentialTopicEntityMention": "laura ingalls wilder", "TopicEntityName": "Laura Ingalls Wilder", "TopicEntityMid": "m.01bt87", "InferentialChain": ["people.person.profession"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01d30f", "EntityName": "Teacher"}, {"AnswerType": "Entity", "AnswerArgument": "m.0cbd2", "EntityName": "Writer"}, {"AnswerType": "Entity", "AnswerArgument": "m.0d8qb", "EntityName": "Journalist"}, {"AnswerType": "Entity", "AnswerArgument": "m.0kyk", "EntityName": "Author"}]}], "topic_entity": {"m.01bt87": "Laura Ingalls Wilder"}, "qid_topic_entity": {"Q237514": "Laura Ingalls Wilder"}}, {"QuestionId": "WebQTest-317", "RawQuestion": "where does russia import from?", "ProcessedQuestion": "where does russia import from", "Parses": [{"ParseId": "WebQTest-317.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06bnz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06bnz ns:location.statistical_region.places_imported_from ?y .\n?y ns:location.imports_and_exports.imported_from ?x .\n}\n", "PotentialTopicEntityMention": "russia", "TopicEntityName": "Russia", "TopicEntityMid": "m.06bnz", "InferentialChain": ["location.statistical_region.places_imported_from", "location.imports_and_exports.imported_from"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.07t_x", "EntityName": "Uzbekistan"}]}, {"ParseId": "WebQTest-317.P1", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07t21)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07t21 ns:location.statistical_region.places_imported_from ?y .\n?y ns:location.imports_and_exports.imported_from ?x .\n}\n", "PotentialTopicEntityMention": "russia", "TopicEntityName": "Ukraine", "TopicEntityMid": "m.07t21", "InferentialChain": ["location.statistical_region.places_imported_from", "location.imports_and_exports.imported_from"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.07t_x", "EntityName": "Uzbekistan"}]}], "topic_entity": {"m.06bnz": "Russia", "m.07t21": "Ukraine"}, "qid_topic_entity": {"Q159": "Russia", "Q212": "Ukraine"}}, {"QuestionId": "WebQTest-1858", "RawQuestion": "where does dave ramsey live?", "ProcessedQuestion": "where does dave ramsey live", "Parses": [{"ParseId": "WebQTest-1858.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03zf9h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03zf9h ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\n}\n", "PotentialTopicEntityMention": "dave ramsey", "TopicEntityName": "Dave Ramsey", "TopicEntityMid": "m.03zf9h", "InferentialChain": ["people.person.places_lived", "people.place_lived.location"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.05jbn", "EntityName": "Nashville"}]}], "topic_entity": {"m.03zf9h": "Dave Ramsey"}, "qid_topic_entity": {"Q5229632": "Dave Ramsey"}}, {"QuestionId": "WebQTest-1376", "RawQuestion": "what province is montreal canada located?", "ProcessedQuestion": "what province is montreal canada located", "Parses": [{"ParseId": "WebQTest-1376.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.052p7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.052p7 ns:base.biblioness.bibs_location.state ?x .\n}\n", "PotentialTopicEntityMention": "montreal canada", "TopicEntityName": "Montreal", "TopicEntityMid": "m.052p7", "InferentialChain": ["base.biblioness.bibs_location.state"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0694j", "EntityName": "Qu\u00e9bec"}]}, {"ParseId": "WebQTest-1376.P1", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.052p7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.052p7 ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.01nm .\n}\n", "PotentialTopicEntityMention": "montreal canada", "TopicEntityName": "Montreal", "TopicEntityMid": "m.052p7", "InferentialChain": ["location.location.containedby"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.01nm", "EntityName": "Canadian Province", "SourceNodeIndex": 0, "NodePredicate": "common.topic.notable_types", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0694j", "EntityName": "Qu\u00e9bec"}]}], "topic_entity": {"m.052p7": "Montreal"}, "qid_topic_entity": {"Q340": "Montreal"}}, {"QuestionId": "WebQTest-1877", "RawQuestion": "what kind of painter was wassily kandinsky?", "ProcessedQuestion": "what kind of painter was wassily kandinsky", "Parses": [{"ParseId": "WebQTest-1877.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0856z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0856z ns:visual_art.visual_artist.associated_periods_or_movements ?x .\n}\n", "PotentialTopicEntityMention": "wassily kandinsky", "TopicEntityName": "Wassily Kandinsky", "TopicEntityMid": "m.0856z", "InferentialChain": ["visual_art.visual_artist.associated_periods_or_movements"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.015r61", "EntityName": "Modern art"}, {"AnswerType": "Entity", "AnswerArgument": "m.0197s6", "EntityName": "Abstract art"}, {"AnswerType": "Entity", "AnswerArgument": "m.02xk0r", "EntityName": "Der Blaue Reiter"}, {"AnswerType": "Entity", "AnswerArgument": "m.04191d", "EntityName": "German Expressionism"}, {"AnswerType": "Entity", "AnswerArgument": "m.0pybl", "EntityName": "Expressionism"}]}], "topic_entity": {"m.0856z": "Wassily Kandinsky"}, "qid_topic_entity": {"Q61064": "Wassily Kandinsky"}}, {"QuestionId": "WebQTest-1701", "RawQuestion": "what county is st paul minnesota in?", "ProcessedQuestion": "what county is st paul minnesota in", "Parses": [{"ParseId": "WebQTest-1701.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b2lw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b2lw ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n", "PotentialTopicEntityMention": "st paul minnesota", "TopicEntityName": "Saint Paul", "TopicEntityMid": "m.0b2lw", "InferentialChain": ["location.location.containedby"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.0kpym_", "EntityName": "US County", "SourceNodeIndex": 0, "NodePredicate": "common.topic.notable_types", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0nh57", "EntityName": "Ramsey County"}]}], "topic_entity": {"m.0b2lw": "Saint Paul"}, "qid_topic_entity": {"Q28848": "Saint Paul"}}, {"QuestionId": "WebQTest-624", "RawQuestion": "who plays elena gilbert on vampire diaries?", "ProcessedQuestion": "who plays elena gilbert on vampire diaries", "Parses": [{"ParseId": "WebQTest-624.P0", "AnnotatorId": 3, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0790rw8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0790rw8 ns:tv.tv_character.appeared_in_tv_program ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.series ns:m.05sy2k_ .\n}\n", "PotentialTopicEntityMention": "elena gilbert", "TopicEntityName": "Elena Gilbert", "TopicEntityMid": "m.0790rw8", "InferentialChain": ["tv.tv_character.appeared_in_tv_program", "tv.regular_tv_appearance.actor"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.05sy2k_", "EntityName": "The Vampire Diaries", "SourceNodeIndex": 0, "NodePredicate": "tv.regular_tv_appearance.series", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.027nwk2", "EntityName": "Nina Dobrev"}]}], "topic_entity": {"m.0790rw8": "Elena Gilbert"}, "qid_topic_entity": {"Q908634": "Elena Gilbert"}}, {"QuestionId": "WebQTest-359", "RawQuestion": "what team does heskey play for?", "ProcessedQuestion": "what team does heskey play for", "Parses": [{"ParseId": "WebQTest-359.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01yj16)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01yj16 ns:base.schemastaging.athlete_extra.salary ?y .\n?y ns:base.schemastaging.athlete_salary.team ?x .\n}\n", "PotentialTopicEntityMention": "heskey", "TopicEntityName": "Emile Heskey", "TopicEntityMid": "m.01yj16", "InferentialChain": ["base.schemastaging.athlete_extra.salary", "base.schemastaging.athlete_salary.team"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.03d4g8", "EntityName": "Newcastle Jets FC"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bl8l", "EntityName": "Aston Villa F.C."}]}], "topic_entity": {"m.01yj16": "Emile Heskey"}, "qid_topic_entity": {"Q191162": "Emile Heskey"}}, {"QuestionId": "WebQTest-258", "RawQuestion": "which of the following does australia export the most?", "ProcessedQuestion": "which of the following does australia export the most", "Parses": [{"ParseId": "WebQTest-258.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0chghy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0chghy ns:location.statistical_region.major_exports ?y .\n?y ns:location.imports_exports_by_industry.industry ?x .\n}\n", "PotentialTopicEntityMention": "australia", "TopicEntityName": "Australia", "TopicEntityMid": "m.0chghy", "InferentialChain": ["location.statistical_region.major_exports", "location.imports_exports_by_industry.industry"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02h66y8", "EntityName": "Energy industry"}, {"AnswerType": "Entity", "AnswerArgument": "m.0hkf", "EntityName": "Agriculture"}]}], "topic_entity": {"m.0chghy": "Australia"}, "qid_topic_entity": {"Q408": "Australia"}}, {"QuestionId": "WebQTest-142", "RawQuestion": "who developed the tcp ip reference model?", "ProcessedQuestion": "who developed the tcp ip reference model", "Parses": [{"ParseId": "WebQTest-142.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07hzk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07hzk ns:base.argumentmaps.original_idea.innovator ?x .\n}\n", "PotentialTopicEntityMention": "tcp", "TopicEntityName": "Transmission Control Protocol", "TopicEntityMid": "m.07hzk", "InferentialChain": ["base.argumentmaps.original_idea.innovator"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01_z5v", "EntityName": "Robert  E. Kahn"}, {"AnswerType": "Entity", "AnswerArgument": "m.07z23", "EntityName": "Vint Cerf"}]}, {"ParseId": "WebQTest-142.P1", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07hzk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07hzk ns:law.invention.inventor ?x .\n}\n", "PotentialTopicEntityMention": "tcp", "TopicEntityName": "Transmission Control Protocol", "TopicEntityMid": "m.07hzk", "InferentialChain": ["law.invention.inventor"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01_z5v", "EntityName": "Robert  E. Kahn"}, {"AnswerType": "Entity", "AnswerArgument": "m.07z23", "EntityName": "Vint Cerf"}]}], "topic_entity": {"m.07hzk": "Transmission Control Protocol"}, "qid_topic_entity": {"Q8803": "Transmission Control Protocol"}}, {"QuestionId": "WebQTest-273", "RawQuestion": "when did michael jordan return to the nba?", "ProcessedQuestion": "when did michael jordan return to the nba", "Parses": [{"ParseId": "WebQTest-273.P0", "AnnotatorId": 1, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "VeryLow", "FreeFormComment": "??"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.054c1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.054c1 ns:sports.pro_athlete.sports_played_professionally ?y .\n?y ns:sports.pro_sports_played.career_start ?x .\n?y ns:sports.pro_sports_played.sport ns:m.018w8 .\n}\n", "PotentialTopicEntityMention": "michael jordan", "TopicEntityName": "Michael Jordan", "TopicEntityMid": "m.054c1", "InferentialChain": ["sports.pro_athlete.sports_played_professionally", "sports.pro_sports_played.career_start"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.018w8", "EntityName": "Basketball", "SourceNodeIndex": 0, "NodePredicate": "sports.pro_sports_played.sport", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Value", "AnswerArgument": "1984", "EntityName": null}]}], "topic_entity": {"m.054c1": "Michael Jordan"}, "qid_topic_entity": {"Q41421": "Michael Jordan"}}, {"QuestionId": "WebQTest-1726", "RawQuestion": "where is south portland?", "ProcessedQuestion": "where is south portland", "Parses": [{"ParseId": "WebQTest-1726.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0tpk4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0tpk4 ns:location.hud_county_place.county ?x .\n}\n", "PotentialTopicEntityMention": "south portland", "TopicEntityName": "South Portland", "TopicEntityMid": "m.0tpk4", "InferentialChain": ["location.hud_county_place.county"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0nm9h", "EntityName": "Cumberland County"}]}, {"ParseId": "WebQTest-1726.P1", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0tpk4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0tpk4 ns:location.location.containedby ?x .\n}\n", "PotentialTopicEntityMention": "south portland", "TopicEntityName": "South Portland", "TopicEntityMid": "m.0tpk4", "InferentialChain": ["location.location.containedby"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.050ks", "EntityName": "Maine"}, {"AnswerType": "Entity", "AnswerArgument": "m.09c7w0", "EntityName": "United States of America"}, {"AnswerType": "Entity", "AnswerArgument": "m.0nm9h", "EntityName": "Cumberland County"}]}], "topic_entity": {"m.0tpk4": "South Portland"}, "qid_topic_entity": {"Q1000166": "South Portland"}}, {"QuestionId": "WebQTest-920", "RawQuestion": "what schools did sir isaac newton go to?", "ProcessedQuestion": "what schools did sir isaac newton go to", "Parses": [{"ParseId": "WebQTest-920.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03s9v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03s9v ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n", "PotentialTopicEntityMention": "sir isaac newton", "TopicEntityName": "Isaac Newton", "TopicEntityMid": "m.03s9v", "InferentialChain": ["people.person.education", "education.education.institution"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.07tk7", "EntityName": "Trinity College, Cambridge"}, {"AnswerType": "Entity", "AnswerArgument": "m.0h37f2", "EntityName": "The King's School, Grantham"}]}], "topic_entity": {"m.03s9v": "Isaac Newton"}, "qid_topic_entity": {"Q935": "Isaac Newton"}}, {"QuestionId": "WebQTest-1733", "RawQuestion": "who or what influenced frank lloyd wright?", "ProcessedQuestion": "who or what influenced frank lloyd wright", "Parses": [{"ParseId": "WebQTest-1733.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02wlk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02wlk ns:influence.influence_node.influenced_by ?x .\n}\n", "PotentialTopicEntityMention": "frank lloyd wright", "TopicEntityName": "Frank Lloyd Wright", "TopicEntityMid": "m.02wlk", "InferentialChain": ["influence.influence_node.influenced_by"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01cqpy", "EntityName": "Ebenezer Howard"}, {"AnswerType": "Entity", "AnswerArgument": "m.01whq3q", "EntityName": "Georges I. Gurdjieff and Thomas De Hartmann"}, {"AnswerType": "Entity", "AnswerArgument": "m.06jmjj", "EntityName": "Bruce Price"}, {"AnswerType": "Entity", "AnswerArgument": "m.08304", "EntityName": "William Morris"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bwx3", "EntityName": "Henry David Thoreau"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bybqwn", "EntityName": "Elizabeth Gordon"}, {"AnswerType": "Entity", "AnswerArgument": "m.0dvns", "EntityName": "Louis Sullivan"}]}], "topic_entity": {"m.02wlk": "Frank Lloyd Wright"}, "qid_topic_entity": {"Q5604": "Frank Lloyd Wright"}}, {"QuestionId": "WebQTest-668", "RawQuestion": "what has kristen stewart acted in?", "ProcessedQuestion": "what has kristen stewart acted in", "Parses": [{"ParseId": "WebQTest-668.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07swvb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07swvb ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n", "PotentialTopicEntityMention": "kristen stewart", "TopicEntityName": "Kristen Stewart", "TopicEntityMid": "m.07swvb", "InferentialChain": ["film.actor.film", "film.performance.film"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0_g812d", "EntityName": "Still Alice"}, {"AnswerType": "Entity", "AnswerArgument": "m.0_vl_q6", "EntityName": "Equals"}, {"AnswerType": "Entity", "AnswerArgument": "m.0133dmyj", "EntityName": "Billy Lynn's Long Halftime Walk"}, {"AnswerType": "Entity", "AnswerArgument": "m.0295m6", "EntityName": "Catch That Kid"}, {"AnswerType": "Entity", "AnswerArgument": "m.029xhb", "EntityName": "Panic Room"}, {"AnswerType": "Entity", "AnswerArgument": "m.02nhxs", "EntityName": "Speak"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rj2v7", "EntityName": "What Just Happened"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rx2m5", "EntityName": "Into the Wild"}, {"AnswerType": "Entity", "AnswerArgument": "m.02wgbb", "EntityName": "The Flintstones in Viva Rock Vegas"}, {"AnswerType": "Entity", "AnswerArgument": "m.02z8bfh", "EntityName": "Fierce People"}, {"AnswerType": "Entity", "AnswerArgument": "m.03c7twt", "EntityName": "Adventureland"}, {"AnswerType": "Entity", "AnswerArgument": "m.03nm_fh", "EntityName": "Twilight"}, {"AnswerType": "Entity", "AnswerArgument": "m.04q86tb", "EntityName": "Welcome to the Rileys"}, {"AnswerType": "Entity", "AnswerArgument": "m.04ynd_", "EntityName": "Cold Creek Manor"}, {"AnswerType": "Entity", "AnswerArgument": "m.05b3kq9", "EntityName": "Cutlass"}, {"AnswerType": "Entity", "AnswerArgument": "m.05p5m5f", "EntityName": "The Cake Eaters"}, {"AnswerType": "Entity", "AnswerArgument": "m.05pdh86", "EntityName": "The Twilight Saga: New Moon"}, {"AnswerType": "Entity", "AnswerArgument": "m.05q7874", "EntityName": "The Runaways"}, {"AnswerType": "Entity", "AnswerArgument": "m.06wjwv", "EntityName": "The Thirteenth Year"}, {"AnswerType": "Entity", "AnswerArgument": "m.075wx7_", "EntityName": "Eclipse"}, {"AnswerType": "Entity", "AnswerArgument": "m.075wx89", "EntityName": "The Twilight Saga: Breaking Dawn - Part 1"}, {"AnswerType": "Entity", "AnswerArgument": "m.08ldl8", "EntityName": "Undertow"}, {"AnswerType": "Entity", "AnswerArgument": "m.09bw4_", "EntityName": "Jumper"}, {"AnswerType": "Entity", "AnswerArgument": "m.09qs_s", "EntityName": "Zathura"}, {"AnswerType": "Entity", "AnswerArgument": "m.0b6hmnc", "EntityName": "The Yellow Handkerchief"}, {"AnswerType": "Entity", "AnswerArgument": "m.0cp0t91", "EntityName": "On the Road"}, {"AnswerType": "Entity", "AnswerArgument": "m.0cty5n", "EntityName": "The Safety of Objects"}, {"AnswerType": "Entity", "AnswerArgument": "m.0d5jxc", "EntityName": "The Messengers"}, {"AnswerType": "Entity", "AnswerArgument": "m.0djz0rc", "EntityName": "The Twilight Saga: Breaking Dawn - Part 2"}, {"AnswerType": "Entity", "AnswerArgument": "m.0fjckn", "EntityName": "In the Land of Women"}, {"AnswerType": "Entity", "AnswerArgument": "m.0g5qs2k", "EntityName": "Snow White and the Huntsman"}, {"AnswerType": "Entity", "AnswerArgument": "m.0n4n1y_", "EntityName": "Snow White and the Huntsman 2"}, {"AnswerType": "Entity", "AnswerArgument": "m.0w06pqf", "EntityName": "The Big Shoe"}, {"AnswerType": "Entity", "AnswerArgument": "m.0w06rkh", "EntityName": "Clouds of Sils Maria"}, {"AnswerType": "Entity", "AnswerArgument": "m.0w1zl9t", "EntityName": "Camp X-Ray"}, {"AnswerType": "Entity", "AnswerArgument": "m.0ywy_65", "EntityName": "American Ultra"}, {"AnswerType": "Entity", "AnswerArgument": "m.0ywy9pl", "EntityName": "Anesthesia"}]}], "topic_entity": {"m.07swvb": "Kristen Stewart"}, "qid_topic_entity": {"Q126599": "Kristen Stewart"}}, {"QuestionId": "WebQTest-991", "RawQuestion": "who played donna on west wing?", "ProcessedQuestion": "who played donna on west wing", "Parses": [{"ParseId": "WebQTest-991.P0", "AnnotatorId": 5, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02kvknw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02kvknw ns:tv.tv_character.appeared_in_tv_program ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.series ns:m.0g60z .\n}\n", "PotentialTopicEntityMention": "donna", "TopicEntityName": "Donnatella Moss", "TopicEntityMid": "m.02kvknw", "InferentialChain": ["tv.tv_character.appeared_in_tv_program", "tv.regular_tv_appearance.actor"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.0g60z", "EntityName": "The West Wing", "SourceNodeIndex": 0, "NodePredicate": "tv.regular_tv_appearance.series", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.040t74", "EntityName": "Janel Moloney"}]}], "topic_entity": {"m.02kvknw": "Donnatella Moss"}, "qid_topic_entity": {"Q3036775": "Donnatella Moss"}}, {"QuestionId": "WebQTest-1626", "RawQuestion": "who wrote st trinians?", "ProcessedQuestion": "who wrote st trinians", "Parses": [{"ParseId": "WebQTest-1626.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01nxmb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01nxmb ns:fictional_universe.fictional_universe.created_by ?x .\n}\n", "PotentialTopicEntityMention": "st trinians", "TopicEntityName": "St Trinian's School", "TopicEntityMid": "m.01nxmb", "InferentialChain": ["fictional_universe.fictional_universe.created_by"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01v2jh", "EntityName": "Ronald Searle"}]}], "topic_entity": {"m.01nxmb": "St Trinian's School"}, "qid_topic_entity": {"Q3495306": "St Trinian's School"}}, {"QuestionId": "WebQTest-1257", "RawQuestion": "where is denmark south carolina?", "ProcessedQuestion": "where is denmark south carolina", "Parses": [{"ParseId": "WebQTest-1257.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_kl9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_kl9 ns:location.hud_county_place.county ?x .\n}\n", "PotentialTopicEntityMention": "denmark south carolina", "TopicEntityName": "Denmark", "TopicEntityMid": "m.0_kl9", "InferentialChain": ["location.hud_county_place.county"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0mw39", "EntityName": "Bamberg County"}]}, {"ParseId": "WebQTest-1257.P1", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_kl9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_kl9 ns:location.location.containedby ?x .\n}\n", "PotentialTopicEntityMention": "denmark south carolina", "TopicEntityName": "Denmark", "TopicEntityMid": "m.0_kl9", "InferentialChain": ["location.location.containedby"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.06yxd", "EntityName": "South Carolina"}, {"AnswerType": "Entity", "AnswerArgument": "m.09c7w0", "EntityName": "United States of America"}, {"AnswerType": "Entity", "AnswerArgument": "m.0mw39", "EntityName": "Bamberg County"}]}], "topic_entity": {"m.0_kl9": "Denmark"}, "qid_topic_entity": {"Q936697": "Denmark"}}, {"QuestionId": "WebQTest-531", "RawQuestion": "what style of music does michael jackson perform?", "ProcessedQuestion": "what style of music does michael jackson perform", "Parses": [{"ParseId": "WebQTest-531.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09889g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09889g ns:music.artist.genre ?x .\n}\n", "PotentialTopicEntityMention": "michael jackson", "TopicEntityName": "Michael Jackson", "TopicEntityMid": "m.09889g", "InferentialChain": ["music.artist.genre"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.021_z5", "EntityName": "New jack swing"}, {"AnswerType": "Entity", "AnswerArgument": "m.025sc50", "EntityName": "Contemporary R&B"}, {"AnswerType": "Entity", "AnswerArgument": "m.026z9", "EntityName": "Disco"}, {"AnswerType": "Entity", "AnswerArgument": "m.02bqnt", "EntityName": "Motown Sound"}, {"AnswerType": "Entity", "AnswerArgument": "m.02lkt", "EntityName": "Electronic music"}, {"AnswerType": "Entity", "AnswerArgument": "m.02lnbg", "EntityName": "Dance-pop"}, {"AnswerType": "Entity", "AnswerArgument": "m.02vjzr", "EntityName": "Adult contemporary music"}, {"AnswerType": "Entity", "AnswerArgument": "m.02x8m", "EntityName": "Funk"}, {"AnswerType": "Entity", "AnswerArgument": "m.03c34yl", "EntityName": "Post-disco"}, {"AnswerType": "Entity", "AnswerArgument": "m.05bt6j", "EntityName": "Pop rock"}, {"AnswerType": "Entity", "AnswerArgument": "m.064t9", "EntityName": "Pop music"}, {"AnswerType": "Entity", "AnswerArgument": "m.06by7", "EntityName": "Rock music"}, {"AnswerType": "Entity", "AnswerArgument": "m.06j6l", "EntityName": "Rhythm and blues"}, {"AnswerType": "Entity", "AnswerArgument": "m.0ggx5q", "EntityName": "Dance music"}, {"AnswerType": "Entity", "AnswerArgument": "m.0gywn", "EntityName": "Soul music"}]}], "topic_entity": {"m.09889g": "Michael Jackson"}, "qid_topic_entity": {"Q2831": "Michael Jackson"}}, {"QuestionId": "WebQTest-592", "RawQuestion": "when did shays rebellion start?", "ProcessedQuestion": "when did shays rebellion start", "Parses": [{"ParseId": "WebQTest-592.P0", "AnnotatorId": 1, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0x284)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0x284 ns:time.event.start_date ?x .\n}\n", "PotentialTopicEntityMention": "shays rebellion", "TopicEntityName": "Shays' Rebellion", "TopicEntityMid": "m.0x284", "InferentialChain": ["time.event.start_date"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Value", "AnswerArgument": "1786", "EntityName": null}]}], "topic_entity": {"m.0x284": "Shays' Rebellion"}, "qid_topic_entity": {"Q392601": "Shays' Rebellion"}}, {"QuestionId": "WebQTest-253", "RawQuestion": "what countries included in the uk?", "ProcessedQuestion": "what countries included in the uk", "Parses": [{"ParseId": "WebQTest-253.P0", "AnnotatorId": 3, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ssc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ssc ns:base.aareas.schema.administrative_area.administrative_children ?x .\n?x ns:base.aareas.schema.administrative_area.administrative_area_type ns:m.0hzjlmp .\n}\n", "PotentialTopicEntityMention": "uk", "TopicEntityName": "United Kingdom", "TopicEntityMid": "m.07ssc", "InferentialChain": ["base.aareas.schema.administrative_area.administrative_children"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.0hzjlmp", "EntityName": "UK constituent country", "SourceNodeIndex": 0, "NodePredicate": "base.aareas.schema.administrative_area.administrative_area_type", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02jx1", "EntityName": "England"}, {"AnswerType": "Entity", "AnswerArgument": "m.05bcl", "EntityName": "Northern Ireland"}, {"AnswerType": "Entity", "AnswerArgument": "m.06q1r", "EntityName": "Scotland"}, {"AnswerType": "Entity", "AnswerArgument": "m.0j5g9", "EntityName": "Wales"}]}], "topic_entity": {"m.07ssc": "United Kingdom"}, "qid_topic_entity": {"Q145": "United Kingdom"}}, {"QuestionId": "WebQTest-1600", "RawQuestion": "what honor did agatha christie receive in 1971?", "ProcessedQuestion": "what honor did agatha christie receive in 1971", "Parses": [{"ParseId": "WebQTest-1600.P0", "AnnotatorId": 1, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ldd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ldd ns:award.award_winner.awards_won ?y .\n?y ns:award.award_honor.award ?x .\nFILTER(NOT EXISTS {?y ns:award.award_honor.year ?sk0} || \nEXISTS {?y ns:award.award_honor.year ?sk1 . \nFILTER(xsd:datetime(?sk1) >= \"1971-01-01\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:award.award_honor.year ?sk2} || \nEXISTS {?y ns:award.award_honor.year ?sk3 . \nFILTER(xsd:datetime(?sk3) <= \"1971-12-31\"^^xsd:dateTime) })\n}\n", "PotentialTopicEntityMention": "agatha christie", "TopicEntityName": "Agatha Christie", "TopicEntityMid": "m.0ldd", "InferentialChain": ["award.award_winner.awards_won", "award.award_honor.award"], "Constraints": [{"Operator": "GreaterOrEqual", "ArgumentType": "Value", "Argument": "1971-01-01", "EntityName": "", "SourceNodeIndex": 0, "NodePredicate": "award.award_honor.year", "ValueType": "DateTime"}, {"Operator": "LessOrEqual", "ArgumentType": "Value", "Argument": "1971-12-31", "EntityName": "", "SourceNodeIndex": 0, "NodePredicate": "award.award_honor.year", "ValueType": "DateTime"}], "Time": {"IsRelativeToNow": false, "Start": "1971-01-01", "End": "1971-12-31", "AssociatedConstraints": [0, 1], "PotentialTimeMention": "1971"}, "Order": null, "Answers": []}], "topic_entity": {"m.0ldd": "Agatha Christie"}, "qid_topic_entity": {"Q35064": "Agatha Christie"}}, {"QuestionId": "WebQTest-1848", "RawQuestion": "what instrument does louis armstrong?", "ProcessedQuestion": "what instrument does louis armstrong", "Parses": [{"ParseId": "WebQTest-1848.P0", "AnnotatorId": 2, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04n32)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04n32 ns:music.group_member.instruments_played ?x .\n}\n", "PotentialTopicEntityMention": "louis armstrong", "TopicEntityName": "Louis Armstrong", "TopicEntityMid": "m.04n32", "InferentialChain": ["music.group_member.instruments_played"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.020w2", "EntityName": "Cornet"}, {"AnswerType": "Entity", "AnswerArgument": "m.07gql", "EntityName": "Trumpet"}]}], "topic_entity": {"m.04n32": "Louis Armstrong"}, "qid_topic_entity": {"Q1779": "Louis Armstrong"}}, {"QuestionId": "WebQTest-1781", "RawQuestion": "who or what influenced albert einstein?", "ProcessedQuestion": "who or what influenced albert einstein", "Parses": [{"ParseId": "WebQTest-1781.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jcx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jcx ns:influence.influence_node.influenced_by ?x .\n}\n", "PotentialTopicEntityMention": "albert einstein", "TopicEntityName": "Albert Einstein", "TopicEntityMid": "m.0jcx", "InferentialChain": ["influence.influence_node.influenced_by"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.012102", "EntityName": "Henry George"}, {"AnswerType": "Entity", "AnswerArgument": "m.015n8", "EntityName": "Baruch Spinoza"}, {"AnswerType": "Entity", "AnswerArgument": "m.015yk8", "EntityName": "Karl Pearson"}, {"AnswerType": "Entity", "AnswerArgument": "m.01bgwr", "EntityName": "Hermann Minkowski"}, {"AnswerType": "Entity", "AnswerArgument": "m.01dfd4", "EntityName": "Moritz Schlick"}, {"AnswerType": "Entity", "AnswerArgument": "m.026lj", "EntityName": "David Hume"}, {"AnswerType": "Entity", "AnswerArgument": "m.032l1", "EntityName": "Fyodor Dostoyevsky"}, {"AnswerType": "Entity", "AnswerArgument": "m.03cdg", "EntityName": "George Bernard Shaw"}, {"AnswerType": "Entity", "AnswerArgument": "m.03s9v", "EntityName": "Isaac Newton"}, {"AnswerType": "Entity", "AnswerArgument": "m.0434m", "EntityName": "James Clerk Maxwell"}, {"AnswerType": "Entity", "AnswerArgument": "m.04xfb", "EntityName": "Mahatma Gandhi"}, {"AnswerType": "Entity", "AnswerArgument": "m.05q658z", "EntityName": "Riazuddin"}, {"AnswerType": "Entity", "AnswerArgument": "m.05vy1", "EntityName": "Paul Val\u00e9ry"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bjvq", "EntityName": "Bernhard Riemann"}, {"AnswerType": "Entity", "AnswerArgument": "m.0dm1p", "EntityName": "Thomas Young"}, {"AnswerType": "Entity", "AnswerArgument": "m.0fcy0", "EntityName": "Ernst Mach"}, {"AnswerType": "Entity", "AnswerArgument": "m.0j3v", "EntityName": "Arthur Schopenhauer"}, {"AnswerType": "Entity", "AnswerArgument": "m.0m3hd", "EntityName": "Hendrik Lorentz"}]}], "topic_entity": {"m.0jcx": "Albert Einstein"}, "qid_topic_entity": {"Q937": "Albert Einstein"}}, {"QuestionId": "WebQTest-1911", "RawQuestion": "where did scott fitzgerald go to college?", "ProcessedQuestion": "where did scott fitzgerald go to college", "Parses": [{"ParseId": "WebQTest-1911.P0", "AnnotatorId": 5, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02zjd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02zjd ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n", "PotentialTopicEntityMention": "scott fitzgerald", "TopicEntityName": "F. Scott Fitzgerald", "TopicEntityMid": "m.02zjd", "InferentialChain": ["people.person.education", "education.education.institution"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.01y2hnl", "EntityName": "College/University", "SourceNodeIndex": 1, "NodePredicate": "common.topic.notable_types", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.05zl0", "EntityName": "Princeton University"}]}], "topic_entity": {"m.02zjd": "F. Scott Fitzgerald"}, "qid_topic_entity": {"Q93354": "F. Scott Fitzgerald"}}, {"QuestionId": "WebQTest-1926", "RawQuestion": "when did the libyan conflict start?", "ProcessedQuestion": "when did the libyan conflict start", "Parses": [{"ParseId": "WebQTest-1926.P0", "AnnotatorId": 1, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gh674m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gh674m ns:time.event.start_date ?x .\n}\n", "PotentialTopicEntityMention": "libyan conflict", "TopicEntityName": "2011 military intervention in Libya", "TopicEntityMid": "m.0gh674m", "InferentialChain": ["time.event.start_date"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Value", "AnswerArgument": "2011-03-19", "EntityName": null}]}], "topic_entity": {"m.0gh674m": "2011 military intervention in Libya"}, "qid_topic_entity": {"Q210714": "2011 military intervention in Libya"}}, {"QuestionId": "WebQTest-80", "RawQuestion": "what county is greeley colorado in?", "ProcessedQuestion": "what county is greeley colorado in", "Parses": [{"ParseId": "WebQTest-80.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0rczx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0rczx ns:location.hud_county_place.county ?x .\n}\n", "PotentialTopicEntityMention": "greeley colorado", "TopicEntityName": "Greeley", "TopicEntityMid": "m.0rczx", "InferentialChain": ["location.hud_county_place.county"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0n_ps", "EntityName": "Weld County"}]}, {"ParseId": "WebQTest-80.P1", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0rczx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0rczx ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n", "PotentialTopicEntityMention": "greeley colorado", "TopicEntityName": "Greeley", "TopicEntityMid": "m.0rczx", "InferentialChain": ["location.location.containedby"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.0kpym_", "EntityName": "US County", "SourceNodeIndex": 0, "NodePredicate": "common.topic.notable_types", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0n_ps", "EntityName": "Weld County"}]}], "topic_entity": {"m.0rczx": "Greeley"}, "qid_topic_entity": {"Q94274": "Greeley"}}, {"QuestionId": "WebQTest-1221", "RawQuestion": "what college did joakim noah?", "ProcessedQuestion": "what college did joakim noah", "Parses": [{"ParseId": "WebQTest-1221.P0", "AnnotatorId": 5, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c2yrf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c2yrf ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n", "PotentialTopicEntityMention": "joakim noah", "TopicEntityName": "Joakim Noah", "TopicEntityMid": "m.0c2yrf", "InferentialChain": ["people.person.education", "education.education.institution"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.01y2hnl", "EntityName": "College/University", "SourceNodeIndex": 1, "NodePredicate": "common.topic.notable_types", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0j_sncb", "EntityName": "University of Florida"}]}], "topic_entity": {"m.0c2yrf": "Joakim Noah"}, "qid_topic_entity": {"Q311735": "Joakim Noah"}}, {"QuestionId": "WebQTest-1628", "RawQuestion": "what type government does mexico have?", "ProcessedQuestion": "what type government does mexico have", "Parses": [{"ParseId": "WebQTest-1628.P0", "AnnotatorId": 2, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b90_r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b90_r ns:location.country.form_of_government ?x .\n}\n", "PotentialTopicEntityMention": "mexico", "TopicEntityName": "Mexico", "TopicEntityMid": "m.0b90_r", "InferentialChain": ["location.country.form_of_government"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01d9r3", "EntityName": "Presidential system"}, {"AnswerType": "Entity", "AnswerArgument": "m.0c9rw5", "EntityName": "Constitutional republic"}, {"AnswerType": "Entity", "AnswerArgument": "m.0j729", "EntityName": "Federal republic"}]}], "topic_entity": {"m.0b90_r": "Mexico"}, "qid_topic_entity": {"Q96": "Mexico"}}, {"QuestionId": "WebQTest-1268", "RawQuestion": "where did jay moriarty die?", "ProcessedQuestion": "where did jay moriarty die", "Parses": [{"ParseId": "WebQTest-1268.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04jswm8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04jswm8 ns:people.deceased_person.place_of_death ?x .\n}\n", "PotentialTopicEntityMention": "jay moriarty", "TopicEntityName": "Jay Moriarty", "TopicEntityMid": "m.04jswm8", "InferentialChain": ["people.deceased_person.place_of_death"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.04ty8", "EntityName": "Maldives"}]}], "topic_entity": {"m.04jswm8": "Jay Moriarty"}, "qid_topic_entity": {"Q3737389": "Jay Moriarty"}}, {"QuestionId": "WebQTest-1879", "RawQuestion": "what money does cuba use?", "ProcessedQuestion": "what money does cuba use", "Parses": [{"ParseId": "WebQTest-1879.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d04z6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d04z6 ns:location.country.currency_used ?x .\n}\n", "PotentialTopicEntityMention": "cuba", "TopicEntityName": "Cuba", "TopicEntityMid": "m.0d04z6", "InferentialChain": ["location.country.currency_used"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.049p2z", "EntityName": "Cuban peso"}, {"AnswerType": "Entity", "AnswerArgument": "m.049p6c", "EntityName": "Cuban convertible peso"}]}], "topic_entity": {"m.0d04z6": "Cuba"}, "qid_topic_entity": {"Q241": "Cuba"}}, {"QuestionId": "WebQTest-308", "RawQuestion": "who did reese witherspoon get married to?", "ProcessedQuestion": "who did reese witherspoon get married to", "Parses": [{"ParseId": "WebQTest-308.P0", "AnnotatorId": 4, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0n6f8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0n6f8 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\nFILTER(NOT EXISTS {?y ns:people.marriage.from ?sk0} || \nEXISTS {?y ns:people.marriage.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.marriage.to ?sk2} || \nEXISTS {?y ns:people.marriage.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n", "PotentialTopicEntityMention": "reese witherspoon", "TopicEntityName": "Reese Witherspoon", "TopicEntityMid": "m.0n6f8", "InferentialChain": ["people.person.spouse_s", "people.marriage.spouse"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.04ztj", "EntityName": "Marriage", "SourceNodeIndex": 0, "NodePredicate": "people.marriage.type_of_union", "ValueType": "String"}, {"Operator": "LessOrEqual", "ArgumentType": "Value", "Argument": "2015-08-10", "EntityName": "", "SourceNodeIndex": 0, "NodePredicate": "people.marriage.from", "ValueType": "DateTime"}, {"Operator": "GreaterOrEqual", "ArgumentType": "Value", "Argument": "2015-08-10", "EntityName": "", "SourceNodeIndex": 0, "NodePredicate": "people.marriage.to", "ValueType": "DateTime"}], "Time": {"IsRelativeToNow": true, "Start": "0000-00-00", "End": "0000-00-00", "AssociatedConstraints": [1, 2], "PotentialTimeMention": null}, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0gxm_yg", "EntityName": "Jim Toth"}]}], "topic_entity": {"m.0n6f8": "Reese Witherspoon"}, "qid_topic_entity": {"Q44063": "Reese Witherspoon"}}, {"QuestionId": "WebQTest-1940", "RawQuestion": "who do islamic people follow?", "ProcessedQuestion": "who do islamic people follow", "Parses": [{"ParseId": "WebQTest-1940.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0flw86)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0flw86 ns:religion.religion.deities ?x .\n}\n", "PotentialTopicEntityMention": "islamic", "TopicEntityName": "Islam", "TopicEntityMid": "m.0flw86", "InferentialChain": ["religion.religion.deities"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.055v4c", "EntityName": "Ramdev Pir"}, {"AnswerType": "Entity", "AnswerArgument": "m.0d05l6", "EntityName": "God"}, {"AnswerType": "Entity", "AnswerArgument": "m.0jfd", "EntityName": "Allah"}]}], "topic_entity": {"m.0flw86": "Islam"}, "qid_topic_entity": {"Q432": "Islam"}}, {"QuestionId": "WebQTest-908", "RawQuestion": "what awards gary paulsen won?", "ProcessedQuestion": "what awards gary paulsen won", "Parses": [{"ParseId": "WebQTest-908.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04fpcx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04fpcx ns:award.award_winner.awards_won ?y .\n?y ns:award.award_honor.award ?x .\n}\n", "PotentialTopicEntityMention": "gary paulsen", "TopicEntityName": "Gary Paulsen", "TopicEntityMid": "m.04fpcx", "InferentialChain": ["award.award_winner.awards_won", "award.award_honor.award"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01cd7p", "EntityName": "John Newbery Medal"}, {"AnswerType": "Entity", "AnswerArgument": "m.027x4ws", "EntityName": "Dorothy Canfield Fisher Children's Book Award"}, {"AnswerType": "Entity", "AnswerArgument": "m.0463dxd", "EntityName": "Margaret Edwards Award"}, {"AnswerType": "Entity", "AnswerArgument": "m.04p1pmd", "EntityName": "Spur Award for Best Juvenile Fiction"}, {"AnswerType": "Entity", "AnswerArgument": "m.04p1pmh", "EntityName": "Spur Award for Best Juvenile Nonfiction"}, {"AnswerType": "Entity", "AnswerArgument": "m.09kkqzd", "EntityName": "Anne V. Zarrow Award for Young Readers' Literature"}, {"AnswerType": "Entity", "AnswerArgument": "m.0djddy", "EntityName": "Regina Medal"}]}], "topic_entity": {"m.04fpcx": "Gary Paulsen"}, "qid_topic_entity": {"Q718463": "Gary Paulsen"}}, {"QuestionId": "WebQTest-166", "RawQuestion": "what was dr seuss education?", "ProcessedQuestion": "what was dr seuss education", "Parses": [{"ParseId": "WebQTest-166.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02g3w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02g3w ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n", "PotentialTopicEntityMention": "dr seuss", "TopicEntityName": "Theodore Lesieg", "TopicEntityMid": "m.02g3w", "InferentialChain": ["people.person.education", "education.education.institution"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02bqy", "EntityName": "Dartmouth College"}, {"AnswerType": "Entity", "AnswerArgument": "m.07tgn", "EntityName": "University of Oxford"}, {"AnswerType": "Entity", "AnswerArgument": "m.0ym1n", "EntityName": "Lincoln College, Oxford"}]}], "topic_entity": {"m.02g3w": "Theodore Lesieg"}, "qid_topic_entity": {"Q298685": "Theodore Lesieg"}}, {"QuestionId": "WebQTest-537", "RawQuestion": "what has charlie hunnam been in?", "ProcessedQuestion": "what has charlie hunnam been in", "Parses": [{"ParseId": "WebQTest-537.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.057yk8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.057yk8 ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n", "PotentialTopicEntityMention": "charlie hunnam", "TopicEntityName": "Charlie Hunnam", "TopicEntityMid": "m.057yk8", "InferentialChain": ["film.actor.film", "film.performance.film"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "g.11b6gq6dl2", "EntityName": "Knights of the Roundtable: King Arthur"}, {"AnswerType": "Entity", "AnswerArgument": "m.02cbhg", "EntityName": "Cold Mountain"}, {"AnswerType": "Entity", "AnswerArgument": "m.02z0nhq", "EntityName": "Nicholas Nickleby"}, {"AnswerType": "Entity", "AnswerArgument": "m.04y5gz", "EntityName": "Whatever Happened to Harold Smith?"}, {"AnswerType": "Entity", "AnswerArgument": "m.079s_7", "EntityName": "Green Street"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bk88p", "EntityName": "Abandon"}, {"AnswerType": "Entity", "AnswerArgument": "m.0fh2v5", "EntityName": "Children of Men"}, {"AnswerType": "Entity", "AnswerArgument": "m.0g55y4p", "EntityName": "The Ledge"}, {"AnswerType": "Entity", "AnswerArgument": "m.0gx0plf", "EntityName": "Deadfall"}, {"AnswerType": "Entity", "AnswerArgument": "m.0gyffmd", "EntityName": "Frankie Go Boom"}, {"AnswerType": "Entity", "AnswerArgument": "m.0h0yd81", "EntityName": "Pacific Rim"}, {"AnswerType": "Entity", "AnswerArgument": "m.0zn1hg0", "EntityName": "Crimson Peak"}]}], "topic_entity": {"m.057yk8": "Charlie Hunnam"}, "qid_topic_entity": {"Q356294": "Charlie Hunnam"}}, {"QuestionId": "WebQTest-963", "RawQuestion": "who is the miami dolphins quarterback?", "ProcessedQuestion": "who is the miami dolphins quarterback", "Parses": [{"ParseId": "WebQTest-963.P0", "AnnotatorId": 2, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04vn5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04vn5 ns:sports.sports_team.roster ?y .\n?y ns:sports.sports_team_roster.player ?x .\n?y ns:sports.sports_team_roster.position ns:m.06b1q .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n", "PotentialTopicEntityMention": "miami dolphins", "TopicEntityName": "Miami Dolphins", "TopicEntityMid": "m.04vn5", "InferentialChain": ["sports.sports_team.roster", "sports.sports_team_roster.player"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.06b1q", "EntityName": "Quarterback", "SourceNodeIndex": 0, "NodePredicate": "sports.sports_team_roster.position", "ValueType": "String"}, {"Operator": "LessOrEqual", "ArgumentType": "Value", "Argument": "2015-08-10", "EntityName": "", "SourceNodeIndex": 0, "NodePredicate": "sports.sports_team_roster.from", "ValueType": "DateTime"}, {"Operator": "GreaterOrEqual", "ArgumentType": "Value", "Argument": "2015-08-10", "EntityName": "", "SourceNodeIndex": 0, "NodePredicate": "sports.sports_team_roster.to", "ValueType": "DateTime"}], "Time": {"IsRelativeToNow": true, "Start": "0000-00-00", "End": "0000-00-00", "AssociatedConstraints": [1, 2], "PotentialTimeMention": null}, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.027n35s", "EntityName": "Matt Moore"}, {"AnswerType": "Entity", "AnswerArgument": "m.04q9syl", "EntityName": "Ryan Tannehill"}]}], "topic_entity": {"m.04vn5": "Miami Dolphins"}, "qid_topic_entity": {"Q223243": "Miami Dolphins"}}, {"QuestionId": "WebQTest-246", "RawQuestion": "what was nikola tesla inventions?", "ProcessedQuestion": "what was nikola tesla inventions", "Parses": [{"ParseId": "WebQTest-246.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05d1y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05d1y ns:law.inventor.inventions ?x .\n}\n", "PotentialTopicEntityMention": "nikola tesla", "TopicEntityName": "Nikola Tesla", "TopicEntityMid": "m.05d1y", "InferentialChain": ["law.inventor.inventions"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01s499", "EntityName": "Neon lamp"}, {"AnswerType": "Entity", "AnswerArgument": "m.02p196m", "EntityName": "Induction motor"}, {"AnswerType": "Entity", "AnswerArgument": "m.08262", "EntityName": "Wireless telegraphy"}, {"AnswerType": "Entity", "AnswerArgument": "m.09pf_", "EntityName": "Three-phase electric power"}, {"AnswerType": "Entity", "AnswerArgument": "m.09rh1", "EntityName": "Tesla coil"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bt33", "EntityName": "Alternating current"}, {"AnswerType": "Entity", "AnswerArgument": "m.0qjjc", "EntityName": "Remote control"}]}], "topic_entity": {"m.05d1y": "Nikola Tesla"}, "qid_topic_entity": {"Q9036": "Nikola Tesla"}}, {"QuestionId": "WebQTest-1824", "RawQuestion": "what type of currency do they use in spain?", "ProcessedQuestion": "what type of currency do they use in spain", "Parses": [{"ParseId": "WebQTest-1824.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mkj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mkj ns:location.country.currency_used ?x .\n}\n", "PotentialTopicEntityMention": "spain", "TopicEntityName": "Spain", "TopicEntityMid": "m.06mkj", "InferentialChain": ["location.country.currency_used"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02l6h", "EntityName": "Euro"}]}], "topic_entity": {"m.06mkj": "Spain"}, "qid_topic_entity": {"Q29": "Spain"}}, {"QuestionId": "WebQTest-616", "RawQuestion": "what was queen elizabeth ii childhood nickname?", "ProcessedQuestion": "what was queen elizabeth ii childhood nickname", "Parses": [{"ParseId": "WebQTest-616.P0", "AnnotatorId": 1, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Low", "FreeFormComment": "?"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d1_f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d1_f ns:base.schemastaging.context_name.nickname ?x .\n}\n", "PotentialTopicEntityMention": "elizabeth ii", "TopicEntityName": "Elizabeth II", "TopicEntityMid": "m.0d1_f", "InferentialChain": ["base.schemastaging.context_name.nickname"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Value", "AnswerArgument": "Elizabeth II", "EntityName": null}, {"AnswerType": "Value", "AnswerArgument": "Lilibet", "EntityName": null}]}], "topic_entity": {"m.0d1_f": "Elizabeth II"}, "qid_topic_entity": {"Q9682": "Elizabeth II"}}, {"QuestionId": "WebQTest-417", "RawQuestion": "who plays kenneth?", "ProcessedQuestion": "who plays kenneth", "Parses": [{"ParseId": "WebQTest-417.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0272jt5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0272jt5 ns:tv.tv_character.appeared_in_tv_program ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n}\n", "PotentialTopicEntityMention": "kenneth", "TopicEntityName": "Kenneth Parcell", "TopicEntityMid": "m.0272jt5", "InferentialChain": ["tv.tv_character.appeared_in_tv_program", "tv.regular_tv_appearance.actor"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0h27vc", "EntityName": "Jack McBrayer"}]}], "topic_entity": {"m.0272jt5": "Kenneth Parcell"}, "qid_topic_entity": {"Q6390576": "Kenneth Parcell"}}, {"QuestionId": "WebQTest-652", "RawQuestion": "what kind of hispanic is selena gomez?", "ProcessedQuestion": "what kind of hispanic is selena gomez", "Parses": [{"ParseId": "WebQTest-652.P0", "AnnotatorId": 2, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "VeryLow", "FreeFormComment": "??"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gs6vr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gs6vr ns:people.person.ethnicity ?x .\n}\n", "PotentialTopicEntityMention": "selena gomez", "TopicEntityName": "Selena Gomez", "TopicEntityMid": "m.0gs6vr", "InferentialChain": ["people.person.ethnicity"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.09k5jvk", "EntityName": "Mexicans"}, {"AnswerType": "Entity", "AnswerArgument": "m.0xnvg", "EntityName": "Italian American"}]}], "topic_entity": {"m.0gs6vr": "Selena Gomez"}, "qid_topic_entity": {"Q83287": "Selena Gomez"}}, {"QuestionId": "WebQTest-16", "RawQuestion": "what countries are part of the uk?", "ProcessedQuestion": "what countries are part of the uk", "Parses": [{"ParseId": "WebQTest-16.P0", "AnnotatorId": 3, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ssc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ssc ns:base.aareas.schema.administrative_area.administrative_children ?x .\n?x ns:base.aareas.schema.administrative_area.administrative_area_type ns:m.0hzjlmp .\n}\n", "PotentialTopicEntityMention": "uk", "TopicEntityName": "United Kingdom", "TopicEntityMid": "m.07ssc", "InferentialChain": ["base.aareas.schema.administrative_area.administrative_children"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.0hzjlmp", "EntityName": "UK constituent country", "SourceNodeIndex": 0, "NodePredicate": "base.aareas.schema.administrative_area.administrative_area_type", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02jx1", "EntityName": "England"}, {"AnswerType": "Entity", "AnswerArgument": "m.05bcl", "EntityName": "Northern Ireland"}, {"AnswerType": "Entity", "AnswerArgument": "m.06q1r", "EntityName": "Scotland"}, {"AnswerType": "Entity", "AnswerArgument": "m.0j5g9", "EntityName": "Wales"}]}], "topic_entity": {"m.07ssc": "United Kingdom"}, "qid_topic_entity": {"Q145": "United Kingdom"}}, {"QuestionId": "WebQTest-294", "RawQuestion": "who was carolus linnaeus?", "ProcessedQuestion": "who was carolus linnaeus", "Parses": [{"ParseId": "WebQTest-294.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01lwd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01lwd ns:people.person.profession ?x .\n}\n", "PotentialTopicEntityMention": "carolus linnaeus", "TopicEntityName": "Carl Linnaeus", "TopicEntityMid": "m.01lwd", "InferentialChain": ["people.person.profession"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02h6p1f", "EntityName": "Botanist"}, {"AnswerType": "Entity", "AnswerArgument": "m.05t4q", "EntityName": "Physician"}, {"AnswerType": "Entity", "AnswerArgument": "m.06q2q", "EntityName": "Scientist"}, {"AnswerType": "Entity", "AnswerArgument": "m.07lqg0", "EntityName": "Biologist"}]}], "topic_entity": {"m.01lwd": "Carl Linnaeus"}, "qid_topic_entity": {"Q1043": "Carl Linnaeus"}}, {"QuestionId": "WebQTest-703", "RawQuestion": "what currency should i take to mexico?", "ProcessedQuestion": "what currency should i take to mexico", "Parses": [{"ParseId": "WebQTest-703.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b90_r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b90_r ns:location.country.currency_used ?x .\n}\n", "PotentialTopicEntityMention": "mexico", "TopicEntityName": "Mexico", "TopicEntityMid": "m.0b90_r", "InferentialChain": ["location.country.currency_used"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.012ts8", "EntityName": "Mexican peso"}]}], "topic_entity": {"m.0b90_r": "Mexico"}, "qid_topic_entity": {"Q96": "Mexico"}}, {"QuestionId": "WebQTest-1489", "RawQuestion": "what character did billy d williams play in star wars?", "ProcessedQuestion": "what character did billy d williams play in star wars", "Parses": [{"ParseId": "WebQTest-1489.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027_sn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027_sn ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.0g55yqj .\n}\n", "PotentialTopicEntityMention": "billy d williams", "TopicEntityName": "Billy Dee Williams", "TopicEntityMid": "m.027_sn", "InferentialChain": ["film.actor.film", "film.performance.character"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.0g55yqj", "EntityName": "Robot Chicken: Star Wars Episode III", "SourceNodeIndex": 0, "NodePredicate": "film.performance.film", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0ddrb", "EntityName": "Lando Calrissian"}]}, {"ParseId": "WebQTest-1489.P1", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027_sn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027_sn ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.0f3m1 .\n}\n", "PotentialTopicEntityMention": "billy d williams", "TopicEntityName": "Billy Dee Williams", "TopicEntityMid": "m.027_sn", "InferentialChain": ["film.actor.film", "film.performance.character"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.0f3m1", "EntityName": "Star Wars Episode V: The Empire Strikes Back", "SourceNodeIndex": 0, "NodePredicate": "film.performance.film", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0ddrb", "EntityName": "Lando Calrissian"}]}, {"ParseId": "WebQTest-1489.P2", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027_sn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027_sn ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.0ddjy .\n}\n", "PotentialTopicEntityMention": "billy d williams", "TopicEntityName": "Billy Dee Williams", "TopicEntityMid": "m.027_sn", "InferentialChain": ["film.actor.film", "film.performance.character"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.0ddjy", "EntityName": "Return of the Jedi", "SourceNodeIndex": 0, "NodePredicate": "film.performance.film", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0ddrb", "EntityName": "Lando Calrissian"}]}], "topic_entity": {"m.027_sn": "Billy Dee Williams"}, "qid_topic_entity": {"Q358345": "Billy Dee Williams"}}, {"QuestionId": "WebQTest-156", "RawQuestion": "what time zone am i in california?", "ProcessedQuestion": "what time zone am i in california", "Parses": [{"ParseId": "WebQTest-156.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01n7q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01n7q ns:location.location.time_zones ?x .\n}\n", "PotentialTopicEntityMention": "california", "TopicEntityName": "California", "TopicEntityMid": "m.01n7q", "InferentialChain": ["location.location.time_zones"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02lcqs", "EntityName": "Pacific Time Zone"}]}], "topic_entity": {"m.01n7q": "California"}, "qid_topic_entity": {"Q99": "California"}}, {"QuestionId": "WebQTest-1763", "RawQuestion": "who are the st louis cardinals coaches?", "ProcessedQuestion": "who are the st louis cardinals coaches", "Parses": [{"ParseId": "WebQTest-1763.P0", "AnnotatorId": 4, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06x68)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06x68 ns:baseball.baseball_team.current_coaches ?y .\n?y ns:baseball.current_coaching_tenure.baseball_coach ?x .\n}\n", "PotentialTopicEntityMention": "st louis cardinals", "TopicEntityName": "St. Louis Cardinals", "TopicEntityMid": "m.06x68", "InferentialChain": ["baseball.baseball_team.current_coaches", "baseball.current_coaching_tenure.baseball_coach"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0271dv6", "EntityName": "Joe Pettini"}, {"AnswerType": "Entity", "AnswerArgument": "m.02p7knr", "EntityName": "Marty Mason"}, {"AnswerType": "Entity", "AnswerArgument": "m.03_507", "EntityName": "Hal McRae"}, {"AnswerType": "Entity", "AnswerArgument": "m.07sckg", "EntityName": "Dave Duncan"}, {"AnswerType": "Entity", "AnswerArgument": "m.07vcky", "EntityName": "Jos\u00e9 Oquendo"}, {"AnswerType": "Entity", "AnswerArgument": "m.0glr18", "EntityName": "Dave McKay"}]}], "topic_entity": {"m.06x68": "St. Louis Cardinals"}, "qid_topic_entity": {"Q504309": "St. Louis Cardinals"}}, {"QuestionId": "WebQTest-1572", "RawQuestion": "what should i do today in san francisco?", "ProcessedQuestion": "what should i do today in san francisco", "Parses": [{"ParseId": "WebQTest-1572.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d6lp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d6lp ns:travel.travel_destination.tourist_attractions ?x .\n}\n", "PotentialTopicEntityMention": "san francisco", "TopicEntityName": "San Francisco", "TopicEntityMid": "m.0d6lp", "InferentialChain": ["travel.travel_destination.tourist_attractions"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.012_1t", "EntityName": "San Francisco Museum of Modern Art"}, {"AnswerType": "Entity", "AnswerArgument": "m.012vvtp_", "EntityName": "Travefy"}, {"AnswerType": "Entity", "AnswerArgument": "m.01z4cc", "EntityName": "Angel Island"}, {"AnswerType": "Entity", "AnswerArgument": "m.022q0n", "EntityName": "Coit Tower"}, {"AnswerType": "Entity", "AnswerArgument": "m.023x4y", "EntityName": "Lombard Street"}, {"AnswerType": "Entity", "AnswerArgument": "m.0245vl", "EntityName": "Asian Art Museum of San Francisco"}, {"AnswerType": "Entity", "AnswerArgument": "m.025psq", "EntityName": "Golden Gate Park"}, {"AnswerType": "Entity", "AnswerArgument": "m.027yy0b", "EntityName": "Yerba Buena Center for the Arts"}, {"AnswerType": "Entity", "AnswerArgument": "m.029bdk", "EntityName": "Chinatown"}, {"AnswerType": "Entity", "AnswerArgument": "m.02p_8jw", "EntityName": "Haas-Lilienthal House"}, {"AnswerType": "Entity", "AnswerArgument": "m.02pqty5", "EntityName": "San Francisco Railway Museum"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rwwk9", "EntityName": "Contemporary Jewish Museum"}, {"AnswerType": "Entity", "AnswerArgument": "m.02z4m5c", "EntityName": "Consulate General of Mexico, San Francisco"}, {"AnswerType": "Entity", "AnswerArgument": "m.034gjn", "EntityName": "Exploratorium"}, {"AnswerType": "Entity", "AnswerArgument": "m.035p3", "EntityName": "Golden Gate Bridge"}, {"AnswerType": "Entity", "AnswerArgument": "m.03p_pq", "EntityName": "San Francisco City Hall"}, {"AnswerType": "Entity", "AnswerArgument": "m.04lh5gw", "EntityName": "Camera Obscura"}, {"AnswerType": "Entity", "AnswerArgument": "m.04ptrc", "EntityName": "San Francisco cable car system"}, {"AnswerType": "Entity", "AnswerArgument": "m.04vhpfx", "EntityName": "San Francisco Fire Department Museum"}, {"AnswerType": "Entity", "AnswerArgument": "m.050wqp", "EntityName": "Union Square"}, {"AnswerType": "Entity", "AnswerArgument": "m.057mlm", "EntityName": "Fisherman's Wharf"}, {"AnswerType": "Entity", "AnswerArgument": "m.058h2l", "EntityName": "Ghirardelli Square"}, {"AnswerType": "Entity", "AnswerArgument": "m.0595pv", "EntityName": "Cartoon Art Museum"}, {"AnswerType": "Entity", "AnswerArgument": "m.05nxnt", "EntityName": "Baker Beach"}, {"AnswerType": "Entity", "AnswerArgument": "m.05vvwl", "EntityName": "San Francisco Ferry Building"}, {"AnswerType": "Entity", "AnswerArgument": "m.05w70m", "EntityName": "Twin Peaks"}, {"AnswerType": "Entity", "AnswerArgument": "m.061tjx", "EntityName": "Crissy Field"}, {"AnswerType": "Entity", "AnswerArgument": "m.09ybm9", "EntityName": "Mus\u00e9e M\u00e9canique"}, {"AnswerType": "Entity", "AnswerArgument": "m.0f726z", "EntityName": "Museum of the African Diaspora"}, {"AnswerType": "Entity", "AnswerArgument": "m.0fhvgc", "EntityName": "Japanese Tea Garden"}, {"AnswerType": "Entity", "AnswerArgument": "m.0g2_pk", "EntityName": "St. Regis Museum Tower"}, {"AnswerType": "Entity", "AnswerArgument": "m.0g687", "EntityName": "Presidio of San Francisco"}, {"AnswerType": "Entity", "AnswerArgument": "m.0h594", "EntityName": "Alcatraz Island"}, {"AnswerType": "Entity", "AnswerArgument": "m.0hmt3bb", "EntityName": "Ripley's Believe It or Not! Museum"}, {"AnswerType": "Entity", "AnswerArgument": "m.0j2gj8v", "EntityName": "Palace of the Legion of Honor"}]}], "topic_entity": {"m.0d6lp": "San Francisco"}, "qid_topic_entity": {"Q62": "San Francisco"}}, {"QuestionId": "WebQTest-71", "RawQuestion": "who did michael j fox marry?", "ProcessedQuestion": "who did michael j fox marry", "Parses": [{"ParseId": "WebQTest-71.P0", "AnnotatorId": 4, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hz_1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hz_1 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n", "PotentialTopicEntityMention": "michael j fox", "TopicEntityName": "Michael J. Fox", "TopicEntityMid": "m.0hz_1", "InferentialChain": ["people.person.spouse_s", "people.marriage.spouse"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.04ztj", "EntityName": "Marriage", "SourceNodeIndex": 0, "NodePredicate": "people.marriage.type_of_union", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.03gpck", "EntityName": "Tracy Pollan"}]}], "topic_entity": {"m.0hz_1": "Michael J. Fox"}, "qid_topic_entity": {"Q395274": "Michael J. Fox"}}, {"QuestionId": "WebQTest-296", "RawQuestion": "what kind of government does libya have today?", "ProcessedQuestion": "what kind of government does libya have today", "Parses": [{"ParseId": "WebQTest-296.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04gqr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04gqr ns:location.country.form_of_government ?x .\n}\n", "PotentialTopicEntityMention": "libya", "TopicEntityName": "Libya", "TopicEntityMid": "m.04gqr", "InferentialChain": ["location.country.form_of_government"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02tz3y", "EntityName": "Provisional government"}, {"AnswerType": "Entity", "AnswerArgument": "m.0glnsx", "EntityName": "Parliamentary republic"}]}], "topic_entity": {"m.04gqr": "Libya"}, "qid_topic_entity": {"Q1016": "Libya"}}, {"QuestionId": "WebQTest-912", "RawQuestion": "what currency should i take to turkey?", "ProcessedQuestion": "what currency should i take to turkey", "Parses": [{"ParseId": "WebQTest-912.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01znc_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01znc_ ns:location.country.currency_used ?x .\n}\n", "PotentialTopicEntityMention": "turkey", "TopicEntityName": "Turkey", "TopicEntityMid": "m.01znc_", "InferentialChain": ["location.country.currency_used"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.04dq0w", "EntityName": "Turkish lira"}]}], "topic_entity": {"m.01znc_": "Turkey"}, "qid_topic_entity": {"Q43": "Turkey"}}, {"QuestionId": "WebQTest-1671", "RawQuestion": "where did leif ericson grow up?", "ProcessedQuestion": "where did leif ericson grow up", "Parses": [{"ParseId": "WebQTest-1671.P0", "AnnotatorId": 3, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Low", "FreeFormComment": "? correct entity?"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02vwg2_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02vwg2_ ns:people.person.place_of_birth ?x .\n}\n", "PotentialTopicEntityMention": "leif ericson", "TopicEntityName": "Leif Eriksson", "TopicEntityMid": "m.02vwg2_", "InferentialChain": ["people.person.place_of_birth"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02vmwn", "EntityName": "K\u00f6ping"}]}], "topic_entity": {"m.02vwg2_": "Leif Eriksson"}, "qid_topic_entity": {"Q1814927": "Leif Eriksson"}}, {"QuestionId": "WebQTest-1327", "RawQuestion": "where is shakira from?", "ProcessedQuestion": "where is shakira from", "Parses": [{"ParseId": "WebQTest-1327.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01wj18h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01wj18h ns:music.artist.origin ?x .\n}\n", "PotentialTopicEntityMention": "shakira", "TopicEntityName": "Shakira", "TopicEntityMid": "m.01wj18h", "InferentialChain": ["music.artist.origin"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01ls2", "EntityName": "Colombia"}]}, {"ParseId": "WebQTest-1327.P1", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01wj18h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01wj18h ns:people.person.nationality ?x .\n}\n", "PotentialTopicEntityMention": "shakira", "TopicEntityName": "Shakira", "TopicEntityMid": "m.01wj18h", "InferentialChain": ["people.person.nationality"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01ls2", "EntityName": "Colombia"}]}], "topic_entity": {"m.01wj18h": "Shakira"}, "qid_topic_entity": {"Q34424": "Shakira"}}, {"QuestionId": "WebQTest-782", "RawQuestion": "what countries does nafta include?", "ProcessedQuestion": "what countries does nafta include", "Parses": [{"ParseId": "WebQTest-782.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05jj_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05jj_ ns:organization.membership_organization.members ?y .\n?y ns:organization.organization_membership.member ?x .\n?x ns:common.topic.notable_types ns:m.01mp .\n}\n", "PotentialTopicEntityMention": "nafta", "TopicEntityName": "North American Free Trade Agreement", "TopicEntityMid": "m.05jj_", "InferentialChain": ["organization.membership_organization.members", "organization.organization_membership.member"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.01mp", "EntityName": "Country", "SourceNodeIndex": 1, "NodePredicate": "common.topic.notable_types", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.09c7w0", "EntityName": "United States of America"}, {"AnswerType": "Entity", "AnswerArgument": "m.0b90_r", "EntityName": "Mexico"}, {"AnswerType": "Entity", "AnswerArgument": "m.0d060g", "EntityName": "Canada"}]}], "topic_entity": {"m.05jj_": "North American Free Trade Agreement"}, "qid_topic_entity": {"Q181574": "North American Free Trade Agreement"}}, {"QuestionId": "WebQTest-1663", "RawQuestion": "what music did louis armstrong play?", "ProcessedQuestion": "what music did louis armstrong play", "Parses": [{"ParseId": "WebQTest-1663.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04n32)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04n32 ns:music.artist.genre ?x .\n}\n", "PotentialTopicEntityMention": "louis armstrong", "TopicEntityName": "Louis Armstrong", "TopicEntityMid": "m.04n32", "InferentialChain": ["music.artist.genre"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.015y_n", "EntityName": "Swing music"}, {"AnswerType": "Entity", "AnswerArgument": "m.03_d0", "EntityName": "Jazz"}, {"AnswerType": "Entity", "AnswerArgument": "m.09xw2", "EntityName": "Dixieland"}, {"AnswerType": "Entity", "AnswerArgument": "m.0dhb2", "EntityName": "Scat singing"}, {"AnswerType": "Entity", "AnswerArgument": "m.0m40d", "EntityName": "Traditional pop music"}]}], "topic_entity": {"m.04n32": "Louis Armstrong"}, "qid_topic_entity": {"Q1779": "Louis Armstrong"}}, {"QuestionId": "WebQTest-406", "RawQuestion": "who is the coach of the sf giants?", "ProcessedQuestion": "who is the coach of the sf giants", "Parses": [{"ParseId": "WebQTest-406.P0", "AnnotatorId": 4, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0713r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0713r ns:baseball.baseball_team.current_coaches ?y .\n?y ns:baseball.current_coaching_tenure.baseball_coach ?x .\n}\n", "PotentialTopicEntityMention": "sf giants", "TopicEntityName": "San Francisco Giants", "TopicEntityMid": "m.0713r", "InferentialChain": ["baseball.baseball_team.current_coaches", "baseball.current_coaching_tenure.baseball_coach"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02680w9", "EntityName": "Bill Hayes"}, {"AnswerType": "Entity", "AnswerArgument": "m.02plhsr", "EntityName": "Tim Flannery"}, {"AnswerType": "Entity", "AnswerArgument": "m.02yf3x", "EntityName": "Dave Righetti"}, {"AnswerType": "Entity", "AnswerArgument": "m.057jcc", "EntityName": "Carney Lansford"}, {"AnswerType": "Entity", "AnswerArgument": "m.079w94", "EntityName": "Roberto Kelly"}, {"AnswerType": "Entity", "AnswerArgument": "m.07w9kn", "EntityName": "Ron Wotus"}, {"AnswerType": "Entity", "AnswerArgument": "m.085wxv", "EntityName": "Mark Gardner"}]}], "topic_entity": {"m.0713r": "San Francisco Giants"}, "qid_topic_entity": {"Q308966": "San Francisco Giants"}}, {"QuestionId": "WebQTest-367", "RawQuestion": "what makes elvis presley famous?", "ProcessedQuestion": "what makes elvis presley famous", "Parses": [{"ParseId": "WebQTest-367.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02jq1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02jq1 ns:people.person.profession ?x .\n}\n", "PotentialTopicEntityMention": "elvis presley", "TopicEntityName": "Elvis Presley", "TopicEntityMid": "m.02jq1", "InferentialChain": ["people.person.profession"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02hrh1q", "EntityName": "Actor"}, {"AnswerType": "Entity", "AnswerArgument": "m.099md", "EntityName": "Soldier"}, {"AnswerType": "Entity", "AnswerArgument": "m.09jwl", "EntityName": "Musician"}, {"AnswerType": "Entity", "AnswerArgument": "m.09l65", "EntityName": "Singer"}]}], "topic_entity": {"m.02jq1": "Elvis Presley"}, "qid_topic_entity": {"Q303": "Elvis Presley"}}, {"QuestionId": "WebQTest-1674", "RawQuestion": "who is the leader of north korea today?", "ProcessedQuestion": "who is the leader of north korea today", "Parses": [{"ParseId": "WebQTest-1674.P0", "AnnotatorId": 5, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05b7q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05b7q ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.basic_title ns:m.0h7p97k .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n", "PotentialTopicEntityMention": "north korea", "TopicEntityName": "North Korea", "TopicEntityMid": "m.05b7q", "InferentialChain": ["government.governmental_jurisdiction.governing_officials", "government.government_position_held.office_holder"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.0h7p97k", "EntityName": "Supreme leader", "SourceNodeIndex": 0, "NodePredicate": "government.government_position_held.basic_title", "ValueType": "String"}, {"Operator": "LessOrEqual", "ArgumentType": "Value", "Argument": "2015-08-10", "EntityName": "", "SourceNodeIndex": 0, "NodePredicate": "government.government_position_held.from", "ValueType": "DateTime"}, {"Operator": "GreaterOrEqual", "ArgumentType": "Value", "Argument": "2015-08-10", "EntityName": "", "SourceNodeIndex": 0, "NodePredicate": "government.government_position_held.to", "ValueType": "DateTime"}], "Time": {"IsRelativeToNow": true, "Start": "0000-00-00", "End": "0000-00-00", "AssociatedConstraints": [1, 2], "PotentialTimeMention": "today"}, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0fgw19", "EntityName": "Kim Jong-un"}]}], "topic_entity": {"m.05b7q": "North Korea"}, "qid_topic_entity": {"Q423": "North Korea"}}, {"QuestionId": "WebQTest-1805", "RawQuestion": "what do people in jamaica speak?", "ProcessedQuestion": "what do people in jamaica speak", "Parses": [{"ParseId": "WebQTest-1805.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03_r3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03_r3 ns:location.country.languages_spoken ?x .\n}\n", "PotentialTopicEntityMention": "jamaica", "TopicEntityName": "Jamaica", "TopicEntityMid": "m.03_r3", "InferentialChain": ["location.country.languages_spoken"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01428y", "EntityName": "Jamaican English"}, {"AnswerType": "Entity", "AnswerArgument": "m.04ygk0", "EntityName": "Jamaican Creole English Language"}]}, {"ParseId": "WebQTest-1805.P1", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03_r3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03_r3 ns:location.country.official_language ?x .\n}\n", "PotentialTopicEntityMention": "jamaica", "TopicEntityName": "Jamaica", "TopicEntityMid": "m.03_r3", "InferentialChain": ["location.country.official_language"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01428y", "EntityName": "Jamaican English"}]}], "topic_entity": {"m.03_r3": "Jamaica"}, "qid_topic_entity": {"Q766": "Jamaica"}}, {"QuestionId": "WebQTest-944", "RawQuestion": "what was van halen first album?", "ProcessedQuestion": "what was van halen first album", "Parses": [{"ParseId": "WebQTest-944.P0", "AnnotatorId": 2, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ycfj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ycfj ns:music.artist.album ?x .\n?x ns:music.album.release_date ?sk0 .\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n", "PotentialTopicEntityMention": "van halen", "TopicEntityName": "Van Halen", "TopicEntityMid": "m.0ycfj", "InferentialChain": ["music.artist.album"], "Constraints": [], "Time": null, "Order": {"SortOrder": "Ascending", "Start": 0, "Count": 1, "SourceNodeIndex": 0, "NodePredicate": "music.album.release_date", "ValueType": "DateTime"}, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0vs85p3", "EntityName": "Ain't Talkin' 'Bout Love"}]}], "topic_entity": {"m.0ycfj": "Van Halen"}, "qid_topic_entity": {"Q190155": "Van Halen"}}, {"QuestionId": "WebQTest-56", "RawQuestion": "what county is kansas city kansas?", "ProcessedQuestion": "what county is kansas city kansas", "Parses": [{"ParseId": "WebQTest-56.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0tcj6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0tcj6 ns:location.hud_county_place.county ?x .\n}\n", "PotentialTopicEntityMention": "kansas city kansas", "TopicEntityName": "Kansas City", "TopicEntityMid": "m.0tcj6", "InferentialChain": ["location.hud_county_place.county"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0nnyr", "EntityName": "Wyandotte County"}]}, {"ParseId": "WebQTest-56.P1", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0tcj6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0tcj6 ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n", "PotentialTopicEntityMention": "kansas city kansas", "TopicEntityName": "Kansas City", "TopicEntityMid": "m.0tcj6", "InferentialChain": ["location.location.containedby"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.0kpym_", "EntityName": "US County", "SourceNodeIndex": 0, "NodePredicate": "common.topic.notable_types", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0nnyr", "EntityName": "Wyandotte County"}]}, {"ParseId": "WebQTest-56.P2", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04fdkj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04fdkj ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n", "PotentialTopicEntityMention": "kansas city kansas", "TopicEntityName": "Kansas Speedway", "TopicEntityMid": "m.04fdkj", "InferentialChain": ["location.location.containedby"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.0kpym_", "EntityName": "US County", "SourceNodeIndex": 0, "NodePredicate": "common.topic.notable_types", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0nnyr", "EntityName": "Wyandotte County"}]}], "topic_entity": {"m.0tcj6": "Kansas City", "m.04fdkj": "Kansas Speedway"}, "qid_topic_entity": {"Q486472": "Kansas City", "Q1723946": "Kansas Speedway"}}, {"QuestionId": "WebQTest-656", "RawQuestion": "who is the president of costa rica in 2012?", "ProcessedQuestion": "who is the president of costa rica in 2012", "Parses": [{"ParseId": "WebQTest-656.P0", "AnnotatorId": 4, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "Can't filter on year"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01p8s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01p8s ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.basic_title ns:m.060c4 .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2012-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2012-01-01\"^^xsd:dateTime) })\n}\n", "PotentialTopicEntityMention": "costa rica", "TopicEntityName": "Costa Rica", "TopicEntityMid": "m.01p8s", "InferentialChain": ["government.governmental_jurisdiction.governing_officials", "government.government_position_held.office_holder"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.060c4", "EntityName": "President", "SourceNodeIndex": 0, "NodePredicate": "government.government_position_held.basic_title", "ValueType": "String"}, {"Operator": "LessOrEqual", "ArgumentType": "Value", "Argument": "2012-12-31", "EntityName": "", "SourceNodeIndex": 0, "NodePredicate": "government.government_position_held.from", "ValueType": "DateTime"}, {"Operator": "GreaterOrEqual", "ArgumentType": "Value", "Argument": "2012-01-01", "EntityName": "", "SourceNodeIndex": 0, "NodePredicate": "government.government_position_held.to", "ValueType": "DateTime"}], "Time": {"IsRelativeToNow": false, "Start": "2012-01-01", "End": "2012-12-31", "AssociatedConstraints": [1, 2], "PotentialTimeMention": "2012"}, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0bh9gpm", "EntityName": "Laura Chinchilla"}]}], "topic_entity": {"m.01p8s": "Costa Rica"}, "qid_topic_entity": {"Q800": "Costa Rica"}}, {"QuestionId": "WebQTest-1186", "RawQuestion": "what kind of government does cuba have today?", "ProcessedQuestion": "what kind of government does cuba have today", "Parses": [{"ParseId": "WebQTest-1186.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d04z6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d04z6 ns:location.country.form_of_government ?x .\n}\n", "PotentialTopicEntityMention": "cuba", "TopicEntityName": "Cuba", "TopicEntityMid": "m.0d04z6", "InferentialChain": ["location.country.form_of_government"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01dw03", "EntityName": "Semi-presidential system"}, {"AnswerType": "Entity", "AnswerArgument": "m.01fpfn", "EntityName": "Unitary state"}, {"AnswerType": "Entity", "AnswerArgument": "m.025tbxf", "EntityName": "Socialist state"}, {"AnswerType": "Entity", "AnswerArgument": "m.06cx9", "EntityName": "Republic"}]}], "topic_entity": {"m.0d04z6": "Cuba"}, "qid_topic_entity": {"Q241": "Cuba"}}, {"QuestionId": "WebQTest-342", "RawQuestion": "what countries have english as their official language?", "ProcessedQuestion": "what countries have english as their official language", "Parses": [{"ParseId": "WebQTest-342.P0", "AnnotatorId": 1, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02h40lc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02h40lc ns:language.human_language.countries_spoken_in ?x .\n?x ns:location.country.official_language ns:m.02h40lc .\n}\n", "PotentialTopicEntityMention": "english", "TopicEntityName": "English Language", "TopicEntityMid": "m.02h40lc", "InferentialChain": ["language.human_language.countries_spoken_in"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.02h40lc", "EntityName": "English Language", "SourceNodeIndex": 0, "NodePredicate": "location.country.official_language", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0160w", "EntityName": "Bahamas"}, {"AnswerType": "Entity", "AnswerArgument": "m.0162v", "EntityName": "Barbados"}, {"AnswerType": "Entity", "AnswerArgument": "m.0164b", "EntityName": "Belize"}, {"AnswerType": "Entity", "AnswerArgument": "m.0165b", "EntityName": "Bermuda"}, {"AnswerType": "Entity", "AnswerArgument": "m.0166v", "EntityName": "Botswana"}, {"AnswerType": "Entity", "AnswerArgument": "m.019rg5", "EntityName": "Kenya"}, {"AnswerType": "Entity", "AnswerArgument": "m.01nln", "EntityName": "Cameroon"}, {"AnswerType": "Entity", "AnswerArgument": "m.01nty", "EntityName": "Cayman Islands"}, {"AnswerType": "Entity", "AnswerArgument": "m.020p1", "EntityName": "Cook Islands"}, {"AnswerType": "Entity", "AnswerArgument": "m.026wtlf", "EntityName": "Territory of Papua and New Guinea"}, {"AnswerType": "Entity", "AnswerArgument": "m.027nb", "EntityName": "Dominica"}, {"AnswerType": "Entity", "AnswerArgument": "m.02wt0", "EntityName": "Fiji"}, {"AnswerType": "Entity", "AnswerArgument": "m.03_xj", "EntityName": "Jersey"}, {"AnswerType": "Entity", "AnswerArgument": "m.034m8", "EntityName": "Guyana"}, {"AnswerType": "Entity", "AnswerArgument": "m.034tl", "EntityName": "Guam"}, {"AnswerType": "Entity", "AnswerArgument": "m.035dk", "EntityName": "Ghana"}, {"AnswerType": "Entity", "AnswerArgument": "m.035hm", "EntityName": "Gibraltar"}, {"AnswerType": "Entity", "AnswerArgument": "m.035yg", "EntityName": "Grenada"}, {"AnswerType": "Entity", "AnswerArgument": "m.03h64", "EntityName": "Hong Kong"}, {"AnswerType": "Entity", "AnswerArgument": "m.03rk0", "EntityName": "India"}, {"AnswerType": "Entity", "AnswerArgument": "m.03rt9", "EntityName": "Republic of Ireland"}, {"AnswerType": "Entity", "AnswerArgument": "m.03t1s", "EntityName": "Isle of Man"}, {"AnswerType": "Entity", "AnswerArgument": "m.047t_", "EntityName": "Kiribati"}, {"AnswerType": "Entity", "AnswerArgument": "m.04hvw", "EntityName": "Lesotho"}, {"AnswerType": "Entity", "AnswerArgument": "m.04hzj", "EntityName": "Liberia"}, {"AnswerType": "Entity", "AnswerArgument": "m.04v3q", "EntityName": "Malta"}, {"AnswerType": "Entity", "AnswerArgument": "m.04v6v", "EntityName": "Marshall Islands"}, {"AnswerType": "Entity", "AnswerArgument": "m.04wcf", "EntityName": "Montserrat"}, {"AnswerType": "Entity", "AnswerArgument": "m.05bmq", "EntityName": "Namibia"}, {"AnswerType": "Entity", "AnswerArgument": "m.05br2", "EntityName": "Nauru"}, {"AnswerType": "Entity", "AnswerArgument": "m.05cgv", "EntityName": "Nigeria"}, {"AnswerType": "Entity", "AnswerArgument": "m.05qkp", "EntityName": "Papua New Guinea"}, {"AnswerType": "Entity", "AnswerArgument": "m.05r7t", "EntityName": "Puerto Rico"}, {"AnswerType": "Entity", "AnswerArgument": "m.05sb1", "EntityName": "Pakistan"}, {"AnswerType": "Entity", "AnswerArgument": "m.05v8c", "EntityName": "Philippines"}, {"AnswerType": "Entity", "AnswerArgument": "m.06dfg", "EntityName": "Rwanda"}, {"AnswerType": "Entity", "AnswerArgument": "m.06ryl", "EntityName": "Saint Kitts and Nevis"}, {"AnswerType": "Entity", "AnswerArgument": "m.06s_2", "EntityName": "Sierra Leone"}, {"AnswerType": "Entity", "AnswerArgument": "m.06s0l", "EntityName": "Saint Lucia"}, {"AnswerType": "Entity", "AnswerArgument": "m.06s6l", "EntityName": "Saint Vincent and the Grenadines"}, {"AnswerType": "Entity", "AnswerArgument": "m.06s9y", "EntityName": "Samoa"}, {"AnswerType": "Entity", "AnswerArgument": "m.06t2t", "EntityName": "Singapore"}, {"AnswerType": "Entity", "AnswerArgument": "m.06tw8", "EntityName": "Sudan"}, {"AnswerType": "Entity", "AnswerArgument": "m.06v36", "EntityName": "Swaziland"}, {"AnswerType": "Entity", "AnswerArgument": "m.07dzf", "EntityName": "Tanzania"}, {"AnswerType": "Entity", "AnswerArgument": "m.07fr_", "EntityName": "Turks and Caicos Islands"}, {"AnswerType": "Entity", "AnswerArgument": "m.07fsv", "EntityName": "Tuvalu"}, {"AnswerType": "Entity", "AnswerArgument": "m.07ssc", "EntityName": "United Kingdom"}, {"AnswerType": "Entity", "AnswerArgument": "m.07tp2", "EntityName": "Uganda"}, {"AnswerType": "Entity", "AnswerArgument": "m.07z5n", "EntityName": "Vanuatu"}, {"AnswerType": "Entity", "AnswerArgument": "m.088q4", "EntityName": "Zimbabwe"}, {"AnswerType": "Entity", "AnswerArgument": "m.088vb", "EntityName": "Zambia"}, {"AnswerType": "Entity", "AnswerArgument": "m.09wfqp", "EntityName": "Territory of New Guinea"}, {"AnswerType": "Entity", "AnswerArgument": "m.0ctw_b", "EntityName": "New Zealand"}, {"AnswerType": "Entity", "AnswerArgument": "m.0d060g", "EntityName": "Canada"}, {"AnswerType": "Entity", "AnswerArgument": "m.0hdx8", "EntityName": "Gambia"}, {"AnswerType": "Entity", "AnswerArgument": "m.0hzlz", "EntityName": "South Africa"}, {"AnswerType": "Entity", "AnswerArgument": "m.0j5g9", "EntityName": "Wales"}, {"AnswerType": "Entity", "AnswerArgument": "m.0l3h", "EntityName": "Antigua and Barbuda"}]}], "topic_entity": {"m.02h40lc": "English Language"}, "qid_topic_entity": {"Q1860": "English Language"}}, {"QuestionId": "WebQTest-1620", "RawQuestion": "when was president wilson in office?", "ProcessedQuestion": "when was president wilson in office", "Parses": [{"ParseId": "WebQTest-1620.P0", "AnnotatorId": 1, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "VeryLow", "FreeFormComment": "??"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.083q7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.083q7 ns:government.politician.government_positions_held ?y .\n?y ns:government.government_position_held.from ?x .\n?y ns:government.government_position_held.office_position_or_title ns:m.060d2 .\n}\n", "PotentialTopicEntityMention": "president wilson", "TopicEntityName": "Woodrow Wilson", "TopicEntityMid": "m.083q7", "InferentialChain": ["government.politician.government_positions_held", "government.government_position_held.from"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.060d2", "EntityName": "President of the United States", "SourceNodeIndex": 0, "NodePredicate": "government.government_position_held.office_position_or_title", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Value", "AnswerArgument": "1913-03-04", "EntityName": null}]}], "topic_entity": {"m.083q7": "Woodrow Wilson"}, "qid_topic_entity": {"Q34296": "Woodrow Wilson"}}, {"QuestionId": "WebQTest-1838", "RawQuestion": "what sports are popular in germany?", "ProcessedQuestion": "what sports are popular in germany", "Parses": [{"ParseId": "WebQTest-1838.P0", "AnnotatorId": 1, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "VeryLow", "FreeFormComment": "??"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0345h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0345h ns:sports.sports_team_location.teams ?x .\n}\n", "PotentialTopicEntityMention": "germany", "TopicEntityName": "Germany", "TopicEntityMid": "m.0345h", "InferentialChain": ["sports.sports_team_location.teams"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01l3wr", "EntityName": "Germany national football team"}, {"AnswerType": "Entity", "AnswerArgument": "m.025t26l", "EntityName": "Germany national cricket team"}, {"AnswerType": "Entity", "AnswerArgument": "m.025wfyk", "EntityName": "Germany national handball team"}, {"AnswerType": "Entity", "AnswerArgument": "m.0260p73", "EntityName": "Germany women's national field hockey team"}, {"AnswerType": "Entity", "AnswerArgument": "m.026f3ys", "EntityName": "Germany women's national volleyball team"}, {"AnswerType": "Entity", "AnswerArgument": "m.026pb10", "EntityName": "Germany national beach handball team"}, {"AnswerType": "Entity", "AnswerArgument": "m.026pr2_", "EntityName": "Germany women's national beach handball team"}, {"AnswerType": "Entity", "AnswerArgument": "m.026t7lw", "EntityName": "Germany women's national handball team"}, {"AnswerType": "Entity", "AnswerArgument": "m.02pnhdq", "EntityName": "Germany Davis Cup team"}, {"AnswerType": "Entity", "AnswerArgument": "m.02r4j0b", "EntityName": "Germany Fed Cup team"}, {"AnswerType": "Entity", "AnswerArgument": "m.02z6g34", "EntityName": "Germany women's national rugby union team"}, {"AnswerType": "Entity", "AnswerArgument": "m.030rdb", "EntityName": "Germany women's national football team"}, {"AnswerType": "Entity", "AnswerArgument": "m.03c38d5", "EntityName": "Germany men's national volleyball team"}, {"AnswerType": "Entity", "AnswerArgument": "m.03d1r7t", "EntityName": "Germany national korfball team"}, {"AnswerType": "Entity", "AnswerArgument": "m.03m3xhy", "EntityName": "Germany national rugby league team"}, {"AnswerType": "Entity", "AnswerArgument": "m.03sx6f", "EntityName": "German National Ice Hockey Team"}, {"AnswerType": "Entity", "AnswerArgument": "m.0414tdm", "EntityName": "Germany national baseball team"}, {"AnswerType": "Entity", "AnswerArgument": "m.043rstb", "EntityName": "Germany national badminton team"}, {"AnswerType": "Entity", "AnswerArgument": "m.047nfps", "EntityName": "Germany national American football team"}, {"AnswerType": "Entity", "AnswerArgument": "m.04cxm_7", "EntityName": "Germany men's national inline hockey team"}, {"AnswerType": "Entity", "AnswerArgument": "m.04gk22b", "EntityName": "Germany national beach soccer team"}, {"AnswerType": "Entity", "AnswerArgument": "m.04jd6b6", "EntityName": "Germany men's national water polo team"}, {"AnswerType": "Entity", "AnswerArgument": "m.04jgf73", "EntityName": "Germany women's national basketball team"}, {"AnswerType": "Entity", "AnswerArgument": "m.04mx1yr", "EntityName": "Germany national speedway team"}, {"AnswerType": "Entity", "AnswerArgument": "m.04q8nzj", "EntityName": "Germany men's national pitch and putt team"}, {"AnswerType": "Entity", "AnswerArgument": "m.053gfcl", "EntityName": "Germany women's national under-18 ice hockey team"}, {"AnswerType": "Entity", "AnswerArgument": "m.05c03j9", "EntityName": "Germany national rugby union team"}, {"AnswerType": "Entity", "AnswerArgument": "m.05prqw", "EntityName": "Germany women's national ice hockey team"}, {"AnswerType": "Entity", "AnswerArgument": "m.06y3b4", "EntityName": "Germany national basketball team"}, {"AnswerType": "Entity", "AnswerArgument": "m.07ldyjt", "EntityName": "Germany U20 women's volleyball team"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bs6dhl", "EntityName": "FC Bayern Munich"}, {"AnswerType": "Entity", "AnswerArgument": "m.0by0kb9", "EntityName": "BG G\u00f6ttingen"}, {"AnswerType": "Entity", "AnswerArgument": "m.0cksc_", "EntityName": "Alba Berlin"}, {"AnswerType": "Entity", "AnswerArgument": "m.0cvc05", "EntityName": "Germany national rugby union team"}, {"AnswerType": "Entity", "AnswerArgument": "m.0dt889", "EntityName": "Brose Baskets"}, {"AnswerType": "Entity", "AnswerArgument": "m.0h167w", "EntityName": "Germany men's national field hockey team"}, {"AnswerType": "Entity", "AnswerArgument": "m.0h407v", "EntityName": "Telekom Baskets Bonn"}, {"AnswerType": "Entity", "AnswerArgument": "m.0h408w", "EntityName": "Skyliners Frankfurt"}, {"AnswerType": "Entity", "AnswerArgument": "m.0h40db", "EntityName": "K\u00f6ln 99ers"}, {"AnswerType": "Entity", "AnswerArgument": "m.0h40f0", "EntityName": "Bayer Giants Leverkusen"}, {"AnswerType": "Entity", "AnswerArgument": "m.0h40k4", "EntityName": "EWE Baskets Oldenburg"}, {"AnswerType": "Entity", "AnswerArgument": "m.0h40lj", "EntityName": "QTSV Quackenbr\u00fcck"}]}], "topic_entity": {"m.0345h": "Germany"}, "qid_topic_entity": {"Q183": "Germany"}}, {"QuestionId": "WebQTest-343", "RawQuestion": "what international organizations is china part of?", "ProcessedQuestion": "what international organizations is china part of", "Parses": [{"ParseId": "WebQTest-343.P0", "AnnotatorId": 1, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d05w3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d05w3 ns:organization.organization_member.member_of ?y .\n?y ns:organization.organization_membership.organization ?x .\nFILTER(NOT EXISTS {?y ns:organization.organization_membership.to ?sk0} || \nEXISTS {?y ns:organization.organization_membership.to ?sk1 . \nFILTER(xsd:datetime(?sk1) >= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:organization.organization_membership.from ?sk2} || \nEXISTS {?y ns:organization.organization_membership.from ?sk3 . \nFILTER(xsd:datetime(?sk3) <= \"2015-08-10\"^^xsd:dateTime) })\n}\n", "PotentialTopicEntityMention": "china", "TopicEntityName": "China", "TopicEntityMid": "m.0d05w3", "InferentialChain": ["organization.organization_member.member_of", "organization.organization_membership.organization"], "Constraints": [{"Operator": "GreaterOrEqual", "ArgumentType": "Value", "Argument": "2015-08-10", "EntityName": "", "SourceNodeIndex": 0, "NodePredicate": "organization.organization_membership.to", "ValueType": "DateTime"}, {"Operator": "LessOrEqual", "ArgumentType": "Value", "Argument": "2015-08-10", "EntityName": "", "SourceNodeIndex": 0, "NodePredicate": "organization.organization_membership.from", "ValueType": "DateTime"}], "Time": {"IsRelativeToNow": true, "Start": "0000-00-00", "End": "0000-00-00", "AssociatedConstraints": [0, 1], "PotentialTimeMention": null}, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0_2v", "EntityName": "Asian Development Bank"}, {"AnswerType": "Entity", "AnswerArgument": "m.01027r", "EntityName": "Asia-Pacific Economic Cooperation"}, {"AnswerType": "Entity", "AnswerArgument": "m.013w27", "EntityName": "Shanghai Cooperation Organisation"}, {"AnswerType": "Entity", "AnswerArgument": "m.02vk52z", "EntityName": "World Bank"}, {"AnswerType": "Entity", "AnswerArgument": "m.03m6lb", "EntityName": "Caribbean Development Bank"}, {"AnswerType": "Entity", "AnswerArgument": "m.05yg8kx", "EntityName": "UNESCO"}, {"AnswerType": "Entity", "AnswerArgument": "m.06vxc9", "EntityName": "G-20 major economies"}, {"AnswerType": "Entity", "AnswerArgument": "m.07t65", "EntityName": "United Nations"}, {"AnswerType": "Entity", "AnswerArgument": "m.0b6css", "EntityName": "African Development Bank"}]}], "topic_entity": {"m.0d05w3": "China"}, "qid_topic_entity": {"Q148": "China"}}, {"QuestionId": "WebQTest-1378", "RawQuestion": "who does kellan lutz play in prom night?", "ProcessedQuestion": "who does kellan lutz play in prom night", "Parses": [{"ParseId": "WebQTest-1378.P0", "AnnotatorId": 3, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02pjwn5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02pjwn5 ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.02rxbq6 .\n}\n", "PotentialTopicEntityMention": "kellan lutz", "TopicEntityName": "Kellan Lutz", "TopicEntityMid": "m.02pjwn5", "InferentialChain": ["film.actor.film", "film.performance.character"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.02rxbq6", "EntityName": "Prom Night", "SourceNodeIndex": 0, "NodePredicate": "film.performance.film", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0gyg58j", "EntityName": "Rick Leland"}]}], "topic_entity": {"m.02pjwn5": "Kellan Lutz"}, "qid_topic_entity": {"Q235707": "Kellan Lutz"}}, {"QuestionId": "WebQTest-989", "RawQuestion": "what happened to dunkirk during ww2?", "ProcessedQuestion": "what happened to dunkirk during ww2", "Parses": [{"ParseId": "WebQTest-989.P0", "AnnotatorId": 1, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "good problem!"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0md6f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0md6f ns:location.location.events ?x .\n?x ns:time.event.included_in_event ns:m.081pw .\n}\n", "PotentialTopicEntityMention": "dunkirk", "TopicEntityName": "Dunkirk", "TopicEntityMid": "m.0md6f", "InferentialChain": ["location.location.events"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.081pw", "EntityName": "World War II", "SourceNodeIndex": 0, "NodePredicate": "time.event.included_in_event", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.03hm2pk", "EntityName": "Siege of Dunkirk"}, {"AnswerType": "Entity", "AnswerArgument": "m.0jpb7", "EntityName": "Battle of Dunkirk"}]}], "topic_entity": {"m.0md6f": "Dunkirk"}, "qid_topic_entity": {"Q45797": "Dunkirk"}}, {"QuestionId": "WebQTest-1120", "RawQuestion": "what was the currency used in france before the euro?", "ProcessedQuestion": "what was the currency used in france before the euro", "Parses": [{"ParseId": "WebQTest-1120.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f8l9c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f8l9c ns:location.country.currency_formerly_used ?x .\n}\n", "PotentialTopicEntityMention": "france", "TopicEntityName": "France", "TopicEntityMid": "m.0f8l9c", "InferentialChain": ["location.country.currency_formerly_used"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01m4tk", "EntityName": "Assignat"}, {"AnswerType": "Entity", "AnswerArgument": "m.0298sr", "EntityName": "French franc"}]}], "topic_entity": {"m.0f8l9c": "France"}, "qid_topic_entity": {"Q142": "France"}}, {"QuestionId": "WebQTest-1284", "RawQuestion": "what to do in paris in 1 day?", "ProcessedQuestion": "what to do in paris in 1 day", "Parses": [{"ParseId": "WebQTest-1284.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05qtj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05qtj ns:travel.travel_destination.tourist_attractions ?x .\n}\n", "PotentialTopicEntityMention": "paris", "TopicEntityName": "Paris", "TopicEntityMid": "m.05qtj", "InferentialChain": ["travel.travel_destination.tourist_attractions"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01q_np", "EntityName": "Sacr\u00e9-C\u0153ur, Paris"}, {"AnswerType": "Entity", "AnswerArgument": "m.01sp2r", "EntityName": "Galerie nationale du Jeu de Paume"}, {"AnswerType": "Entity", "AnswerArgument": "m.01vgd5", "EntityName": "\u00cele de la Cit\u00e9"}, {"AnswerType": "Entity", "AnswerArgument": "m.0281qh", "EntityName": "Mus\u00e9e des Arts et M\u00e9tiers"}, {"AnswerType": "Entity", "AnswerArgument": "m.02gms9", "EntityName": "Folies Berg\u00e8re"}, {"AnswerType": "Entity", "AnswerArgument": "m.02j81", "EntityName": "Eiffel Tower"}, {"AnswerType": "Entity", "AnswerArgument": "m.02qtwx", "EntityName": "Jardin du Luxembourg"}, {"AnswerType": "Entity", "AnswerArgument": "m.0383f3", "EntityName": "Gare d'Orsay"}, {"AnswerType": "Entity", "AnswerArgument": "m.03q9jq", "EntityName": "Bois de Boulogne"}, {"AnswerType": "Entity", "AnswerArgument": "m.03ydrj", "EntityName": "Verdon Gorge"}, {"AnswerType": "Entity", "AnswerArgument": "m.042x0k", "EntityName": "Parc Ast\u00e9rix"}, {"AnswerType": "Entity", "AnswerArgument": "m.04695xf", "EntityName": "Mus\u00e9e Maillol"}, {"AnswerType": "Entity", "AnswerArgument": "m.04cj6k", "EntityName": "Disneyland Park"}, {"AnswerType": "Entity", "AnswerArgument": "m.04gdr", "EntityName": "The Louvre"}, {"AnswerType": "Entity", "AnswerArgument": "m.04kshc3", "EntityName": "Caf\u00e9 Volpini"}, {"AnswerType": "Entity", "AnswerArgument": "m.04s_s9l", "EntityName": "Galerie Claude Bernard"}, {"AnswerType": "Entity", "AnswerArgument": "m.07kb30y", "EntityName": "La Maison Rouge"}, {"AnswerType": "Entity", "AnswerArgument": "m.08dswn", "EntityName": "Petit Palais"}, {"AnswerType": "Entity", "AnswerArgument": "m.0dmnx6", "EntityName": "Mus\u00e9e du quai Branly"}, {"AnswerType": "Entity", "AnswerArgument": "m.0dt3ml", "EntityName": "Mus\u00e9e de l'Orangerie"}, {"AnswerType": "Entity", "AnswerArgument": "m.0f32p", "EntityName": "Centre Georges Pompidou"}, {"AnswerType": "Entity", "AnswerArgument": "m.0f3b9", "EntityName": "Mus\u00e9e d'Orsay"}, {"AnswerType": "Entity", "AnswerArgument": "m.0gsp5", "EntityName": "Panth\u00e9on"}, {"AnswerType": "Entity", "AnswerArgument": "m.0gtxh", "EntityName": "Notre Dame de Paris"}, {"AnswerType": "Entity", "AnswerArgument": "m.0gxqj", "EntityName": "Les Invalides"}, {"AnswerType": "Entity", "AnswerArgument": "m.0jd4j", "EntityName": "Champs-\u00c9lys\u00e9es"}, {"AnswerType": "Entity", "AnswerArgument": "m.0k0kz", "EntityName": "Grande Arche"}, {"AnswerType": "Entity", "AnswerArgument": "m.0k3xf", "EntityName": "Disneyland Paris"}, {"AnswerType": "Entity", "AnswerArgument": "m.0kx9d", "EntityName": "Place de la Concorde"}, {"AnswerType": "Entity", "AnswerArgument": "m.0m6_0", "EntityName": "Ch\u00e2teau de Chambord"}, {"AnswerType": "Entity", "AnswerArgument": "m.0zv_", "EntityName": "Arc de Triomphe"}]}], "topic_entity": {"m.05qtj": "Paris"}, "qid_topic_entity": {"Q90": "Paris"}}, {"QuestionId": "WebQTest-524", "RawQuestion": "where was the first gulf war fought?", "ProcessedQuestion": "where was the first gulf war fought", "Parses": [{"ParseId": "WebQTest-524.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.018w0j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.018w0j ns:time.event.locations ?x .\n}\n", "PotentialTopicEntityMention": "gulf war", "TopicEntityName": "Gulf War", "TopicEntityMid": "m.018w0j", "InferentialChain": ["time.event.locations"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01z215", "EntityName": "Saudi Arabia"}, {"AnswerType": "Entity", "AnswerArgument": "m.03spz", "EntityName": "Israel"}, {"AnswerType": "Entity", "AnswerArgument": "m.047yc", "EntityName": "Kuwait"}, {"AnswerType": "Entity", "AnswerArgument": "m.0661z", "EntityName": "Persian Gulf"}, {"AnswerType": "Entity", "AnswerArgument": "m.0cvmv", "EntityName": "Arabian Peninsula"}, {"AnswerType": "Entity", "AnswerArgument": "m.0d05q4", "EntityName": "Iraq"}]}], "topic_entity": {"m.018w0j": "Gulf War"}, "qid_topic_entity": {"Q37643": "Gulf War"}}, {"QuestionId": "WebQTest-2022", "RawQuestion": "where is dwayne johnson ethnicity?", "ProcessedQuestion": "where is dwayne johnson ethnicity", "Parses": [{"ParseId": "WebQTest-2022.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.014g_s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.014g_s ns:people.person.ethnicity ?x .\n}\n", "PotentialTopicEntityMention": "dwayne johnson", "TopicEntityName": "Dwayne Johnson", "TopicEntityMid": "m.014g_s", "InferentialChain": ["people.person.ethnicity"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.07j80c", "EntityName": "Samoan American"}, {"AnswerType": "Entity", "AnswerArgument": "m.0x67", "EntityName": "African American"}]}], "topic_entity": {"m.014g_s": "Dwayne Johnson"}, "qid_topic_entity": {"Q10738": "Dwayne Johnson"}}, {"QuestionId": "WebQTest-1776", "RawQuestion": "where are the sahara desert located?", "ProcessedQuestion": "where are the sahara desert located", "Parses": [{"ParseId": "WebQTest-1776.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01w1vt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01w1vt ns:location.location.containedby ?x .\n}\n", "PotentialTopicEntityMention": "sahara desert", "TopicEntityName": "Sahara", "TopicEntityMid": "m.01w1vt", "InferentialChain": ["location.location.containedby"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.05g2v", "EntityName": "North Africa"}]}], "topic_entity": {"m.01w1vt": "Sahara"}, "qid_topic_entity": {"Q6583": "Sahara"}}, {"QuestionId": "WebQTest-365", "RawQuestion": "what is there to do in peoria illinois?", "ProcessedQuestion": "what is there to do in peoria illinois", "Parses": [{"ParseId": "WebQTest-365.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0sf9_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0sf9_ ns:travel.travel_destination.tourist_attractions ?x .\n}\n", "PotentialTopicEntityMention": "peoria illinois", "TopicEntityName": "Peoria", "TopicEntityMid": "m.0sf9_", "InferentialChain": ["travel.travel_destination.tourist_attractions"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.025vxh4", "EntityName": "Peoria Civic Center"}, {"AnswerType": "Entity", "AnswerArgument": "m.02qlj1w", "EntityName": "John C. Flanagan House Museum"}, {"AnswerType": "Entity", "AnswerArgument": "m.04mzskn", "EntityName": "Heart of Illinois Fair"}, {"AnswerType": "Entity", "AnswerArgument": "m.04vxv8f", "EntityName": "WeaverRidge Golf Club"}, {"AnswerType": "Entity", "AnswerArgument": "m.05mxh89", "EntityName": "Lakeview Museum of Arts and Sciences"}, {"AnswerType": "Entity", "AnswerArgument": "m.05zlj1p", "EntityName": "Par-A-Dice Hotel and Casino"}, {"AnswerType": "Entity", "AnswerArgument": "m.067f5q", "EntityName": "Dozer Park"}, {"AnswerType": "Entity", "AnswerArgument": "m.08bsxj", "EntityName": "Wildlife Prairie State Park"}, {"AnswerType": "Entity", "AnswerArgument": "m.093pd6", "EntityName": "George L. Luthy Memorial Botanical Garden"}, {"AnswerType": "Entity", "AnswerArgument": "m.0cmd5ys", "EntityName": "Peoria Zoo"}]}], "topic_entity": {"m.0sf9_": "Peoria"}, "qid_topic_entity": {"Q233129": "Peoria"}}, {"QuestionId": "WebQTest-2019", "RawQuestion": "who did morgan freeman marry?", "ProcessedQuestion": "who did morgan freeman marry", "Parses": [{"ParseId": "WebQTest-2019.P0", "AnnotatorId": 4, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.055c8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.055c8 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n?y ns:people.marriage.to ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n", "PotentialTopicEntityMention": "morgan freeman", "TopicEntityName": "Morgan Freeman", "TopicEntityMid": "m.055c8", "InferentialChain": ["people.person.spouse_s", "people.marriage.spouse"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.04ztj", "EntityName": "Marriage", "SourceNodeIndex": 0, "NodePredicate": "people.marriage.type_of_union", "ValueType": "String"}], "Time": null, "Order": {"SortOrder": "Descending", "Start": 0, "Count": 1, "SourceNodeIndex": 0, "NodePredicate": "people.marriage.to", "ValueType": "DateTime"}, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0hj6dmn", "EntityName": "Myrna Colley-Lee"}]}], "topic_entity": {"m.055c8": "Morgan Freeman"}, "qid_topic_entity": {"Q48337": "Morgan Freeman"}}, {"QuestionId": "WebQTest-529", "RawQuestion": "where did paula deen go to school?", "ProcessedQuestion": "where did paula deen go to school", "Parses": [{"ParseId": "WebQTest-529.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05dpch)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05dpch ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n", "PotentialTopicEntityMention": "paula deen", "TopicEntityName": "Paula Deen", "TopicEntityMid": "m.05dpch", "InferentialChain": ["people.person.education", "education.education.institution"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0610np", "EntityName": "Albany High School"}]}], "topic_entity": {"m.05dpch": "Paula Deen"}, "qid_topic_entity": {"Q3071037": "Paula Deen"}}, {"QuestionId": "WebQTest-1527", "RawQuestion": "what political party does barack obama represent?", "ProcessedQuestion": "what political party does barack obama represent", "Parses": [{"ParseId": "WebQTest-1527.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02mjmr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02mjmr ns:government.politician.party ?y .\n?y ns:government.political_party_tenure.party ?x .\n}\n", "PotentialTopicEntityMention": "barack obama", "TopicEntityName": "Barack Obama", "TopicEntityMid": "m.02mjmr", "InferentialChain": ["government.politician.party", "government.political_party_tenure.party"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0d075m", "EntityName": "Democratic Party"}]}], "topic_entity": {"m.02mjmr": "Barack Obama"}, "qid_topic_entity": {"Q76": "Barack Obama"}}, {"QuestionId": "WebQTest-741", "RawQuestion": "who plays caesar flickerman in the hunger games?", "ProcessedQuestion": "who plays caesar flickerman in the hunger games", "Parses": [{"ParseId": "WebQTest-741.P0", "AnnotatorId": 3, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gkz15s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gkz15s ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.0gwc3bn .\n}\n", "PotentialTopicEntityMention": "hunger games", "TopicEntityName": "The Hunger Games", "TopicEntityMid": "m.0gkz15s", "InferentialChain": ["film.film.starring", "film.performance.actor"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.0gwc3bn", "EntityName": "Caesar Flickerman", "SourceNodeIndex": 0, "NodePredicate": "film.performance.character", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02bj6k", "EntityName": "Stanley Tucci"}]}], "topic_entity": {"m.0gkz15s": "The Hunger Games"}, "qid_topic_entity": {"Q212965": "The Hunger Games"}}, {"QuestionId": "WebQTest-1899", "RawQuestion": "who was william mckinley married to?", "ProcessedQuestion": "who was william mckinley married to", "Parses": [{"ParseId": "WebQTest-1899.P0", "AnnotatorId": 4, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.083p7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.083p7 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n", "PotentialTopicEntityMention": "william mckinley", "TopicEntityName": "William McKinley", "TopicEntityMid": "m.083p7", "InferentialChain": ["people.person.spouse_s", "people.marriage.spouse"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.04ztj", "EntityName": "Marriage", "SourceNodeIndex": 0, "NodePredicate": "people.marriage.type_of_union", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.025pyr", "EntityName": "Ida Saxton McKinley"}]}], "topic_entity": {"m.083p7": "William McKinley"}, "qid_topic_entity": {"Q35041": "William McKinley"}}, {"QuestionId": "WebQTest-1672", "RawQuestion": "what language do the maasai speak?", "ProcessedQuestion": "what language do the maasai speak", "Parses": [{"ParseId": "WebQTest-1672.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.054vv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.054vv ns:people.ethnicity.languages_spoken ?x .\n}\n", "PotentialTopicEntityMention": "maasai", "TopicEntityName": "Maasai people", "TopicEntityMid": "m.054vv", "InferentialChain": ["people.ethnicity.languages_spoken"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.064kl7", "EntityName": "Maasai Language"}]}], "topic_entity": {"m.054vv": "Maasai people"}, "qid_topic_entity": {"Q163022": "Maasai people"}}, {"QuestionId": "WebQTest-1719", "RawQuestion": "who was married to jane wyman?", "ProcessedQuestion": "who was married to jane wyman", "Parses": [{"ParseId": "WebQTest-1719.P0", "AnnotatorId": 4, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01933d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01933d ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n?y ns:people.marriage.to ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n", "PotentialTopicEntityMention": "jane wyman", "TopicEntityName": "Jane Wyman", "TopicEntityMid": "m.01933d", "InferentialChain": ["people.person.spouse_s", "people.marriage.spouse"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.04ztj", "EntityName": "Marriage", "SourceNodeIndex": 0, "NodePredicate": "people.marriage.type_of_union", "ValueType": "String"}], "Time": null, "Order": {"SortOrder": "Descending", "Start": 0, "Count": 1, "SourceNodeIndex": 0, "NodePredicate": "people.marriage.to", "ValueType": "DateTime"}, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0jzkdh", "EntityName": "Fred Karger"}]}], "topic_entity": {"m.01933d": "Jane Wyman"}, "qid_topic_entity": {"Q95055": "Jane Wyman"}}, {"QuestionId": "WebQTest-2017", "RawQuestion": "what party was abe lincoln part of?", "ProcessedQuestion": "what party was abe lincoln part of", "Parses": [{"ParseId": "WebQTest-2017.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gzh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gzh ns:government.politician.party ?y .\n?y ns:government.political_party_tenure.party ?x .\n}\n", "PotentialTopicEntityMention": "abe lincoln", "TopicEntityName": "Abraham Lincoln", "TopicEntityMid": "m.0gzh", "InferentialChain": ["government.politician.party", "government.political_party_tenure.party"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.07wbk", "EntityName": "Republican Party"}, {"AnswerType": "Entity", "AnswerArgument": "m.07wdw", "EntityName": "Whig Party"}, {"AnswerType": "Entity", "AnswerArgument": "m.0d9fdp", "EntityName": "National Union Party"}, {"AnswerType": "Entity", "AnswerArgument": "m.0g7ly4", "EntityName": "Illinois Republican Party"}]}], "topic_entity": {"m.0gzh": "Abraham Lincoln"}, "qid_topic_entity": {"Q91": "Abraham Lincoln"}}, {"QuestionId": "WebQTest-1721", "RawQuestion": "what language does peru speak?", "ProcessedQuestion": "what language does peru speak", "Parses": [{"ParseId": "WebQTest-1721.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.016wzw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.016wzw ns:location.country.languages_spoken ?x .\n}\n", "PotentialTopicEntityMention": "peru", "TopicEntityName": "Peru", "TopicEntityMid": "m.016wzw", "InferentialChain": ["location.country.languages_spoken"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01y5tq", "EntityName": "Aymara language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02hxk02", "EntityName": "Omagua dialect"}, {"AnswerType": "Entity", "AnswerArgument": "m.06nm1", "EntityName": "Spanish Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.06qmrf", "EntityName": "Ayacucho Quechua"}, {"AnswerType": "Entity", "AnswerArgument": "m.09_sxt", "EntityName": "Puquina Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.09j2hg", "EntityName": "Waorani Language"}]}, {"ParseId": "WebQTest-1721.P1", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.016wzw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.016wzw ns:location.country.official_language ?x .\n}\n", "PotentialTopicEntityMention": "peru", "TopicEntityName": "Peru", "TopicEntityMid": "m.016wzw", "InferentialChain": ["location.country.official_language"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01y5tq", "EntityName": "Aymara language"}, {"AnswerType": "Entity", "AnswerArgument": "m.03d9kg", "EntityName": "Quechuan languages"}, {"AnswerType": "Entity", "AnswerArgument": "m.06nm1", "EntityName": "Spanish Language"}]}], "topic_entity": {"m.016wzw": "Peru"}, "qid_topic_entity": {"Q419": "Peru"}}, {"QuestionId": "WebQTest-1394", "RawQuestion": "who coaches the carolina panthers?", "ProcessedQuestion": "who coaches the carolina panthers", "Parses": [{"ParseId": "WebQTest-1394.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01y3c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01y3c ns:american_football.football_team.current_head_coach ?x .\n}\n", "PotentialTopicEntityMention": "carolina panthers", "TopicEntityName": "Carolina Panthers", "TopicEntityMid": "m.01y3c", "InferentialChain": ["american_football.football_team.current_head_coach"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.04g57l", "EntityName": "Ron Rivera"}]}], "topic_entity": {"m.01y3c": "Carolina Panthers"}, "qid_topic_entity": {"Q330120": "Carolina Panthers"}}, {"QuestionId": "WebQTest-876", "RawQuestion": "who does japan import from?", "ProcessedQuestion": "who does japan import from", "Parses": [{"ParseId": "WebQTest-876.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03_3d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03_3d ns:location.statistical_region.places_imported_from ?y .\n?y ns:location.imports_and_exports.imported_from ?x .\n}\n", "PotentialTopicEntityMention": "japan", "TopicEntityName": "Japan", "TopicEntityMid": "m.03_3d", "InferentialChain": ["location.statistical_region.places_imported_from", "location.imports_and_exports.imported_from"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.047t_", "EntityName": "Kiribati"}, {"AnswerType": "Entity", "AnswerArgument": "m.06tw8", "EntityName": "Sudan"}, {"AnswerType": "Entity", "AnswerArgument": "m.07dzf", "EntityName": "Tanzania"}, {"AnswerType": "Entity", "AnswerArgument": "m.09c7w0", "EntityName": "United States of America"}, {"AnswerType": "Entity", "AnswerArgument": "m.0ctw_b", "EntityName": "New Zealand"}, {"AnswerType": "Entity", "AnswerArgument": "m.0d060g", "EntityName": "Canada"}]}], "topic_entity": {"m.03_3d": "Japan"}, "qid_topic_entity": {"Q17": "Japan"}}, {"QuestionId": "WebQTest-773", "RawQuestion": "where is the sony ericsson company?", "ProcessedQuestion": "where is the sony ericsson company", "Parses": [{"ParseId": "WebQTest-773.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01spxd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01spxd ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n", "PotentialTopicEntityMention": "sony", "TopicEntityName": "Sony Mobile Communications", "TopicEntityMid": "m.01spxd", "InferentialChain": ["organization.organization.headquarters", "location.mailing_address.citytown"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.024bqj", "EntityName": "Minato"}]}], "topic_entity": {"m.01spxd": "Sony Mobile Communications"}, "qid_topic_entity": {"Q376692": "Sony Mobile Communications"}}, {"QuestionId": "WebQTest-584", "RawQuestion": "where buddha come from?", "ProcessedQuestion": "where buddha come from", "Parses": [{"ParseId": "WebQTest-584.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015k7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015k7 ns:people.person.place_of_birth ?x .\n}\n", "PotentialTopicEntityMention": "buddha", "TopicEntityName": "Gautama Buddha", "TopicEntityMid": "m.015k7", "InferentialChain": ["people.person.place_of_birth"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.06_86x", "EntityName": "Kapilavastu"}]}], "topic_entity": {"m.015k7": "Gautama Buddha"}, "qid_topic_entity": {"Q9441": "Gautama Buddha"}}, {"QuestionId": "WebQTest-464", "RawQuestion": "what is the political structure of china?", "ProcessedQuestion": "what is the political structure of china", "Parses": [{"ParseId": "WebQTest-464.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d05w3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d05w3 ns:location.country.form_of_government ?x .\n}\n", "PotentialTopicEntityMention": "china", "TopicEntityName": "China", "TopicEntityMid": "m.0d05w3", "InferentialChain": ["location.country.form_of_government"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01fkst", "EntityName": "Communist state"}, {"AnswerType": "Entity", "AnswerArgument": "m.025tbxf", "EntityName": "Socialist state"}, {"AnswerType": "Entity", "AnswerArgument": "m.0py4y", "EntityName": "Single-party state"}]}], "topic_entity": {"m.0d05w3": "China"}, "qid_topic_entity": {"Q148": "China"}}, {"QuestionId": "WebQTest-1483", "RawQuestion": "what is the political system in germany?", "ProcessedQuestion": "what is the political system in germany", "Parses": [{"ParseId": "WebQTest-1483.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0345h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0345h ns:location.country.form_of_government ?x .\n}\n", "PotentialTopicEntityMention": "germany", "TopicEntityName": "Germany", "TopicEntityMid": "m.0345h", "InferentialChain": ["location.country.form_of_government"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0c9rw5", "EntityName": "Constitutional republic"}, {"AnswerType": "Entity", "AnswerArgument": "m.0drnm", "EntityName": "Representative democracy"}, {"AnswerType": "Entity", "AnswerArgument": "m.0glnsx", "EntityName": "Parliamentary republic"}, {"AnswerType": "Entity", "AnswerArgument": "m.0j729", "EntityName": "Federal republic"}]}], "topic_entity": {"m.0345h": "Germany"}, "qid_topic_entity": {"Q183": "Germany"}}, {"QuestionId": "WebQTest-583", "RawQuestion": "what school did martin luther king jr received his doctorate degree from?", "ProcessedQuestion": "what school did martin luther king jr received his doctorate degree from", "Parses": [{"ParseId": "WebQTest-583.P0", "AnnotatorId": 5, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.051cc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.051cc ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?y ns:education.education.degree ns:m.04zx3q1 .\n}\n", "PotentialTopicEntityMention": "martin luther king jr", "TopicEntityName": "Martin Luther King, Jr.", "TopicEntityMid": "m.051cc", "InferentialChain": ["people.person.education", "education.education.institution"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.04zx3q1", "EntityName": "PhD", "SourceNodeIndex": 0, "NodePredicate": "education.education.degree", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0gl5_", "EntityName": "Boston University"}]}], "topic_entity": {"m.051cc": "Martin Luther King, Jr."}, "qid_topic_entity": {"Q8027": "Martin Luther King, Jr."}}, {"QuestionId": "WebQTest-93", "RawQuestion": "what continent does armenia belong to?", "ProcessedQuestion": "what continent does armenia belong to", "Parses": [{"ParseId": "WebQTest-93.P0", "AnnotatorId": 2, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jgx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jgx ns:base.locations.countries.continent ?x .\n}\n", "PotentialTopicEntityMention": "armenia", "TopicEntityName": "Armenia", "TopicEntityMid": "m.0jgx", "InferentialChain": ["base.locations.countries.continent"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02j9z", "EntityName": "Europe"}]}], "topic_entity": {"m.0jgx": "Armenia"}, "qid_topic_entity": {"Q399": "Armenia"}}, {"QuestionId": "WebQTest-204", "RawQuestion": "what is the capital of modern egypt?", "ProcessedQuestion": "what is the capital of modern egypt", "Parses": [{"ParseId": "WebQTest-204.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02k54)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02k54 ns:location.country.capital ?x .\n}\n", "PotentialTopicEntityMention": "egypt", "TopicEntityName": "Egypt", "TopicEntityMid": "m.02k54", "InferentialChain": ["location.country.capital"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01w2v", "EntityName": "Cairo"}]}], "topic_entity": {"m.02k54": "Egypt"}, "qid_topic_entity": {"Q79": "Egypt"}}, {"QuestionId": "WebQTest-1777", "RawQuestion": "what is rihanna mum called?", "ProcessedQuestion": "what is rihanna mum called", "Parses": [{"ParseId": "WebQTest-1777.P0", "AnnotatorId": 2, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mt91)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mt91 ns:people.person.parents ?x .\n?x ns:people.person.gender ns:m.02zsn .\n}\n", "PotentialTopicEntityMention": "rihanna", "TopicEntityName": "Rihanna", "TopicEntityMid": "m.06mt91", "InferentialChain": ["people.person.parents"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.02zsn", "EntityName": "Female", "SourceNodeIndex": 0, "NodePredicate": "people.person.gender", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0h30zg_", "EntityName": "Monica Braithwaite"}]}], "topic_entity": {"m.06mt91": "Rihanna"}, "qid_topic_entity": {"Q36844": "Rihanna"}}, {"QuestionId": "WebQTest-404", "RawQuestion": "what was lebron james first team?", "ProcessedQuestion": "what was lebron james first team", "Parses": [{"ParseId": "WebQTest-404.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01jz6d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01jz6d ns:basketball.basketball_player.player_statistics ?y .\n?y ns:basketball.basketball_player_stats.team ?x .\n}\n", "PotentialTopicEntityMention": "lebron james", "TopicEntityName": "LeBron James", "TopicEntityMid": "m.01jz6d", "InferentialChain": ["basketball.basketball_player.player_statistics", "basketball.basketball_player_stats.team"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0jm7n", "EntityName": "Cleveland Cavaliers"}]}, {"ParseId": "WebQTest-404.P1", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01jz6d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01jz6d ns:sports.drafted_athlete.drafted ?y .\n?y ns:sports.sports_league_draft_pick.team ?x .\n}\n", "PotentialTopicEntityMention": "lebron james", "TopicEntityName": "LeBron James", "TopicEntityMid": "m.01jz6d", "InferentialChain": ["sports.drafted_athlete.drafted", "sports.sports_league_draft_pick.team"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0jm7n", "EntityName": "Cleveland Cavaliers"}]}], "topic_entity": {"m.01jz6d": "LeBron James"}, "qid_topic_entity": {"Q36159": "LeBron James"}}, {"QuestionId": "WebQTest-1907", "RawQuestion": "what kind of currency does dominican republic use?", "ProcessedQuestion": "what kind of currency does dominican republic use", "Parses": [{"ParseId": "WebQTest-1907.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027rn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027rn ns:location.country.currency_used ?x .\n}\n", "PotentialTopicEntityMention": "dominican republic", "TopicEntityName": "Dominican Republic", "TopicEntityMid": "m.027rn", "InferentialChain": ["location.country.currency_used"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.04lt7_", "EntityName": "Dominican peso"}]}], "topic_entity": {"m.027rn": "Dominican Republic"}, "qid_topic_entity": {"Q786": "Dominican Republic"}}, {"QuestionId": "WebQTest-194", "RawQuestion": "where did the iroquois indians come from?", "ProcessedQuestion": "where did the iroquois indians come from", "Parses": [{"ParseId": "WebQTest-194.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03x1x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03x1x ns:people.ethnicity.geographic_distribution ?x .\n}\n", "PotentialTopicEntityMention": "iroquois", "TopicEntityName": "Iroquois", "TopicEntityMid": "m.03x1x", "InferentialChain": ["people.ethnicity.geographic_distribution"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.05kr_", "EntityName": "Ontario"}, {"AnswerType": "Entity", "AnswerArgument": "m.0694j", "EntityName": "Qu\u00e9bec"}]}], "topic_entity": {"m.03x1x": "Iroquois"}, "qid_topic_entity": {"Q68518": "Iroquois"}}, {"QuestionId": "WebQTest-1069", "RawQuestion": "what is the name of the currency used in china?", "ProcessedQuestion": "what is the name of the currency used in china", "Parses": [{"ParseId": "WebQTest-1069.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d05w3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d05w3 ns:location.country.currency_used ?x .\n}\n", "PotentialTopicEntityMention": "china", "TopicEntityName": "China", "TopicEntityMid": "m.0d05w3", "InferentialChain": ["location.country.currency_used"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0hn4_", "EntityName": "Renminbi"}]}], "topic_entity": {"m.0d05w3": "China"}, "qid_topic_entity": {"Q148": "China"}}, {"QuestionId": "WebQTest-1539", "RawQuestion": "who is ryan reynolds married to 2012?", "ProcessedQuestion": "who is ryan reynolds married to 2012", "Parses": [{"ParseId": "WebQTest-1539.P0", "AnnotatorId": 3, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Low", "FreeFormComment": "? the query doesn't really check that the marriage wasn't ended."}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.036hf4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.036hf4 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n?y ns:people.marriage.from ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n", "PotentialTopicEntityMention": "ryan reynolds", "TopicEntityName": "Ryan Reynolds", "TopicEntityMid": "m.036hf4", "InferentialChain": ["people.person.spouse_s", "people.marriage.spouse"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.04ztj", "EntityName": "Marriage", "SourceNodeIndex": 0, "NodePredicate": "people.marriage.type_of_union", "ValueType": "String"}], "Time": null, "Order": {"SortOrder": "Descending", "Start": 0, "Count": 1, "SourceNodeIndex": 0, "NodePredicate": "people.marriage.from", "ValueType": "DateTime"}, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.06_bq1", "EntityName": "Blake Lively"}]}], "topic_entity": {"m.036hf4": "Ryan Reynolds"}, "qid_topic_entity": {"Q192682": "Ryan Reynolds"}}, {"QuestionId": "WebQTest-1475", "RawQuestion": "what type of guitar does johnny depp play?", "ProcessedQuestion": "what type of guitar does johnny depp play", "Parses": [{"ParseId": "WebQTest-1475.P0", "AnnotatorId": 3, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Low", "FreeFormComment": "? type of guitar?"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jfx1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jfx1 ns:music.group_member.instruments_played ?x .\n}\n", "PotentialTopicEntityMention": "johnny depp", "TopicEntityName": "Johnny Depp", "TopicEntityMid": "m.0jfx1", "InferentialChain": ["music.group_member.instruments_played"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0342h", "EntityName": "Guitar"}, {"AnswerType": "Entity", "AnswerArgument": "m.06w7v", "EntityName": "Slide guitar"}]}], "topic_entity": {"m.0jfx1": "Johnny Depp"}, "qid_topic_entity": {"Q37175": "Johnny Depp"}}, {"QuestionId": "WebQTest-1096", "RawQuestion": "what movies queen latifah is in?", "ProcessedQuestion": "what movies queen latifah is in", "Parses": [{"ParseId": "WebQTest-1096.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01wgcvn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01wgcvn ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n", "PotentialTopicEntityMention": "queen latifah", "TopicEntityName": "Queen Latifah", "TopicEntityMid": "m.01wgcvn", "InferentialChain": ["film.actor.film", "film.performance.film"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "g.11bc95kg2q", "EntityName": ""}, {"AnswerType": "Entity", "AnswerArgument": "m.010p_crb", "EntityName": "Kung Faux: Vol. 4"}, {"AnswerType": "Entity", "AnswerArgument": "m.01345yx_", "EntityName": "Bessie"}, {"AnswerType": "Entity", "AnswerArgument": "m.01370796", "EntityName": "Barbershop 3"}, {"AnswerType": "Entity", "AnswerArgument": "m.016f62", "EntityName": "Jungle Fever"}, {"AnswerType": "Entity", "AnswerArgument": "m.01cmp9", "EntityName": "Chicago"}, {"AnswerType": "Entity", "AnswerArgument": "m.01yzjg", "EntityName": "Bringing Out the Dead"}, {"AnswerType": "Entity", "AnswerArgument": "m.027j9wd", "EntityName": "Ice Age: Dawn of the Dinosaurs"}, {"AnswerType": "Entity", "AnswerArgument": "m.02b5v3", "EntityName": "Taxi"}, {"AnswerType": "Entity", "AnswerArgument": "m.02ntj8", "EntityName": "Barbershop 2: Back in Business"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rg6sm", "EntityName": "Arctic Tale"}, {"AnswerType": "Entity", "AnswerArgument": "m.02wc6sp", "EntityName": "Mad Money"}, {"AnswerType": "Entity", "AnswerArgument": "m.02z84b3", "EntityName": "Life Support"}, {"AnswerType": "Entity", "AnswerArgument": "m.032knp", "EntityName": "Set It Off"}, {"AnswerType": "Entity", "AnswerArgument": "m.03c3vl6", "EntityName": "What Happens in Vegas"}, {"AnswerType": "Entity", "AnswerArgument": "m.03cljvq", "EntityName": "The Perfect Holiday"}, {"AnswerType": "Entity", "AnswerArgument": "m.03l6q0", "EntityName": "Scary Movie 3"}, {"AnswerType": "Entity", "AnswerArgument": "m.04f9bz6", "EntityName": "The Secret Life of Bees"}, {"AnswerType": "Entity", "AnswerArgument": "m.04rncw", "EntityName": "Sphere"}, {"AnswerType": "Entity", "AnswerArgument": "m.054vql", "EntityName": "House Party 2"}, {"AnswerType": "Entity", "AnswerArgument": "m.0569lx", "EntityName": "The Muppets' Wizard of Oz"}, {"AnswerType": "Entity", "AnswerArgument": "m.05bzxn0", "EntityName": "We Are One: The Obama Inaugural Celebration at the Lincoln Memorial"}, {"AnswerType": "Entity", "AnswerArgument": "m.05p46dv", "EntityName": "Hairspray 2: White Lipstick"}, {"AnswerType": "Entity", "AnswerArgument": "m.05rkmv", "EntityName": "Beauty Shop"}, {"AnswerType": "Entity", "AnswerArgument": "m.05zynv8", "EntityName": "Living with the Dead"}, {"AnswerType": "Entity", "AnswerArgument": "m.06_wqk4", "EntityName": "Valentine's Day"}, {"AnswerType": "Entity", "AnswerArgument": "m.060p1m", "EntityName": "Hoodlum"}, {"AnswerType": "Entity", "AnswerArgument": "m.06bks2", "EntityName": "The Cookout"}, {"AnswerType": "Entity", "AnswerArgument": "m.06fwns", "EntityName": "The Bone Collector"}, {"AnswerType": "Entity", "AnswerArgument": "m.06n95j", "EntityName": "The Country Bears"}, {"AnswerType": "Entity", "AnswerArgument": "m.07_3vm", "EntityName": "Brown Sugar"}, {"AnswerType": "Entity", "AnswerArgument": "m.0729rh", "EntityName": "Ice Age: The Meltdown"}, {"AnswerType": "Entity", "AnswerArgument": "m.07kbj2s", "EntityName": "Just Wright"}, {"AnswerType": "Entity", "AnswerArgument": "m.07nt4j", "EntityName": "Last Holiday"}, {"AnswerType": "Entity", "AnswerArgument": "m.08qsz2", "EntityName": "Bringing Down the House"}, {"AnswerType": "Entity", "AnswerArgument": "m.08w51z", "EntityName": "Juice"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bm2nq", "EntityName": "Stranger than Fiction"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bt3j9", "EntityName": "Hairspray"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bvpwc6", "EntityName": "Mama Flora's Family"}, {"AnswerType": "Entity", "AnswerArgument": "m.0c3_662", "EntityName": "The Dilemma"}, {"AnswerType": "Entity", "AnswerArgument": "m.0crt91p", "EntityName": "The Making of What's Going On: An All-Star Tribute"}, {"AnswerType": "Entity", "AnswerArgument": "m.0crv_pd", "EntityName": "Kung Faux: Vol. 1"}, {"AnswerType": "Entity", "AnswerArgument": "m.0crvchf", "EntityName": "We Are Family"}, {"AnswerType": "Entity", "AnswerArgument": "m.0crvfd7", "EntityName": "Kung Faux: Vol. 3"}, {"AnswerType": "Entity", "AnswerArgument": "m.0crw1rn", "EntityName": "Breaking Out: The Alcatraz Concert"}, {"AnswerType": "Entity", "AnswerArgument": "m.0crw75p", "EntityName": "Kung Faux: Vol. 5"}, {"AnswerType": "Entity", "AnswerArgument": "m.0crxknq", "EntityName": "One Love: The Bob Marley All-Star Tribute"}, {"AnswerType": "Entity", "AnswerArgument": "m.0cryhb4", "EntityName": "Queen Latifah - Unauthorized"}, {"AnswerType": "Entity", "AnswerArgument": "m.0cs2r3l", "EntityName": "Through the Years of Hip-Hop: Vol. 1: Graffiti"}, {"AnswerType": "Entity", "AnswerArgument": "m.0cs45fr", "EntityName": "Life in the 310: Vol. 3"}, {"AnswerType": "Entity", "AnswerArgument": "m.0cs85c7", "EntityName": "Kung Faux: Vol. 2"}, {"AnswerType": "Entity", "AnswerArgument": "m.0ds27b", "EntityName": "My Life"}, {"AnswerType": "Entity", "AnswerArgument": "m.0fpgp26", "EntityName": "Ice Age: Continental Drift"}, {"AnswerType": "Entity", "AnswerArgument": "m.0g54bw9", "EntityName": "Joyful Noise"}, {"AnswerType": "Entity", "AnswerArgument": "m.0gym9j6", "EntityName": "Zac Efron's Pool Party"}, {"AnswerType": "Entity", "AnswerArgument": "m.0j24hls", "EntityName": "Ice Age: A Mammoth Christmas"}, {"AnswerType": "Entity", "AnswerArgument": "m.0j72nq9", "EntityName": "Steel Magnolias"}, {"AnswerType": "Entity", "AnswerArgument": "m.0kvh49", "EntityName": "Living Out Loud"}, {"AnswerType": "Entity", "AnswerArgument": "m.0v_w91n", "EntityName": "22 Jump Street"}]}], "topic_entity": {"m.01wgcvn": "Queen Latifah"}, "qid_topic_entity": {"Q1112005": "Queen Latifah"}}, {"QuestionId": "WebQTest-812", "RawQuestion": "what movies does matt dallas play in?", "ProcessedQuestion": "what movies does matt dallas play in", "Parses": [{"ParseId": "WebQTest-812.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dfyw6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dfyw6 ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n", "PotentialTopicEntityMention": "matt dallas", "TopicEntityName": "Matt Dallas", "TopicEntityMid": "m.0dfyw6", "InferentialChain": ["film.actor.film", "film.performance.film"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.026jldh", "EntityName": "Babysitter Wanted"}, {"AnswerType": "Entity", "AnswerArgument": "m.02phpqn", "EntityName": "Camp Slaughter"}, {"AnswerType": "Entity", "AnswerArgument": "m.04j1y3y", "EntityName": "Way of the Vampire"}, {"AnswerType": "Entity", "AnswerArgument": "m.04yy0f", "EntityName": "Wannabe"}, {"AnswerType": "Entity", "AnswerArgument": "m.051x5f2", "EntityName": "Living the Dream"}, {"AnswerType": "Entity", "AnswerArgument": "m.05p309z", "EntityName": "The Story of Bonnie and Clyde"}, {"AnswerType": "Entity", "AnswerArgument": "m.07kjjgx", "EntityName": "Beauty & the Briefcase"}, {"AnswerType": "Entity", "AnswerArgument": "m.0b3w04n", "EntityName": "As Good as Dead"}, {"AnswerType": "Entity", "AnswerArgument": "m.0crsyk2", "EntityName": "The Indian"}, {"AnswerType": "Entity", "AnswerArgument": "m.0gx0043", "EntityName": "Wyatt Earp's Revenge"}, {"AnswerType": "Entity", "AnswerArgument": "m.0h2ky9j", "EntityName": "Hot Dudes with Kittens"}, {"AnswerType": "Entity", "AnswerArgument": "m.0h2kycm", "EntityName": "You, Me & The Circus"}, {"AnswerType": "Entity", "AnswerArgument": "m.0h2kydx", "EntityName": "The Ghost of Goodnight Lane"}, {"AnswerType": "Entity", "AnswerArgument": "m.0h2r0x7", "EntityName": "In Between Days"}, {"AnswerType": "Entity", "AnswerArgument": "m.0n_5c2p", "EntityName": "Naughty or Nice"}]}], "topic_entity": {"m.0dfyw6": "Matt Dallas"}, "qid_topic_entity": {"Q313656": "Matt Dallas"}}, {"QuestionId": "WebQTest-1101", "RawQuestion": "who is martin luther king jr facts?", "ProcessedQuestion": "who is martin luther king jr facts", "Parses": [{"ParseId": "WebQTest-1101.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.051cc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.051cc ns:people.person.profession ?x .\n}\n", "PotentialTopicEntityMention": "martin luther king jr", "TopicEntityName": "Martin Luther King, Jr.", "TopicEntityMid": "m.051cc", "InferentialChain": ["people.person.profession"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.010b8yqs", "EntityName": "Civil rights activist"}, {"AnswerType": "Entity", "AnswerArgument": "m.01fhsb", "EntityName": "Pastor"}, {"AnswerType": "Entity", "AnswerArgument": "m.0377kt", "EntityName": "Minister"}, {"AnswerType": "Entity", "AnswerArgument": "m.065qmpf", "EntityName": "Humanitarian"}, {"AnswerType": "Entity", "AnswerArgument": "m.0cbd2", "EntityName": "Writer"}, {"AnswerType": "Entity", "AnswerArgument": "m.0db79", "EntityName": "Clergy"}]}], "topic_entity": {"m.051cc": "Martin Luther King, Jr."}, "qid_topic_entity": {"Q8027": "Martin Luther King, Jr."}}, {"QuestionId": "WebQTest-1047", "RawQuestion": "who does amy stiller play in dodgeball?", "ProcessedQuestion": "who does amy stiller play in dodgeball", "Parses": [{"ParseId": "WebQTest-1047.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0194r1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0194r1 ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.034qrh .\n}\n", "PotentialTopicEntityMention": "amy stiller", "TopicEntityName": "Amy Stiller", "TopicEntityMid": "m.0194r1", "InferentialChain": ["film.actor.film", "film.performance.character"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.034qrh", "EntityName": "DodgeBall: A True Underdog Story", "SourceNodeIndex": 0, "NodePredicate": "film.performance.film", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0h5kk2x", "EntityName": "Keno Waitress"}]}, {"ParseId": "WebQTest-1047.P1", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.034qrh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.034qrh ns:film.film.starring ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.actor ns:m.0194r1 .\n}\n", "PotentialTopicEntityMention": "dodgeball", "TopicEntityName": "DodgeBall: A True Underdog Story", "TopicEntityMid": "m.034qrh", "InferentialChain": ["film.film.starring", "film.performance.character"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.0194r1", "EntityName": "Amy Stiller", "SourceNodeIndex": 0, "NodePredicate": "film.performance.actor", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0h5kk2x", "EntityName": "Keno Waitress"}]}], "topic_entity": {"m.0194r1": "Amy Stiller", "m.034qrh": "DodgeBall: A True Underdog Story"}, "qid_topic_entity": {"Q443128": "Amy Stiller", "Q908473": "DodgeBall: A True Underdog Story"}}, {"QuestionId": "WebQTest-497", "RawQuestion": "who was the father of king george vi?", "ProcessedQuestion": "who was the father of king george vi", "Parses": [{"ParseId": "WebQTest-497.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cm83)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cm83 ns:people.person.parents ?x .\n?x ns:people.person.gender ns:m.05zppz .\n}\n", "PotentialTopicEntityMention": "king george vi", "TopicEntityName": "George VI", "TopicEntityMid": "m.0cm83", "InferentialChain": ["people.person.parents"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.05zppz", "EntityName": "Male", "SourceNodeIndex": 0, "NodePredicate": "people.person.gender", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0cmpn", "EntityName": "George V"}]}], "topic_entity": {"m.0cm83": "George VI"}, "qid_topic_entity": {"Q280856": "George VI"}}, {"QuestionId": "WebQTest-1884", "RawQuestion": "what degrees did barack obama get?", "ProcessedQuestion": "what degrees did barack obama get", "Parses": [{"ParseId": "WebQTest-1884.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02mjmr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02mjmr ns:people.person.education ?y .\n?y ns:education.education.degree ?x .\n}\n", "PotentialTopicEntityMention": "barack obama", "TopicEntityName": "Barack Obama", "TopicEntityMid": "m.02mjmr", "InferentialChain": ["people.person.education", "education.education.degree"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.013zdg", "EntityName": "Juris Doctor"}, {"AnswerType": "Entity", "AnswerArgument": "m.014mlp", "EntityName": "Bachelor of Arts"}]}], "topic_entity": {"m.02mjmr": "Barack Obama"}, "qid_topic_entity": {"Q76": "Barack Obama"}}, {"QuestionId": "WebQTest-1262", "RawQuestion": "what part of the country is ohio considered?", "ProcessedQuestion": "what part of the country is ohio considered", "Parses": [{"ParseId": "WebQTest-1262.P0", "AnnotatorId": 3, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05kkh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05kkh ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.01nt .\n}\n", "PotentialTopicEntityMention": "ohio", "TopicEntityName": "Ohio", "TopicEntityMid": "m.05kkh", "InferentialChain": ["location.location.containedby"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.01nt", "EntityName": "Region", "SourceNodeIndex": 0, "NodePredicate": "common.topic.notable_types", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.03pzys", "EntityName": "East North Central States"}, {"AnswerType": "Entity", "AnswerArgument": "m.0q76g", "EntityName": "Midwestern United States"}]}], "topic_entity": {"m.05kkh": "Ohio"}, "qid_topic_entity": {"Q1397": "Ohio"}}, {"QuestionId": "WebQTest-1179", "RawQuestion": "what role did george lucas play in star wars?", "ProcessedQuestion": "what role did george lucas play in star wars", "Parses": [{"ParseId": "WebQTest-1179.P0", "AnnotatorId": 2, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0343h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0343h ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.0fdv3 .\n}\n", "PotentialTopicEntityMention": "george lucas", "TopicEntityName": "George Lucas", "TopicEntityMid": "m.0343h", "InferentialChain": ["film.actor.film", "film.performance.character"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.0fdv3", "EntityName": "Star Wars Episode III: Revenge of the Sith", "SourceNodeIndex": 0, "NodePredicate": "film.performance.film", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02nwmq1", "EntityName": "Baron Papanoida"}]}], "topic_entity": {"m.0343h": "George Lucas"}, "qid_topic_entity": {"Q38222": "George Lucas"}}, {"QuestionId": "WebQTest-952", "RawQuestion": "what country does alaska belong to?", "ProcessedQuestion": "what country does alaska belong to", "Parses": [{"ParseId": "WebQTest-952.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hjy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hjy ns:base.biblioness.bibs_location.country ?x .\n}\n", "PotentialTopicEntityMention": "alaska", "TopicEntityName": "Alaska", "TopicEntityMid": "m.0hjy", "InferentialChain": ["base.biblioness.bibs_location.country"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.09c7w0", "EntityName": "United States of America"}]}, {"ParseId": "WebQTest-952.P1", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hjy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hjy ns:base.locations.states_and_provences.country ?x .\n}\n", "PotentialTopicEntityMention": "alaska", "TopicEntityName": "Alaska", "TopicEntityMid": "m.0hjy", "InferentialChain": ["base.locations.states_and_provences.country"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.09c7w0", "EntityName": "United States of America"}]}, {"ParseId": "WebQTest-952.P2", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hjy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hjy ns:location.administrative_division.country ?x .\n}\n", "PotentialTopicEntityMention": "alaska", "TopicEntityName": "Alaska", "TopicEntityMid": "m.0hjy", "InferentialChain": ["location.administrative_division.country"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.09c7w0", "EntityName": "United States of America"}]}], "topic_entity": {"m.0hjy": "Alaska"}, "qid_topic_entity": {"Q797": "Alaska"}}, {"QuestionId": "WebQTest-1059", "RawQuestion": "what language does east timor speak?", "ProcessedQuestion": "what language does east timor speak", "Parses": [{"ParseId": "WebQTest-1059.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02lx0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02lx0 ns:location.country.languages_spoken ?x .\n}\n", "PotentialTopicEntityMention": "east timor", "TopicEntityName": "Timor-Leste", "TopicEntityMid": "m.02lx0", "InferentialChain": ["location.country.languages_spoken"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.025t0jp", "EntityName": "Bunak Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02h40lc", "EntityName": "English Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02hwsld", "EntityName": "Habu Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02hwtzw", "EntityName": "Kemak Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02hwv54", "EntityName": "Makuv'a Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02hxpqk", "EntityName": "Mambai Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02hxv_x", "EntityName": "Galoli Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02hxwg_", "EntityName": "Makasae Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02hxz87", "EntityName": "Tukudede Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.03xwkt", "EntityName": "Makalero dialect"}, {"AnswerType": "Entity", "AnswerArgument": "m.05zjd", "EntityName": "Portuguese Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.063xlx", "EntityName": "Fataluku Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.097kp", "EntityName": "Indonesian Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bvt6k", "EntityName": "Kawaimina languages"}, {"AnswerType": "Entity", "AnswerArgument": "m.0dss2", "EntityName": "Tetun Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.0k97dfx", "EntityName": "Idalaka"}, {"AnswerType": "Entity", "AnswerArgument": "m.0kc98sf", "EntityName": "Bekais"}, {"AnswerType": "Entity", "AnswerArgument": "m.0kc98sk", "EntityName": "Dawan"}, {"AnswerType": "Entity", "AnswerArgument": "m.0kc98sn", "EntityName": "Wetarese"}, {"AnswerType": "Entity", "AnswerArgument": "m.0kc98sr", "EntityName": "Tetun-Terik"}]}, {"ParseId": "WebQTest-1059.P1", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02lx0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02lx0 ns:location.country.official_language ?x .\n}\n", "PotentialTopicEntityMention": "east timor", "TopicEntityName": "Timor-Leste", "TopicEntityMid": "m.02lx0", "InferentialChain": ["location.country.official_language"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.05zjd", "EntityName": "Portuguese Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.0dss2", "EntityName": "Tetun Language"}]}], "topic_entity": {"m.02lx0": "Timor-Leste"}, "qid_topic_entity": {"Q574": "Timor-Leste"}}, {"QuestionId": "WebQTest-1887", "RawQuestion": "what is the name of the currency used in switzerland?", "ProcessedQuestion": "what is the name of the currency used in switzerland", "Parses": [{"ParseId": "WebQTest-1887.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mzp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mzp ns:location.country.currency_used ?x .\n}\n", "PotentialTopicEntityMention": "switzerland", "TopicEntityName": "Switzerland", "TopicEntityMid": "m.06mzp", "InferentialChain": ["location.country.currency_used"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01_h4b", "EntityName": "Swiss franc"}]}], "topic_entity": {"m.06mzp": "Switzerland"}, "qid_topic_entity": {"Q39": "Switzerland"}}, {"QuestionId": "WebQTest-146", "RawQuestion": "what team does jordan own?", "ProcessedQuestion": "what team does jordan own", "Parses": [{"ParseId": "WebQTest-146.P0", "AnnotatorId": 1, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03__y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03__y ns:sports.sports_team_location.teams ?x .\n}\n", "PotentialTopicEntityMention": "jordan", "TopicEntityName": "Jordan", "TopicEntityMid": "m.03__y", "InferentialChain": ["sports.sports_team_location.teams"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0452m3", "EntityName": "Jordan national football team"}, {"AnswerType": "Entity", "AnswerArgument": "m.08htl1", "EntityName": "Al-Wehdat SC"}]}], "topic_entity": {"m.03__y": "Jordan"}, "qid_topic_entity": {"Q810": "Jordan"}}, {"QuestionId": "WebQTest-59", "RawQuestion": "when did annie open?", "ProcessedQuestion": "when did annie open", "Parses": [{"ParseId": "WebQTest-59.P0", "AnnotatorId": 1, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01_1m4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01_1m4 ns:theater.play.date_of_first_performance ?x .\n}\n", "PotentialTopicEntityMention": "annie", "TopicEntityName": "Annie", "TopicEntityMid": "m.01_1m4", "InferentialChain": ["theater.play.date_of_first_performance"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Value", "AnswerArgument": "1976-08-10", "EntityName": null}]}], "topic_entity": {"m.01_1m4": "Annie"}, "qid_topic_entity": {"Q566892": "Annie"}}, {"QuestionId": "WebQTest-927", "RawQuestion": "who plays voldemort?", "ProcessedQuestion": "who plays voldemort", "Parses": [{"ParseId": "WebQTest-927.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c8lv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c8lv ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n}\n", "PotentialTopicEntityMention": "voldemort", "TopicEntityName": "Lord Voldemort", "TopicEntityMid": "m.0c8lv", "InferentialChain": ["film.film_character.portrayed_in_films", "film.performance.actor"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0170qf", "EntityName": "Ralph Fiennes"}, {"AnswerType": "Entity", "AnswerArgument": "m.0414vty", "EntityName": "Frank Dillane"}, {"AnswerType": "Entity", "AnswerArgument": "m.04gw9xr", "EntityName": "Hero Fiennes-Tiffin"}, {"AnswerType": "Entity", "AnswerArgument": "m.06_4v9", "EntityName": "Christian Coulson"}, {"AnswerType": "Entity", "AnswerArgument": "m.071yrz", "EntityName": "Richard Bremmer"}]}], "topic_entity": {"m.0c8lv": "Lord Voldemort"}, "qid_topic_entity": {"Q176132": "Lord Voldemort"}}, {"QuestionId": "WebQTest-1423", "RawQuestion": "what language did they speak in ghana?", "ProcessedQuestion": "what language did they speak in ghana", "Parses": [{"ParseId": "WebQTest-1423.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.035dk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.035dk ns:location.country.languages_spoken ?x .\n}\n", "PotentialTopicEntityMention": "ghana", "TopicEntityName": "Ghana", "TopicEntityMid": "m.035dk", "InferentialChain": ["location.country.languages_spoken"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01_lfh", "EntityName": "Asante dialect"}, {"AnswerType": "Entity", "AnswerArgument": "m.01kphj", "EntityName": "Ga Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02h40lc", "EntityName": "English Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02hw_03", "EntityName": "Akan Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02hwm3m", "EntityName": "Kasem Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02hx8z6", "EntityName": "Nzema Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02j199", "EntityName": "\u00c9w\u00e9 Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02vkpsr", "EntityName": "Dagaare language"}, {"AnswerType": "Entity", "AnswerArgument": "m.04wm85", "EntityName": "Dagbani Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.05781j", "EntityName": "Dangme Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.05n7jk", "EntityName": "Fula language"}, {"AnswerType": "Entity", "AnswerArgument": "m.08r4hf", "EntityName": "Gonja Language"}]}], "topic_entity": {"m.035dk": "Ghana"}, "qid_topic_entity": {"Q117": "Ghana"}}, {"QuestionId": "WebQTest-1938", "RawQuestion": "where did robin williams get married?", "ProcessedQuestion": "where did robin williams get married", "Parses": [{"ParseId": "WebQTest-1938.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dzf_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dzf_ ns:people.person.spouse_s ?y .\n?y ns:people.marriage.location_of_ceremony ?x .\n}\n", "PotentialTopicEntityMention": "robin williams", "TopicEntityName": "Robin Williams", "TopicEntityMid": "m.0dzf_", "InferentialChain": ["people.person.spouse_s", "people.marriage.location_of_ceremony"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0r26s", "EntityName": "St. Helena"}]}], "topic_entity": {"m.0dzf_": "Robin Williams"}, "qid_topic_entity": {"Q83338": "Robin Williams"}}, {"QuestionId": "WebQTest-1231", "RawQuestion": "where is chris paul from?", "ProcessedQuestion": "where is chris paul from", "Parses": [{"ParseId": "WebQTest-1231.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cymln)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cymln ns:people.person.nationality ?x .\n}\n", "PotentialTopicEntityMention": "chris paul", "TopicEntityName": "Chris Paul", "TopicEntityMid": "m.0cymln", "InferentialChain": ["people.person.nationality"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.09c7w0", "EntityName": "United States of America"}]}], "topic_entity": {"m.0cymln": "Chris Paul"}, "qid_topic_entity": {"Q46040": "Chris Paul"}}, {"QuestionId": "WebQTest-1801", "RawQuestion": "who plays simon birch?", "ProcessedQuestion": "who plays simon birch", "Parses": [{"ParseId": "WebQTest-1801.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.070m8v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.070m8v ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.0gwwcp6 .\n}\n", "PotentialTopicEntityMention": "simon birch", "TopicEntityName": "Simon Birch", "TopicEntityMid": "m.070m8v", "InferentialChain": ["film.film.starring", "film.performance.actor"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.0gwwcp6", "EntityName": "Simon Birch", "SourceNodeIndex": 0, "NodePredicate": "film.performance.character", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0cp8vl", "EntityName": "Ian Michael Smith"}]}], "topic_entity": {"m.070m8v": "Simon Birch"}, "qid_topic_entity": {"Q1540008": "Simon Birch"}}, {"QuestionId": "WebQTest-976", "RawQuestion": "where do the chicago white sox play home games?", "ProcessedQuestion": "where do the chicago white sox play home games", "Parses": [{"ParseId": "WebQTest-976.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01slc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01slc ns:sports.sports_team.arena_stadium ?x .\n}\n", "PotentialTopicEntityMention": "chicago white sox", "TopicEntityName": "Chicago White Sox", "TopicEntityMid": "m.01slc", "InferentialChain": ["sports.sports_team.arena_stadium"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02nwdt", "EntityName": "Comiskey Park"}, {"AnswerType": "Entity", "AnswerArgument": "m.02yxpv", "EntityName": "U.S. Cellular Field"}]}], "topic_entity": {"m.01slc": "Chicago White Sox"}, "qid_topic_entity": {"Q335169": "Chicago White Sox"}}, {"QuestionId": "WebQTest-1659", "RawQuestion": "what is the zip code for walnut creek?", "ProcessedQuestion": "what is the zip code for walnut creek", "Parses": [{"ParseId": "WebQTest-1659.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0qyzb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0qyzb ns:location.citytown.postal_codes ?x .\n}\n", "PotentialTopicEntityMention": "walnut creek", "TopicEntityName": "Walnut Creek", "TopicEntityMid": "m.0qyzb", "InferentialChain": ["location.citytown.postal_codes"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01zs6f0", "EntityName": "94596"}, {"AnswerType": "Entity", "AnswerArgument": "m.01zs6ht", "EntityName": "94598"}, {"AnswerType": "Entity", "AnswerArgument": "m.01zs6ms", "EntityName": "94597"}, {"AnswerType": "Entity", "AnswerArgument": "m.01zs75v", "EntityName": "94595"}]}], "topic_entity": {"m.0qyzb": "Walnut Creek"}, "qid_topic_entity": {"Q493261": "Walnut Creek"}}, {"QuestionId": "WebQTest-1470", "RawQuestion": "what kind of government does poland have?", "ProcessedQuestion": "what kind of government does poland have", "Parses": [{"ParseId": "WebQTest-1470.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05qhw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05qhw ns:location.country.form_of_government ?x .\n}\n", "PotentialTopicEntityMention": "poland", "TopicEntityName": "Poland", "TopicEntityMid": "m.05qhw", "InferentialChain": ["location.country.form_of_government"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.026wp", "EntityName": "Democracy"}, {"AnswerType": "Entity", "AnswerArgument": "m.0glnsx", "EntityName": "Parliamentary republic"}]}], "topic_entity": {"m.05qhw": "Poland"}, "qid_topic_entity": {"Q36": "Poland"}}, {"QuestionId": "WebQTest-759", "RawQuestion": "who brad pitt has dated?", "ProcessedQuestion": "who brad pitt has dated", "Parses": [{"ParseId": "WebQTest-759.P0", "AnnotatorId": 3, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "VeryLow", "FreeFormComment": "?? should this be a union with those that he was engaged to? probably"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c6qh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c6qh ns:celebrities.celebrity.sexual_relationships ?y .\n?y ns:celebrities.romantic_relationship.celebrity ?x .\n?y ns:celebrities.romantic_relationship.relationship_type ns:m.02_7k44 .\n}\n", "PotentialTopicEntityMention": "brad pitt", "TopicEntityName": "Brad Pitt", "TopicEntityMid": "m.0c6qh", "InferentialChain": ["celebrities.celebrity.sexual_relationships", "celebrities.romantic_relationship.celebrity"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.02_7k44", "EntityName": "Dated", "SourceNodeIndex": 0, "NodePredicate": "celebrities.romantic_relationship.relationship_type", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02cpb7", "EntityName": "Thandie Newton"}, {"AnswerType": "Entity", "AnswerArgument": "m.02g0mx", "EntityName": "Juliette Lewis"}, {"AnswerType": "Entity", "AnswerArgument": "m.04j9sl", "EntityName": "Sinitta"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bblqk", "EntityName": "Shalane McCall"}, {"AnswerType": "Entity", "AnswerArgument": "m.0hjxj", "EntityName": "Robin Givens"}]}], "topic_entity": {"m.0c6qh": "Brad Pitt"}, "qid_topic_entity": {"Q35332": "Brad Pitt"}}, {"QuestionId": "WebQTest-1650", "RawQuestion": "what did gloria steinem founded?", "ProcessedQuestion": "what did gloria steinem founded", "Parses": [{"ParseId": "WebQTest-1650.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01rnwj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01rnwj ns:organization.organization_founder.organizations_founded ?x .\n}\n", "PotentialTopicEntityMention": "gloria steinem", "TopicEntityName": "Gloria Steinem", "TopicEntityMid": "m.01rnwj", "InferentialChain": ["organization.organization_founder.organizations_founded"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.027hxmd", "EntityName": "Coalition of Labor Union Women"}, {"AnswerType": "Entity", "AnswerArgument": "m.02vvc3x", "EntityName": "Choice USA"}, {"AnswerType": "Entity", "AnswerArgument": "m.03cytx2", "EntityName": "Ms. Foundation for Women"}, {"AnswerType": "Entity", "AnswerArgument": "m.04wwjx", "EntityName": "National Women's Political Caucus"}, {"AnswerType": "Entity", "AnswerArgument": "m.05st95c", "EntityName": "New York Media, LLC"}, {"AnswerType": "Entity", "AnswerArgument": "m.0640068", "EntityName": "Women's Action Alliance"}, {"AnswerType": "Entity", "AnswerArgument": "m.06d6x5", "EntityName": "Feminist Majority Foundation"}]}], "topic_entity": {"m.01rnwj": "Gloria Steinem"}, "qid_topic_entity": {"Q231178": "Gloria Steinem"}}, {"QuestionId": "WebQTest-19", "RawQuestion": "what is my timezone in louisiana?", "ProcessedQuestion": "what is my timezone in louisiana", "Parses": [{"ParseId": "WebQTest-19.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04ly1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04ly1 ns:location.location.time_zones ?x .\n}\n", "PotentialTopicEntityMention": "louisiana", "TopicEntityName": "Louisiana", "TopicEntityMid": "m.04ly1", "InferentialChain": ["location.location.time_zones"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02fqwt", "EntityName": "Central Time Zone"}]}], "topic_entity": {"m.04ly1": "Louisiana"}, "qid_topic_entity": {"Q1588": "Louisiana"}}, {"QuestionId": "WebQTest-1740", "RawQuestion": "who is angelina jolies brother?", "ProcessedQuestion": "who is angelina jolies brother", "Parses": [{"ParseId": "WebQTest-1740.P0", "AnnotatorId": 4, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f4vbz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f4vbz ns:people.person.sibling_s ?y .\n?y ns:people.sibling_relationship.sibling ?x .\n?x ns:people.person.gender ns:m.05zppz .\n}\n", "PotentialTopicEntityMention": "angelina jolies", "TopicEntityName": "Angelina Jolie", "TopicEntityMid": "m.0f4vbz", "InferentialChain": ["people.person.sibling_s", "people.sibling_relationship.sibling"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.05zppz", "EntityName": "Male", "SourceNodeIndex": 1, "NodePredicate": "people.person.gender", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01mqg0", "EntityName": "James Haven"}]}], "topic_entity": {"m.0f4vbz": "Angelina Jolie"}, "qid_topic_entity": {"Q13909": "Angelina Jolie"}}, {"QuestionId": "WebQTest-1991", "RawQuestion": "what part of the country is ohio in?", "ProcessedQuestion": "what part of the country is ohio in", "Parses": [{"ParseId": "WebQTest-1991.P0", "AnnotatorId": 3, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05kkh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05kkh ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.01nt .\n}\n", "PotentialTopicEntityMention": "ohio", "TopicEntityName": "Ohio", "TopicEntityMid": "m.05kkh", "InferentialChain": ["location.location.containedby"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.01nt", "EntityName": "Region", "SourceNodeIndex": 0, "NodePredicate": "common.topic.notable_types", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.03pzys", "EntityName": "East North Central States"}, {"AnswerType": "Entity", "AnswerArgument": "m.0q76g", "EntityName": "Midwestern United States"}]}], "topic_entity": {"m.05kkh": "Ohio"}, "qid_topic_entity": {"Q1397": "Ohio"}}, {"QuestionId": "WebQTest-153", "RawQuestion": "what are the sights to see in madrid?", "ProcessedQuestion": "what are the sights to see in madrid", "Parses": [{"ParseId": "WebQTest-153.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.056_y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.056_y ns:travel.travel_destination.tourist_attractions ?x .\n}\n", "PotentialTopicEntityMention": "madrid", "TopicEntityName": "Madrid", "TopicEntityMid": "m.056_y", "InferentialChain": ["travel.travel_destination.tourist_attractions"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01bc9m", "EntityName": "El Escorial"}, {"AnswerType": "Entity", "AnswerArgument": "m.01hlq3", "EntityName": "Museo Nacional Del Prado"}, {"AnswerType": "Entity", "AnswerArgument": "m.01jcyh", "EntityName": "Museo Nacional Centro de Arte Reina Sof\u00eda"}, {"AnswerType": "Entity", "AnswerArgument": "m.02r9yg7", "EntityName": "Summercase"}, {"AnswerType": "Entity", "AnswerArgument": "m.03chy63", "EntityName": "Festimad"}, {"AnswerType": "Entity", "AnswerArgument": "m.03rmzx", "EntityName": "Buen Retiro Park"}, {"AnswerType": "Entity", "AnswerArgument": "m.04m3yk", "EntityName": "Royal Palace of Madrid"}, {"AnswerType": "Entity", "AnswerArgument": "m.053llq", "EntityName": "Almudena Cathedral"}, {"AnswerType": "Entity", "AnswerArgument": "m.05bvn8g", "EntityName": "Sorolla Museum"}, {"AnswerType": "Entity", "AnswerArgument": "m.06_l58", "EntityName": "Plaza de Cibeles"}, {"AnswerType": "Entity", "AnswerArgument": "m.06cgmf", "EntityName": "Madrid Arena"}, {"AnswerType": "Entity", "AnswerArgument": "m.06j2nj", "EntityName": "Paseo del Prado"}, {"AnswerType": "Entity", "AnswerArgument": "m.06nd2f", "EntityName": "Parque Warner Madrid"}, {"AnswerType": "Entity", "AnswerArgument": "m.073z19", "EntityName": "Thyssen-Bornemisza Museum"}, {"AnswerType": "Entity", "AnswerArgument": "m.07f__f", "EntityName": "Temple of Debod"}, {"AnswerType": "Entity", "AnswerArgument": "m.07mpc7", "EntityName": "Puerta del Sol"}, {"AnswerType": "Entity", "AnswerArgument": "m.09s07b", "EntityName": "Gran V\u00eda"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bwg9f0", "EntityName": "Madrid Marathon"}, {"AnswerType": "Entity", "AnswerArgument": "m.0cd2rc", "EntityName": "Plaza Mayor, Madrid"}, {"AnswerType": "Entity", "AnswerArgument": "m.0fphvtq", "EntityName": "La Vaguada"}, {"AnswerType": "Entity", "AnswerArgument": "m.0h3lmf1", "EntityName": "Museum of L\u00e1zaro Galdiano"}, {"AnswerType": "Entity", "AnswerArgument": "m.0h3tjjc", "EntityName": "Palace of la Bolsa de Madrid"}]}], "topic_entity": {"m.056_y": "Madrid"}, "qid_topic_entity": {"Q2807": "Madrid"}}, {"QuestionId": "WebQTest-1541", "RawQuestion": "what type of music did antonio vivaldi play?", "ProcessedQuestion": "what type of music did antonio vivaldi play", "Parses": [{"ParseId": "WebQTest-1541.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0pth)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0pth ns:music.artist.genre ?x .\n}\n", "PotentialTopicEntityMention": "antonio vivaldi", "TopicEntityName": "Antonio Vivaldi", "TopicEntityMid": "m.0pth", "InferentialChain": ["music.artist.genre"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01fsz", "EntityName": "Baroque music"}, {"AnswerType": "Entity", "AnswerArgument": "m.0ggq0m", "EntityName": "Classical music"}]}], "topic_entity": {"m.0pth": "Antonio Vivaldi"}, "qid_topic_entity": {"Q1340": "Antonio Vivaldi"}}, {"QuestionId": "WebQTest-312", "RawQuestion": "who plays captain kirk in star trek?", "ProcessedQuestion": "who plays captain kirk in star trek", "Parses": [{"ParseId": "WebQTest-312.P0", "AnnotatorId": 4, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0crtw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0crtw ns:tv.tv_character.appeared_in_tv_program ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n}\n", "PotentialTopicEntityMention": "captain kirk", "TopicEntityName": "James T. Kirk", "TopicEntityMid": "m.0crtw", "InferentialChain": ["tv.tv_character.appeared_in_tv_program", "tv.regular_tv_appearance.actor"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.06_6j3", "EntityName": "Vic Mignogna"}, {"AnswerType": "Entity", "AnswerArgument": "m.084m3", "EntityName": "William Shatner"}, {"AnswerType": "Entity", "AnswerArgument": "m.0lx2l", "EntityName": "Jim Carrey"}]}], "topic_entity": {"m.0crtw": "James T. Kirk"}, "qid_topic_entity": {"Q16311": "James T. Kirk"}}, {"QuestionId": "WebQTest-1027", "RawQuestion": "where do the blackhawks play?", "ProcessedQuestion": "where do the blackhawks play", "Parses": [{"ParseId": "WebQTest-1027.P0", "AnnotatorId": 3, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jnlm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jnlm ns:sports.sports_team.arena_stadium ?x .\n?x ns:architecture.structure.opened ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n", "PotentialTopicEntityMention": "blackhawks", "TopicEntityName": "Chicago Blackhawks", "TopicEntityMid": "m.0jnlm", "InferentialChain": ["sports.sports_team.arena_stadium"], "Constraints": [], "Time": null, "Order": {"SortOrder": "Descending", "Start": 0, "Count": 1, "SourceNodeIndex": 0, "NodePredicate": "architecture.structure.opened", "ValueType": "DateTime"}, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02nshs", "EntityName": "United Center"}]}], "topic_entity": {"m.0jnlm": "Chicago Blackhawks"}, "qid_topic_entity": {"Q209636": "Chicago Blackhawks"}}, {"QuestionId": "WebQTest-709", "RawQuestion": "what did general robert e lee die from?", "ProcessedQuestion": "what did general robert e lee die from", "Parses": [{"ParseId": "WebQTest-709.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06f5j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06f5j ns:people.deceased_person.cause_of_death ?x .\n}\n", "PotentialTopicEntityMention": "robert e lee", "TopicEntityName": "Robert E. Lee", "TopicEntityMid": "m.06f5j", "InferentialChain": ["people.deceased_person.cause_of_death"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0dq9p", "EntityName": "Pneumonia"}]}], "topic_entity": {"m.06f5j": "Robert E. Lee"}, "qid_topic_entity": {"Q165557": "Robert E. Lee"}}, {"QuestionId": "WebQTest-1589", "RawQuestion": "where is the mts iceplex in winnipeg?", "ProcessedQuestion": "where is the mts iceplex in winnipeg", "Parses": [{"ParseId": "WebQTest-1589.P0", "AnnotatorId": 5, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Low", "FreeFormComment": "? cannot find address"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g5r_z_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g5r_z_ ns:location.location.containedby ?x .\n}\n", "PotentialTopicEntityMention": "mts iceplex", "TopicEntityName": "MTS Iceplex", "TopicEntityMid": "m.0g5r_z_", "InferentialChain": ["location.location.containedby"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.08mhny", "EntityName": "Rural Municipality of Headingley"}, {"AnswerType": "Entity", "AnswerArgument": "m.0pmq2", "EntityName": "Winnipeg"}]}], "topic_entity": {"m.0g5r_z_": "MTS Iceplex"}, "qid_topic_entity": {"UnknownQID": "MTS Iceplex"}}, {"QuestionId": "WebQTest-1118", "RawQuestion": "when did mark mcgwire retired?", "ProcessedQuestion": "when did mark mcgwire retired", "Parses": [{"ParseId": "WebQTest-1118.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0550x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0550x ns:baseball.baseball_player.lifetime_batting_statistics ?y .\n?y ns:baseball.lifetime_batting_statistics.ending_season ?x .\n}\n", "PotentialTopicEntityMention": "mark mcgwire", "TopicEntityName": "Mark McGwire", "TopicEntityMid": "m.0550x", "InferentialChain": ["baseball.baseball_player.lifetime_batting_statistics", "baseball.lifetime_batting_statistics.ending_season"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02h7sdf", "EntityName": "2001 Major League Baseball Season"}]}, {"ParseId": "WebQTest-1118.P1", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0550x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0550x ns:baseball.baseball_player.lifetime_batting_statistics ?y .\n?y ns:baseball.lifetime_batting_statistics.last_statistics_season ?x .\n}\n", "PotentialTopicEntityMention": "mark mcgwire", "TopicEntityName": "Mark McGwire", "TopicEntityMid": "m.0550x", "InferentialChain": ["baseball.baseball_player.lifetime_batting_statistics", "baseball.lifetime_batting_statistics.last_statistics_season"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02h7sdf", "EntityName": "2001 Major League Baseball Season"}]}], "topic_entity": {"m.0550x": "Mark McGwire"}, "qid_topic_entity": {"Q462481": "Mark McGwire"}}, {"QuestionId": "WebQTest-1843", "RawQuestion": "what did the blackfoot indians speak?", "ProcessedQuestion": "what did the blackfoot indians speak", "Parses": [{"ParseId": "WebQTest-1843.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.016f5d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.016f5d ns:people.ethnicity.languages_spoken ?x .\n}\n", "PotentialTopicEntityMention": "blackfoot", "TopicEntityName": "Blackfoot Confederacy", "TopicEntityMid": "m.016f5d", "InferentialChain": ["people.ethnicity.languages_spoken"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02h40lc", "EntityName": "English Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02hx790", "EntityName": "Blackfoot Language"}]}], "topic_entity": {"m.016f5d": "Blackfoot Confederacy"}, "qid_topic_entity": {"Q388264": "Blackfoot Confederacy"}}, {"QuestionId": "WebQTest-161", "RawQuestion": "what university did gordon brown attend?", "ProcessedQuestion": "what university did gordon brown attend", "Parses": [{"ParseId": "WebQTest-161.P0", "AnnotatorId": 5, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03f77)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03f77 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n", "PotentialTopicEntityMention": "gordon brown", "TopicEntityName": "Gordon Brown", "TopicEntityMid": "m.03f77", "InferentialChain": ["people.person.education", "education.education.institution"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.01y2hnl", "EntityName": "College/University", "SourceNodeIndex": 1, "NodePredicate": "common.topic.notable_types", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0h6rm", "EntityName": "University of Edinburgh"}]}], "topic_entity": {"m.03f77": "Gordon Brown"}, "qid_topic_entity": {"Q10648": "Gordon Brown"}}, {"QuestionId": "WebQTest-1220", "RawQuestion": "what has shannen doherty played in?", "ProcessedQuestion": "what has shannen doherty played in", "Parses": [{"ParseId": "WebQTest-1220.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.039crh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.039crh ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n", "PotentialTopicEntityMention": "shannen doherty", "TopicEntityName": "Shannen Doherty", "TopicEntityMid": "m.039crh", "InferentialChain": ["film.actor.film", "film.performance.film"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "g.12214l9tm", "EntityName": "Another Day"}, {"AnswerType": "Entity", "AnswerArgument": "m.01jc1h", "EntityName": "Mallrats"}, {"AnswerType": "Entity", "AnswerArgument": "m.02mh4b", "EntityName": "Night Shift"}, {"AnswerType": "Entity", "AnswerArgument": "m.02pynz", "EntityName": "The Secret of NIMH"}, {"AnswerType": "Entity", "AnswerArgument": "m.02vl04p", "EntityName": "Gone in the Night"}, {"AnswerType": "Entity", "AnswerArgument": "m.02vykg0", "EntityName": "Christmas Caper"}, {"AnswerType": "Entity", "AnswerArgument": "m.03h5yly", "EntityName": "Friends 'Til the End"}, {"AnswerType": "Entity", "AnswerArgument": "m.03m3j", "EntityName": "Heathers"}, {"AnswerType": "Entity", "AnswerArgument": "m.0408ch5", "EntityName": "Satan's School for Girls"}, {"AnswerType": "Entity", "AnswerArgument": "m.04j2ff5", "EntityName": "The Rendering"}, {"AnswerType": "Entity", "AnswerArgument": "m.04j2rgh", "EntityName": "Striking Poses"}, {"AnswerType": "Entity", "AnswerArgument": "m.04jvls", "EntityName": "Nowhere"}, {"AnswerType": "Entity", "AnswerArgument": "m.04q0k5p", "EntityName": "Obsessed"}, {"AnswerType": "Entity", "AnswerArgument": "m.04q1w97", "EntityName": "Blindfold: Acts of Obsession"}, {"AnswerType": "Entity", "AnswerArgument": "m.04q37f6", "EntityName": "Freeze Frame"}, {"AnswerType": "Entity", "AnswerArgument": "m.04q3m0j", "EntityName": "Nightlight"}, {"AnswerType": "Entity", "AnswerArgument": "m.04q7c_s", "EntityName": "The Other Lover"}, {"AnswerType": "Entity", "AnswerArgument": "m.04q8bmc", "EntityName": "Jailbreakers"}, {"AnswerType": "Entity", "AnswerArgument": "m.04q8njq", "EntityName": "Hell on Heels: The Battle of Mary Kay"}, {"AnswerType": "Entity", "AnswerArgument": "m.04q9znk", "EntityName": "Sleeping with the Devil"}, {"AnswerType": "Entity", "AnswerArgument": "m.04y6khs", "EntityName": "A Burning Passion: The Margaret Mitchell Story"}, {"AnswerType": "Entity", "AnswerArgument": "m.04ycptv", "EntityName": "Burning Palms"}, {"AnswerType": "Entity", "AnswerArgument": "m.04yhc6q", "EntityName": "The Lost Treasure of the Grand Canyon"}, {"AnswerType": "Entity", "AnswerArgument": "m.05dkr3l", "EntityName": "Bless All the Dear Children"}, {"AnswerType": "Entity", "AnswerArgument": "m.06r7r1", "EntityName": "Girls Just Want to Have Fun"}, {"AnswerType": "Entity", "AnswerArgument": "m.08rczt", "EntityName": "Category 7: The End of the World"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bhccky", "EntityName": "The Delphi Effect"}, {"AnswerType": "Entity", "AnswerArgument": "m.0crttzw", "EntityName": "Growing the Big One"}, {"AnswerType": "Entity", "AnswerArgument": "m.0dg3g14", "EntityName": "Almost Dead"}, {"AnswerType": "Entity", "AnswerArgument": "m.0gks9h_", "EntityName": "The Ticket"}, {"AnswerType": "Entity", "AnswerArgument": "m.0prrm", "EntityName": "Jay and Silent Bob Strike Back"}, {"AnswerType": "Entity", "AnswerArgument": "m.0v1zdx4", "EntityName": "Bukowski"}, {"AnswerType": "Entity", "AnswerArgument": "m.0w66b4r", "EntityName": "Witchslayer Gretl"}]}], "topic_entity": {"m.039crh": "Shannen Doherty"}, "qid_topic_entity": {"Q207598": "Shannen Doherty"}}, {"QuestionId": "WebQTest-1191", "RawQuestion": "what language do people speak in the bahamas?", "ProcessedQuestion": "what language do people speak in the bahamas", "Parses": [{"ParseId": "WebQTest-1191.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0160w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0160w ns:location.country.languages_spoken ?x .\n}\n", "PotentialTopicEntityMention": "bahamas", "TopicEntityName": "Bahamas", "TopicEntityMid": "m.0160w", "InferentialChain": ["location.country.languages_spoken"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.026qjbs", "EntityName": "Bahamas Creole English Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02h40lc", "EntityName": "English Language"}]}, {"ParseId": "WebQTest-1191.P1", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0160w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0160w ns:location.country.official_language ?x .\n}\n", "PotentialTopicEntityMention": "bahamas", "TopicEntityName": "Bahamas", "TopicEntityMid": "m.0160w", "InferentialChain": ["location.country.official_language"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02h40lc", "EntityName": "English Language"}]}], "topic_entity": {"m.0160w": "Bahamas"}, "qid_topic_entity": {"Q778": "Bahamas"}}, {"QuestionId": "WebQTest-534", "RawQuestion": "what is the milwaukee brewers mascot?", "ProcessedQuestion": "what is the milwaukee brewers mascot", "Parses": [{"ParseId": "WebQTest-534.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.051vz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.051vz ns:sports.sports_team.team_mascot ?x .\n}\n", "PotentialTopicEntityMention": "milwaukee brewers", "TopicEntityName": "Milwaukee Brewers", "TopicEntityMid": "m.051vz", "InferentialChain": ["sports.sports_team.team_mascot"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0100sszz", "EntityName": "Hank"}, {"AnswerType": "Entity", "AnswerArgument": "m.049kl_", "EntityName": "Bernie Brewer"}, {"AnswerType": "Entity", "AnswerArgument": "m.0blvgb", "EntityName": "Bonnie Brewer"}]}], "topic_entity": {"m.051vz": "Milwaukee Brewers"}, "qid_topic_entity": {"Q848103": "Milwaukee Brewers"}}, {"QuestionId": "WebQTest-95", "RawQuestion": "what was the title of the book charles darwin wrote?", "ProcessedQuestion": "what was the title of the book charles darwin wrote", "Parses": [{"ParseId": "WebQTest-95.P0", "AnnotatorId": 1, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01lwx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01lwx ns:book.author.works_written ?x .\n}\n", "PotentialTopicEntityMention": "charles darwin", "TopicEntityName": "Charles Darwin", "TopicEntityMid": "m.01lwx", "InferentialChain": ["book.author.works_written"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.010rjsvs", "EntityName": "Charles Darwin's zoology notes & specimen lists from H.M.S. Beagle"}, {"AnswerType": "Entity", "AnswerArgument": "m.010sfr1g", "EntityName": "Charles Darwin's letters"}, {"AnswerType": "Entity", "AnswerArgument": "m.01qq45", "EntityName": "The Voyage of the Beagle"}, {"AnswerType": "Entity", "AnswerArgument": "m.02l2z6", "EntityName": "The Descent of Man, and Selection in Relation to Sex"}, {"AnswerType": "Entity", "AnswerArgument": "m.02pzzmw", "EntityName": "The zoology of the voyage of H.M.S. Beagle during the years 1832-1836"}, {"AnswerType": "Entity", "AnswerArgument": "m.03d86kx", "EntityName": "The Effects of Cross and Self Fertilisation in the Vegetable Kingdom"}, {"AnswerType": "Entity", "AnswerArgument": "m.04t39p_", "EntityName": "On evolution"}, {"AnswerType": "Entity", "AnswerArgument": "m.04t39qh", "EntityName": "A student's introduction to Charles Darwin"}, {"AnswerType": "Entity", "AnswerArgument": "m.04t39qr", "EntityName": "The Structure and Distribution of Coral Reefs"}, {"AnswerType": "Entity", "AnswerArgument": "m.04t39r_", "EntityName": "On Natural Selection"}, {"AnswerType": "Entity", "AnswerArgument": "m.04t39rr", "EntityName": "From so simple a beginning"}, {"AnswerType": "Entity", "AnswerArgument": "m.04t39s7", "EntityName": "Charles Darwin's natural selection"}, {"AnswerType": "Entity", "AnswerArgument": "m.05bktj1", "EntityName": "The Different Forms of Flowers on Plants of the Same Species"}, {"AnswerType": "Entity", "AnswerArgument": "m.05bpwfw", "EntityName": "South American Geology"}, {"AnswerType": "Entity", "AnswerArgument": "m.05bpwqc", "EntityName": "The Life and Letters of Charles Darwin Volume 1"}, {"AnswerType": "Entity", "AnswerArgument": "m.05bpwrk", "EntityName": "The Life and Letters of Charles Darwin Volume 2"}, {"AnswerType": "Entity", "AnswerArgument": "m.05bpx28", "EntityName": "The Essential Darwin"}, {"AnswerType": "Entity", "AnswerArgument": "m.05bpx3p", "EntityName": "Evolutionary Writings: Including the Autobiographies"}, {"AnswerType": "Entity", "AnswerArgument": "m.05f3_5v", "EntityName": "Fertilisation of Orchids"}, {"AnswerType": "Entity", "AnswerArgument": "m.05f3187", "EntityName": "The Formation of Vegetable Mould through the Action of Worms"}, {"AnswerType": "Entity", "AnswerArgument": "m.05kdgws", "EntityName": "The Darwin Reader First Edition"}, {"AnswerType": "Entity", "AnswerArgument": "m.05kdgx0", "EntityName": "The Darwin Reader Second Edition"}, {"AnswerType": "Entity", "AnswerArgument": "m.05nhwt", "EntityName": "The Autobiography of Charles Darwin"}, {"AnswerType": "Entity", "AnswerArgument": "m.05pskf", "EntityName": "The Expression of the Emotions in Man and Animals"}, {"AnswerType": "Entity", "AnswerArgument": "m.062rrx", "EntityName": "Darwin from Insectivorous Plants to Worms"}, {"AnswerType": "Entity", "AnswerArgument": "m.067jgzq", "EntityName": "The principal works"}, {"AnswerType": "Entity", "AnswerArgument": "m.067q6ks", "EntityName": "ontstaan der soorten door natuurlijke teeltkeus"}, {"AnswerType": "Entity", "AnswerArgument": "m.0682dh_", "EntityName": "More Letters of Charles Darwin"}, {"AnswerType": "Entity", "AnswerArgument": "m.0685fg8", "EntityName": "Der Ausdruck der Gem\u00fcthsbewegungen bei dem Menschen und den Thieren"}, {"AnswerType": "Entity", "AnswerArgument": "m.068kgmb", "EntityName": "Wu zhong qi yuan"}, {"AnswerType": "Entity", "AnswerArgument": "m.068zv2w", "EntityName": "The collected papers of Charles Darwin"}, {"AnswerType": "Entity", "AnswerArgument": "m.0698p22", "EntityName": "Reise eines Naturforschers um die Welt"}, {"AnswerType": "Entity", "AnswerArgument": "m.069gx8t", "EntityName": "Rejse om jorden"}, {"AnswerType": "Entity", "AnswerArgument": "m.069j1zn", "EntityName": "Das Variiren der Thiere und Pflanzen im Zustande der Domestication"}, {"AnswerType": "Entity", "AnswerArgument": "m.069mjtn", "EntityName": "Leben und Briefe von Charles Darwin"}, {"AnswerType": "Entity", "AnswerArgument": "m.06bk806", "EntityName": "La facult\u00e9 motrice dans les plantes"}, {"AnswerType": "Entity", "AnswerArgument": "m.06by4cp", "EntityName": "Darwin for Today"}, {"AnswerType": "Entity", "AnswerArgument": "m.06c2mtr", "EntityName": "Die Bewegungen und Lebensweise der kletternden Pflanzen"}, {"AnswerType": "Entity", "AnswerArgument": "m.06c6q4x", "EntityName": "red notebook of Charles Darwin"}, {"AnswerType": "Entity", "AnswerArgument": "m.06c9lwy", "EntityName": "Darwin en Patagonia"}, {"AnswerType": "Entity", "AnswerArgument": "m.06cbh6d", "EntityName": "Die geschlechtliche Zuchtwahl"}, {"AnswerType": "Entity", "AnswerArgument": "m.06cjxqf", "EntityName": "Het uitdrukken van emoties bij mens en dier"}, {"AnswerType": "Entity", "AnswerArgument": "m.06cnkd2", "EntityName": "vari\u00eberen der huisdieren en cultuurplanten"}, {"AnswerType": "Entity", "AnswerArgument": "m.06cvnt5", "EntityName": "To the members of the Down Friendly Club"}, {"AnswerType": "Entity", "AnswerArgument": "m.06czk9t", "EntityName": "Letters from C. Darwin, Esq., to A. Hancock, Esq"}, {"AnswerType": "Entity", "AnswerArgument": "m.06dgzf9", "EntityName": "Cartas de Darwin 18251859"}, {"AnswerType": "Entity", "AnswerArgument": "m.06dhg29", "EntityName": "Darwin and Henslow"}, {"AnswerType": "Entity", "AnswerArgument": "m.06dhg2k", "EntityName": "Darwin's notebooks on transmutation of species"}, {"AnswerType": "Entity", "AnswerArgument": "m.06dp_0n", "EntityName": "El Origin De Las Especies"}, {"AnswerType": "Entity", "AnswerArgument": "m.06dplrp", "EntityName": "A Darwin Selection"}, {"AnswerType": "Entity", "AnswerArgument": "m.06dv5j2", "EntityName": "Vospominanii\ufe20a\ufe21 o razvitii moego uma i kharaktera"}, {"AnswerType": "Entity", "AnswerArgument": "m.06f6v8g", "EntityName": "Voyage d'un naturaliste autour du monde"}, {"AnswerType": "Entity", "AnswerArgument": "m.06fdzsg", "EntityName": "The\u0301orie de l'e\u0301volution"}, {"AnswerType": "Entity", "AnswerArgument": "m.06fkngp", "EntityName": "Notebooks on transmutation of species"}, {"AnswerType": "Entity", "AnswerArgument": "m.06fp6__", "EntityName": "Darwin on humus and the earthworm"}, {"AnswerType": "Entity", "AnswerArgument": "m.06fz4ys", "EntityName": "Opsht\u0323amung fun menshen"}, {"AnswerType": "Entity", "AnswerArgument": "m.06g77fm", "EntityName": "\u00dcber den Bau und die Verbreitung der Corallen-Riffe"}, {"AnswerType": "Entity", "AnswerArgument": "m.06ggf11", "EntityName": "Darwin Compendium"}, {"AnswerType": "Entity", "AnswerArgument": "m.06gx9nb", "EntityName": "The geology of the voyage of H.M.S. Beagle"}, {"AnswerType": "Entity", "AnswerArgument": "m.06gxb0v", "EntityName": "Gesammelte kleinere Schriften"}, {"AnswerType": "Entity", "AnswerArgument": "m.06h4s28", "EntityName": "The portable Darwin"}, {"AnswerType": "Entity", "AnswerArgument": "m.06h96f4", "EntityName": "H.M.S. Beagle in South America"}, {"AnswerType": "Entity", "AnswerArgument": "m.06hggft", "EntityName": "Diario del Viaje de Un Naturalista Alrededor"}, {"AnswerType": "Entity", "AnswerArgument": "m.06hks6x", "EntityName": "Reise um die Welt 1831 - 36"}, {"AnswerType": "Entity", "AnswerArgument": "m.06hv624", "EntityName": "Viaje de Un Naturalista Alrededor del Mundo 2 Vol"}, {"AnswerType": "Entity", "AnswerArgument": "m.06hxnc2", "EntityName": "Die fundamente zur entstehung der arten"}, {"AnswerType": "Entity", "AnswerArgument": "m.06hz4px", "EntityName": "Metaphysics, Materialism, & the evolution of mind"}, {"AnswerType": "Entity", "AnswerArgument": "m.06j18wj", "EntityName": "\u00dcber die Wege der Hummel-M\u00e4nnchen"}, {"AnswerType": "Entity", "AnswerArgument": "m.06j8lmr", "EntityName": "The education of Darwin"}, {"AnswerType": "Entity", "AnswerArgument": "m.06jbq8m", "EntityName": "monograph on the sub-class Cirripedia"}, {"AnswerType": "Entity", "AnswerArgument": "m.06jc2s7", "EntityName": "The Orgin of Species"}, {"AnswerType": "Entity", "AnswerArgument": "m.06jcl9b", "EntityName": "Questions about the breeding of animals"}, {"AnswerType": "Entity", "AnswerArgument": "m.06jj8zx", "EntityName": "Kleinere geologische Abhandlungen"}, {"AnswerType": "Entity", "AnswerArgument": "m.06jw00r", "EntityName": "Darwin Darwin"}, {"AnswerType": "Entity", "AnswerArgument": "m.06jygl6", "EntityName": "Les mouvements et les habitudes des plantes grimpantes"}, {"AnswerType": "Entity", "AnswerArgument": "m.06k4hmf", "EntityName": "Les r\u00e9cifs de corail, leur structure et leur distribution"}, {"AnswerType": "Entity", "AnswerArgument": "m.06k7t44", "EntityName": "Die Entstehung der Arten durch nat\u00fcrliche Zuchtwahl"}, {"AnswerType": "Entity", "AnswerArgument": "m.06km_gd", "EntityName": "Del Plata a Tierra del Fuego"}, {"AnswerType": "Entity", "AnswerArgument": "m.06kmynd", "EntityName": "Darwinism stated by Darwin himself"}, {"AnswerType": "Entity", "AnswerArgument": "m.06l7w7c", "EntityName": "Human nature, Darwin's view"}, {"AnswerType": "Entity", "AnswerArgument": "m.06lcpyv", "EntityName": "The action of carbonate of ammonia on the roots of certain plants"}, {"AnswerType": "Entity", "AnswerArgument": "m.06m68vy", "EntityName": "Darwin-Wallace"}, {"AnswerType": "Entity", "AnswerArgument": "m.06mc3j5", "EntityName": "Die Wirkungen der Kreuz- und Selbst-Befruchtung im Pflanzenreich"}, {"AnswerType": "Entity", "AnswerArgument": "m.06mmypb", "EntityName": "From Darwin's unpublished notebooks"}, {"AnswerType": "Entity", "AnswerArgument": "m.06msmgd", "EntityName": "Beagle letters"}, {"AnswerType": "Entity", "AnswerArgument": "m.06mwj8z", "EntityName": "The living thoughts of Darwin"}, {"AnswerType": "Entity", "AnswerArgument": "m.06mx6qb", "EntityName": "Notes on the fertilization of orchids"}, {"AnswerType": "Entity", "AnswerArgument": "m.06n4jwv", "EntityName": "Volcanic Islands"}, {"AnswerType": "Entity", "AnswerArgument": "m.06n65g8", "EntityName": "Darwin's journal"}, {"AnswerType": "Entity", "AnswerArgument": "m.06n8gzr", "EntityName": "Memorias y epistolario i\u0301ntimo"}, {"AnswerType": "Entity", "AnswerArgument": "m.06n8zlx", "EntityName": "On the tendency of species to form varieties"}, {"AnswerType": "Entity", "AnswerArgument": "m.06ndlh7", "EntityName": "Darwin's Ornithological notes"}, {"AnswerType": "Entity", "AnswerArgument": "m.06nhv9s", "EntityName": "Proiskhozhdenie vidov"}, {"AnswerType": "Entity", "AnswerArgument": "m.06nxw56", "EntityName": "The Power of Movement in Plants"}, {"AnswerType": "Entity", "AnswerArgument": "m.06p4t1s", "EntityName": "Seul celui qui change reste fid\u00e8le \u00e0 lui-m\u00eame"}, {"AnswerType": "Entity", "AnswerArgument": "m.06pw5vt", "EntityName": "Les moyens d'expression chez les animaux"}, {"AnswerType": "Entity", "AnswerArgument": "m.06px17_", "EntityName": "Part I: Contributions to the Theory of Natural Selection / Part II"}, {"AnswerType": "Entity", "AnswerArgument": "m.06q9dnn", "EntityName": "Resa kring jorden"}, {"AnswerType": "Entity", "AnswerArgument": "m.06qr9xq", "EntityName": "Tesakneri tsagume\u030c"}, {"AnswerType": "Entity", "AnswerArgument": "m.06qs0k_", "EntityName": "La vie et la correspondance de Charles Darwin"}, {"AnswerType": "Entity", "AnswerArgument": "m.06qxf6m", "EntityName": "Evolution by natural selection"}, {"AnswerType": "Entity", "AnswerArgument": "m.06r08pz", "EntityName": "Motsa ha-minim"}, {"AnswerType": "Entity", "AnswerArgument": "m.06r9mwf", "EntityName": "La descendance de l'homme et la s\u00a9\u00d8election sexuelle"}, {"AnswerType": "Entity", "AnswerArgument": "m.06rg6nf", "EntityName": "Un m\u00e9moire in\u00e9dit de Charles Darwin sur l'instinct"}, {"AnswerType": "Entity", "AnswerArgument": "m.06sh5th", "EntityName": "Die verschiedenen Bl\u00fctenformen an Pflanzen der n\u00e4mlichen Art"}, {"AnswerType": "Entity", "AnswerArgument": "m.06syjt2", "EntityName": "Darwin's insects"}, {"AnswerType": "Entity", "AnswerArgument": "m.06tjzfj", "EntityName": "Diary of the voyage of H.M.S. Beagle"}, {"AnswerType": "Entity", "AnswerArgument": "m.06tz8bh", "EntityName": "genese\u014ds t\u014dn eid\u014dn"}, {"AnswerType": "Entity", "AnswerArgument": "m.07kbf6f", "EntityName": "Insectivorous Plants"}, {"AnswerType": "Entity", "AnswerArgument": "m.07kd9wf", "EntityName": "The Variation of Animals and Plants under Domestication"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bhjdm2", "EntityName": "Charles Darwin, 1809-1882--Anton Dohrn, 1840-1909"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bhjdm8", "EntityName": "On a remarkable bar of sandstone off Pernambuco"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bhjdmk", "EntityName": "The voyage of Charles Darwin"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bhjdmn", "EntityName": "Works"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bqqynz", "EntityName": "Geological observations on the volcanic islands and parts of South America visited during the voyage of H.M.S. 'Beagle"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bqqyp6", "EntityName": "Journal of researches into the natural history and geology of the countries visited during the voyage round the world of the H. M. S. 'Beagle' under the command of Captain Fitz Roy, R. N"}, {"AnswerType": "Entity", "AnswerArgument": "m.0c1t1lr", "EntityName": "Charles Darwin"}, {"AnswerType": "Entity", "AnswerArgument": "m.0c1t1ly", "EntityName": "Charles Darwin on the routes of male humble bees"}, {"AnswerType": "Entity", "AnswerArgument": "m.0c1t1m3", "EntityName": "Charles Darwin's marginalia"}, {"AnswerType": "Entity", "AnswerArgument": "m.0c1t1m6", "EntityName": "Darwin"}, {"AnswerType": "Entity", "AnswerArgument": "m.0c1t1mh", "EntityName": "Evolution"}, {"AnswerType": "Entity", "AnswerArgument": "m.0c1t1ml", "EntityName": "Evolution and natural selection"}, {"AnswerType": "Entity", "AnswerArgument": "m.0c1t1ms", "EntityName": "The foundations of the Origin of species"}, {"AnswerType": "Entity", "AnswerArgument": "m.0c1t1mz", "EntityName": "Monographs of the fossil Lepadidae and the fossil Balanidae"}, {"AnswerType": "Entity", "AnswerArgument": "m.0c1t1n1", "EntityName": "On the origin of species by means of natural selection"}, {"AnswerType": "Entity", "AnswerArgument": "m.0c1t1nb", "EntityName": "Origins"}, {"AnswerType": "Entity", "AnswerArgument": "m.0cc54s", "EntityName": "The Life of Erasmus Darwin"}, {"AnswerType": "Entity", "AnswerArgument": "m.0d_3d1b", "EntityName": "The Correspondence of Charles Darwin, Volume 1: 1821-1836"}, {"AnswerType": "Entity", "AnswerArgument": "m.0d_472q", "EntityName": "The Correspondence of Charles Darwin, Volume 2: 1837-1843"}, {"AnswerType": "Entity", "AnswerArgument": "m.0f0bz0f", "EntityName": "The Correspondence of Charles Darwin, Volume 3: 1844-1846"}, {"AnswerType": "Entity", "AnswerArgument": "m.0f0c_dr", "EntityName": "The Correspondence of Charles Darwin, Volume 8: 1860"}, {"AnswerType": "Entity", "AnswerArgument": "m.0f0c2xv", "EntityName": "The Correspondence of Charles Darwin, Volume 4: 1847-1850"}, {"AnswerType": "Entity", "AnswerArgument": "m.0f0c7c3", "EntityName": "The Correspondence of Charles Darwin, Volume 5: 1851-1855"}, {"AnswerType": "Entity", "AnswerArgument": "m.0f0ccfx", "EntityName": "The Correspondence of Charles Darwin, Volume 6: 1856-1857"}, {"AnswerType": "Entity", "AnswerArgument": "m.0f0cnxy", "EntityName": "The Correspondence of Charles Darwin, Volume 7: 1858-1859"}, {"AnswerType": "Entity", "AnswerArgument": "m.0f0dh7c", "EntityName": "The Correspondence of Charles Darwin, Volume 9: 1861"}, {"AnswerType": "Entity", "AnswerArgument": "m.0f0dvyt", "EntityName": "The Correspondence of Charles Darwin, Volume 10: 1862"}, {"AnswerType": "Entity", "AnswerArgument": "m.0f0fhpx", "EntityName": "The Correspondence of Charles Darwin, Volume 11: 1863"}, {"AnswerType": "Entity", "AnswerArgument": "m.0f0fsbb", "EntityName": "The Correspondence of Charles Darwin, Volume 12: 1864"}, {"AnswerType": "Entity", "AnswerArgument": "m.0f0g5py", "EntityName": "The Correspondence of Charles Darwin, Volume 13: 1865"}, {"AnswerType": "Entity", "AnswerArgument": "m.0f0gnbh", "EntityName": "The Correspondence of Charles Darwin, Volume 14: 1866"}, {"AnswerType": "Entity", "AnswerArgument": "m.0f0hdk1", "EntityName": "The Correspondence of Charles Darwin, Volume 15: 1867"}, {"AnswerType": "Entity", "AnswerArgument": "m.0f0jl1d", "EntityName": "The Correspondence of Charles Darwin, Volume 18: 1870"}, {"AnswerType": "Entity", "AnswerArgument": "m.0f0jl1p", "EntityName": "The Correspondence of Charles Darwin, Volume 17: 1869"}, {"AnswerType": "Entity", "AnswerArgument": "m.0f0jl1z", "EntityName": "The Correspondence of Charles Darwin, Volume 16: 1868"}, {"AnswerType": "Entity", "AnswerArgument": "m.0hhv3fy", "EntityName": "On the Movements and Habits of Climbing Plants"}, {"AnswerType": "Entity", "AnswerArgument": "m.0kfq8k8", "EntityName": "Geological Observations on the Volcanic Islands"}, {"AnswerType": "Entity", "AnswerArgument": "m.0kfsvj7", "EntityName": "Geological Observations on South America"}, {"AnswerType": "Entity", "AnswerArgument": "m.0y4rxbs", "EntityName": "A Monograph on the Fossil Balanid\u00e6 and Verrucid\u00e6 of Great Britain"}, {"AnswerType": "Entity", "AnswerArgument": "m.0y4rydg", "EntityName": "A Monograph of the Sub-class Cirripedia, with Figures of all the Species. The Balanidae (or Sessile Cirripedes); the Verrucidae, etc."}, {"AnswerType": "Entity", "AnswerArgument": "m.0y4ryn4", "EntityName": "A Monograph on the Fossil Lepadidae, or, Pedunculated Cirripedes of Great Britain"}, {"AnswerType": "Entity", "AnswerArgument": "m.0y4ryvd", "EntityName": "A Monograph of the Sub-class Cirripedia, with Figures of all the Species. The Lepadidae; or, Pedunculated Cirripedes."}, {"AnswerType": "Entity", "AnswerArgument": "m.0y4rzcc", "EntityName": "Geology from A Manual of scientific enquiry; prepared for the use of Her Majesty's Navy: and adapted for travellers in general"}]}], "topic_entity": {"m.01lwx": "Charles Darwin"}, "qid_topic_entity": {"Q1035": "Charles Darwin"}}, {"QuestionId": "WebQTest-1996", "RawQuestion": "who played maggie in himym?", "ProcessedQuestion": "who played maggie in himym", "Parses": [{"ParseId": "WebQTest-1996.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h67q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h67q ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n}\n", "PotentialTopicEntityMention": "maggie", "TopicEntityName": "Maggie Simpson", "TopicEntityMid": "m.0h67q", "InferentialChain": ["film.film_character.portrayed_in_films", "film.performance.actor"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0sw62", "EntityName": "Nancy Cartwright"}]}], "topic_entity": {"m.0h67q": "Maggie Simpson"}, "qid_topic_entity": {"Q7834": "Maggie Simpson"}}, {"QuestionId": "WebQTest-240", "RawQuestion": "what colleges did albert einstein teach at?", "ProcessedQuestion": "what colleges did albert einstein teach at", "Parses": [{"ParseId": "WebQTest-240.P0", "AnnotatorId": 5, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Low", "FreeFormComment": "? employeed by university doe not necessarily mean teaching"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jcx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jcx ns:people.person.employment_history ?y .\n?y ns:business.employment_tenure.company ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n", "PotentialTopicEntityMention": "albert einstein", "TopicEntityName": "Albert Einstein", "TopicEntityMid": "m.0jcx", "InferentialChain": ["people.person.employment_history", "business.employment_tenure.company"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.01y2hnl", "EntityName": "College/University", "SourceNodeIndex": 1, "NodePredicate": "common.topic.notable_types", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0194_r", "EntityName": "Institute for Advanced Study"}, {"AnswerType": "Entity", "AnswerArgument": "m.01dyk8", "EntityName": "ETH Zurich"}, {"AnswerType": "Entity", "AnswerArgument": "m.01tpvt", "EntityName": "University of Zurich"}, {"AnswerType": "Entity", "AnswerArgument": "m.09hgk", "EntityName": "Charles University in Prague"}, {"AnswerType": "Entity", "AnswerArgument": "m.0lvng", "EntityName": "Leiden University"}]}], "topic_entity": {"m.0jcx": "Albert Einstein"}, "qid_topic_entity": {"Q937": "Albert Einstein"}}, {"QuestionId": "WebQTest-929", "RawQuestion": "who founded the kkk?", "ProcessedQuestion": "who founded the kkk", "Parses": [{"ParseId": "WebQTest-929.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.048qr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.048qr ns:organization.organization.founders ?x .\n}\n", "PotentialTopicEntityMention": "kkk", "TopicEntityName": "Ku Klux Klan", "TopicEntityMid": "m.048qr", "InferentialChain": ["organization.organization.founders"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0wl1pl9", "EntityName": "John C. Lester"}, {"AnswerType": "Entity", "AnswerArgument": "m.0wl1ptw", "EntityName": "John B. Kennedy"}, {"AnswerType": "Entity", "AnswerArgument": "m.0wl1py6", "EntityName": "James R. Crowe"}, {"AnswerType": "Entity", "AnswerArgument": "m.0wl1pzb", "EntityName": "Frank O. McCord"}, {"AnswerType": "Entity", "AnswerArgument": "m.0wl1q51", "EntityName": "Richard R. Reed"}, {"AnswerType": "Entity", "AnswerArgument": "m.0wl1q81", "EntityName": "J. Calvin Jones"}]}], "topic_entity": {"m.048qr": "Ku Klux Klan"}, "qid_topic_entity": {"Q47131": "Ku Klux Klan"}}, {"QuestionId": "WebQTest-1336", "RawQuestion": "what is utah's state capitol?", "ProcessedQuestion": "what is utah 's state capitol", "Parses": [{"ParseId": "WebQTest-1336.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09b86q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09b86q ns:location.location.street_address ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n", "PotentialTopicEntityMention": "state capitol", "TopicEntityName": "Utah State Capitol", "TopicEntityMid": "m.09b86q", "InferentialChain": ["location.location.street_address", "location.mailing_address.citytown"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0f2r6", "EntityName": "Salt Lake City"}]}, {"ParseId": "WebQTest-1336.P1", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07srw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07srw ns:base.aareas.schema.administrative_area.capital ?x .\n}\n", "PotentialTopicEntityMention": "utah", "TopicEntityName": "Utah", "TopicEntityMid": "m.07srw", "InferentialChain": ["base.aareas.schema.administrative_area.capital"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0f2r6", "EntityName": "Salt Lake City"}]}, {"ParseId": "WebQTest-1336.P2", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07srw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07srw ns:location.administrative_division.capital ?y .\n?y ns:location.administrative_division_capital_relationship.capital ?x .\n}\n", "PotentialTopicEntityMention": "utah", "TopicEntityName": "Utah", "TopicEntityMid": "m.07srw", "InferentialChain": ["location.administrative_division.capital", "location.administrative_division_capital_relationship.capital"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0f2r6", "EntityName": "Salt Lake City"}]}, {"ParseId": "WebQTest-1336.P3", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07srw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07srw ns:location.us_state.capital ?x .\n}\n", "PotentialTopicEntityMention": "utah", "TopicEntityName": "Utah", "TopicEntityMid": "m.07srw", "InferentialChain": ["location.us_state.capital"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0f2r6", "EntityName": "Salt Lake City"}]}], "topic_entity": {"m.09b86q": "Utah State Capitol", "m.07srw": "Utah"}, "qid_topic_entity": {"Q2627661": "Utah State Capitol", "Q829": "Utah"}}, {"QuestionId": "WebQTest-1285", "RawQuestion": "what city is mt lassen in?", "ProcessedQuestion": "what city is mt lassen in", "Parses": [{"ParseId": "WebQTest-1285.P0", "AnnotatorId": 4, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Low", "FreeFormComment": "? There is no city that this mountain is contained by. Only county."}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ymq1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ymq1 ns:location.location.containedby ?x .\n}\n", "PotentialTopicEntityMention": "mt lassen", "TopicEntityName": "Lassen Peak", "TopicEntityMid": "m.01ymq1", "InferentialChain": ["location.location.containedby"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01n7q", "EntityName": "California"}, {"AnswerType": "Entity", "AnswerArgument": "m.01ymnm", "EntityName": "Lassen Volcanic National Park"}, {"AnswerType": "Entity", "AnswerArgument": "m.059g4", "EntityName": "North America"}, {"AnswerType": "Entity", "AnswerArgument": "m.09c7w0", "EntityName": "United States of America"}, {"AnswerType": "Entity", "AnswerArgument": "m.0k3nk", "EntityName": "Cascade Range"}, {"AnswerType": "Entity", "AnswerArgument": "m.0l30v", "EntityName": "Shasta County"}]}], "topic_entity": {"m.01ymq1": "Lassen Peak"}, "qid_topic_entity": {"Q859354": "Lassen Peak"}}, {"QuestionId": "WebQTest-850", "RawQuestion": "what did vera ellen die from?", "ProcessedQuestion": "what did vera ellen die from", "Parses": [{"ParseId": "WebQTest-850.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.022sm6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.022sm6 ns:people.deceased_person.cause_of_death ?x .\n}\n", "PotentialTopicEntityMention": "vera ellen", "TopicEntityName": "Vera-Ellen", "TopicEntityMid": "m.022sm6", "InferentialChain": ["people.deceased_person.cause_of_death"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0qcr0", "EntityName": "Cancer"}]}], "topic_entity": {"m.022sm6": "Vera-Ellen"}, "qid_topic_entity": {"Q253934": "Vera-Ellen"}}, {"QuestionId": "WebQTest-953", "RawQuestion": "where is kansas city?", "ProcessedQuestion": "where is kansas city", "Parses": [{"ParseId": "WebQTest-953.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04f_d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04f_d ns:location.hud_county_place.county ?x .\n}\n", "PotentialTopicEntityMention": "kansas city", "TopicEntityName": "Kansas City", "TopicEntityMid": "m.04f_d", "InferentialChain": ["location.hud_county_place.county"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0ndpz", "EntityName": "Platte County"}]}], "topic_entity": {"m.04f_d": "Kansas City"}, "qid_topic_entity": {"Q41819": "Kansas City"}}, {"QuestionId": "WebQTest-530", "RawQuestion": "where does robert irvine come from?", "ProcessedQuestion": "where does robert irvine come from", "Parses": [{"ParseId": "WebQTest-530.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0272y2y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0272y2y ns:people.person.place_of_birth ?x .\n}\n", "PotentialTopicEntityMention": "robert irvine", "TopicEntityName": "Robert Irvine", "TopicEntityMid": "m.0272y2y", "InferentialChain": ["people.person.place_of_birth"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0jgvy", "EntityName": "Salisbury"}]}], "topic_entity": {"m.0272y2y": "Robert Irvine"}, "qid_topic_entity": {"Q13603754": "Robert Irvine"}}, {"QuestionId": "WebQTest-176", "RawQuestion": "who is emma stone father?", "ProcessedQuestion": "who is emma stone father", "Parses": [{"ParseId": "WebQTest-176.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09yhzs)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09yhzs ns:people.person.parents ?x .\n?x ns:people.person.gender ns:m.05zppz .\n}\n", "PotentialTopicEntityMention": "emma stone", "TopicEntityName": "Emma Stone", "TopicEntityMid": "m.09yhzs", "InferentialChain": ["people.person.parents"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.05zppz", "EntityName": "Male", "SourceNodeIndex": 0, "NodePredicate": "people.person.gender", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0gx3qys", "EntityName": "Jeff Stone"}]}], "topic_entity": {"m.09yhzs": "Emma Stone"}, "qid_topic_entity": {"Q147077": "Emma Stone"}}, {"QuestionId": "WebQTest-62", "RawQuestion": "what was jesse james killed with?", "ProcessedQuestion": "what was jesse james killed with", "Parses": [{"ParseId": "WebQTest-62.P0", "AnnotatorId": 1, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02khkd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02khkd ns:people.deceased_person.cause_of_death ?x .\n?x ns:freebase.linguistic_hint.subject_form ?sk0 .\nFILTER (str(?sk0) = \"Firearms\")\n}\n", "PotentialTopicEntityMention": "jesse james", "TopicEntityName": "Jesse James", "TopicEntityMid": "m.02khkd", "InferentialChain": ["people.deceased_person.cause_of_death"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Value", "Argument": "Firearms", "EntityName": null, "SourceNodeIndex": 0, "NodePredicate": "freebase.linguistic_hint.subject_form", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.034qg", "EntityName": "Firearm"}]}], "topic_entity": {"m.02khkd": "Jesse James"}, "qid_topic_entity": {"Q213626": "Jesse James"}}, {"QuestionId": "WebQTest-1770", "RawQuestion": "what country does rafael nadal play for?", "ProcessedQuestion": "what country does rafael nadal play for", "Parses": [{"ParseId": "WebQTest-1770.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.051q39)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.051q39 ns:people.person.nationality ?x .\n}\n", "PotentialTopicEntityMention": "rafael nadal", "TopicEntityName": "Rafael Nadal", "TopicEntityMid": "m.051q39", "InferentialChain": ["people.person.nationality"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.06mkj", "EntityName": "Spain"}]}], "topic_entity": {"m.051q39": "Rafael Nadal"}, "qid_topic_entity": {"Q10132": "Rafael Nadal"}}, {"QuestionId": "WebQTest-513", "RawQuestion": "what language do most australians speak?", "ProcessedQuestion": "what language do most australians speak", "Parses": [{"ParseId": "WebQTest-513.P0", "AnnotatorId": 5, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0chghy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0chghy ns:location.country.languages_spoken ?x .\n}\n", "PotentialTopicEntityMention": "australians", "TopicEntityName": "Australia", "TopicEntityMid": "m.0chghy", "InferentialChain": ["location.country.languages_spoken"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02h40lc", "EntityName": "English Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02jcw", "EntityName": "Esperanto Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.04gd7", "EntityName": "Lojban"}]}], "topic_entity": {"m.0chghy": "Australia"}, "qid_topic_entity": {"Q408": "Australia"}}, {"QuestionId": "WebQTest-1038", "RawQuestion": "who was wesley snipes?", "ProcessedQuestion": "who was wesley snipes", "Parses": [{"ParseId": "WebQTest-1038.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02lymt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02lymt ns:people.person.profession ?x .\n}\n", "PotentialTopicEntityMention": "wesley snipes", "TopicEntityName": "Wesley Snipes", "TopicEntityMid": "m.02lymt", "InferentialChain": ["people.person.profession"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.012t_z", "EntityName": "Businessperson"}, {"AnswerType": "Entity", "AnswerArgument": "m.01d_h8", "EntityName": "Film Producer"}, {"AnswerType": "Entity", "AnswerArgument": "m.02h6p92", "EntityName": "Dancer"}, {"AnswerType": "Entity", "AnswerArgument": "m.02hrh1q", "EntityName": "Actor"}, {"AnswerType": "Entity", "AnswerArgument": "m.02wszfz", "EntityName": "Martial Artist"}, {"AnswerType": "Entity", "AnswerArgument": "m.09l65", "EntityName": "Singer"}]}], "topic_entity": {"m.02lymt": "Wesley Snipes"}, "qid_topic_entity": {"Q189694": "Wesley Snipes"}}, {"QuestionId": "WebQTest-1051", "RawQuestion": "when did the san francisco earthquake occur?", "ProcessedQuestion": "when did the san francisco earthquake occur", "Parses": [{"ParseId": "WebQTest-1051.P0", "AnnotatorId": 2, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01f6rm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01f6rm ns:time.event.start_date ?x .\n}\n", "PotentialTopicEntityMention": "san francisco earthquake", "TopicEntityName": "1906 San Francisco earthquake", "TopicEntityMid": "m.01f6rm", "InferentialChain": ["time.event.start_date"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Value", "AnswerArgument": "1906-04-18", "EntityName": null}]}], "topic_entity": {"m.01f6rm": "1906 San Francisco earthquake"}, "qid_topic_entity": {"Q211386": "1906 San Francisco earthquake"}}, {"QuestionId": "WebQTest-409", "RawQuestion": "where did giuliana rancic grow up?", "ProcessedQuestion": "where did giuliana rancic grow up", "Parses": [{"ParseId": "WebQTest-409.P0", "AnnotatorId": 3, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Low", "FreeFormComment": "?"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b0tw3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b0tw3 ns:people.person.place_of_birth ?x .\n}\n", "PotentialTopicEntityMention": "giuliana rancic", "TopicEntityName": "Giuliana Rancic", "TopicEntityMid": "m.0b0tw3", "InferentialChain": ["people.person.place_of_birth"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0fhsz", "EntityName": "Naples"}]}], "topic_entity": {"m.0b0tw3": "Giuliana Rancic"}, "qid_topic_entity": {"Q1281335": "Giuliana Rancic"}}, {"QuestionId": "WebQTest-1607", "RawQuestion": "who won fedex cup 2012?", "ProcessedQuestion": "who won fedex cup 2012", "Parses": [{"ParseId": "WebQTest-1607.P0", "AnnotatorId": 5, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Low", "FreeFormComment": "? 2012"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08q5ws)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08q5ws ns:sports.sports_award_type.winners ?y .\n?y ns:sports.sports_award.award_winner ?x .\n?y ns:sports.sports_award.season ns:m.0hrfg40 .\n}\n", "PotentialTopicEntityMention": "fedex cup", "TopicEntityName": "FedEx Cup", "TopicEntityMid": "m.08q5ws", "InferentialChain": ["sports.sports_award_type.winners", "sports.sports_award.award_winner"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.0hrfg40", "EntityName": "2012 PGA Tour", "SourceNodeIndex": 0, "NodePredicate": "sports.sports_award.season", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02vnxb_", "EntityName": "Brandt Snedeker"}]}], "topic_entity": {"m.08q5ws": "FedEx Cup"}, "qid_topic_entity": {"Q1399835": "FedEx Cup"}}, {"QuestionId": "WebQTest-1748", "RawQuestion": "through which countries of the sahel does the niger river flow?", "ProcessedQuestion": "through which countries of the sahel does the niger river flow", "Parses": [{"ParseId": "WebQTest-1748.P0", "AnnotatorId": 2, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05csx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05csx ns:location.location.partially_containedby ?x .\n?x ns:common.topic.notable_types ns:m.01mp .\n?x ns:location.location.partially_contains ns:m.0l5_l .\n}\n", "PotentialTopicEntityMention": "niger river", "TopicEntityName": "Niger River", "TopicEntityMid": "m.05csx", "InferentialChain": ["location.location.partially_containedby"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.01mp", "EntityName": "Country", "SourceNodeIndex": 0, "NodePredicate": "common.topic.notable_types", "ValueType": "String"}, {"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.0l5_l", "EntityName": "Sahel", "SourceNodeIndex": 0, "NodePredicate": "location.location.partially_contains", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.04v09", "EntityName": "Mali"}, {"AnswerType": "Entity", "AnswerArgument": "m.05cc1", "EntityName": "Niger"}, {"AnswerType": "Entity", "AnswerArgument": "m.05cgv", "EntityName": "Nigeria"}]}], "topic_entity": {"m.05csx": "Niger River"}, "qid_topic_entity": {"Q3542": "Niger River"}}, {"QuestionId": "WebQTest-2018", "RawQuestion": "what did jack london do for a living?", "ProcessedQuestion": "what did jack london do for a living", "Parses": [{"ParseId": "WebQTest-2018.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bt23)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bt23 ns:people.person.profession ?x .\n}\n", "PotentialTopicEntityMention": "jack london", "TopicEntityName": "Jack London", "TopicEntityMid": "m.0bt23", "InferentialChain": ["people.person.profession"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.016wtf", "EntityName": "Sailor"}, {"AnswerType": "Entity", "AnswerArgument": "m.02xhgwq", "EntityName": "Novelist"}, {"AnswerType": "Entity", "AnswerArgument": "m.0d8qb", "EntityName": "Journalist"}, {"AnswerType": "Entity", "AnswerArgument": "m.0dxtg", "EntityName": "Screenwriter"}, {"AnswerType": "Entity", "AnswerArgument": "m.0f1hr", "EntityName": "Essayist"}, {"AnswerType": "Entity", "AnswerArgument": "m.0kyk", "EntityName": "Author"}]}], "topic_entity": {"m.0bt23": "Jack London"}, "qid_topic_entity": {"Q45765": "Jack London"}}, {"QuestionId": "WebQTest-489", "RawQuestion": "who plays stephanie plum in one for the money?", "ProcessedQuestion": "who plays stephanie plum in one for the money", "Parses": [{"ParseId": "WebQTest-489.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g5sxb4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g5sxb4 ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.098by5 .\n}\n", "PotentialTopicEntityMention": "one for the money", "TopicEntityName": "One for the Money", "TopicEntityMid": "m.0g5sxb4", "InferentialChain": ["film.film.starring", "film.performance.actor"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.098by5", "EntityName": "Stephanie Plum", "SourceNodeIndex": 0, "NodePredicate": "film.performance.character", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.025b5y", "EntityName": "Katherine Heigl"}]}], "topic_entity": {"m.0g5sxb4": "One for the Money"}, "qid_topic_entity": {"Q602501": "One for the Money"}}, {"QuestionId": "WebQTest-1388", "RawQuestion": "what country did toussaint l'ouverture help free?", "ProcessedQuestion": "what country did toussaint l'ouverture help free", "Parses": [{"ParseId": "WebQTest-1388.P0", "AnnotatorId": 2, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "VeryLow", "FreeFormComment": "??"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.011wgw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.011wgw ns:military.military_person.service ?y .\n?y ns:military.military_service.military_force ?x .\n}\n", "PotentialTopicEntityMention": "toussaint l ' ouverture", "TopicEntityName": "Toussaint Louverture", "TopicEntityMid": "m.011wgw", "InferentialChain": ["military.military_person.service", "military.military_service.military_force"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02wf01", "EntityName": "French Army"}, {"AnswerType": "Entity", "AnswerArgument": "m.0410mhq", "EntityName": "Haitian Rebellion of 1891"}, {"AnswerType": "Entity", "AnswerArgument": "m.09b63n", "EntityName": "French Revolutionary Army"}]}], "topic_entity": {"m.011wgw": "Toussaint Louverture"}, "qid_topic_entity": {"Q205783": "Toussaint Louverture"}}, {"QuestionId": "WebQTest-1942", "RawQuestion": "who was in the israeli palestinian conflict?", "ProcessedQuestion": "who was in the israeli palestinian conflict", "Parses": [{"ParseId": "WebQTest-1942.P0", "AnnotatorId": 4, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cj5y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cj5y ns:time.event.people_involved ?x .\n}\n", "PotentialTopicEntityMention": "israeli palestinian conflict", "TopicEntityName": "Israeli\u2013Palestinian conflict", "TopicEntityMid": "m.0cj5y", "InferentialChain": ["time.event.people_involved"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.012bk", "EntityName": "Ariel Sharon"}, {"AnswerType": "Entity", "AnswerArgument": "m.019x_p", "EntityName": "Chaim Weizmann"}, {"AnswerType": "Entity", "AnswerArgument": "m.01cw71", "EntityName": "Ahmad Shukeiri"}, {"AnswerType": "Entity", "AnswerArgument": "m.01czvz", "EntityName": "Haj Amin al-Husseini"}, {"AnswerType": "Entity", "AnswerArgument": "m.01html", "EntityName": "Mahmoud Abbas"}, {"AnswerType": "Entity", "AnswerArgument": "m.01tp58", "EntityName": "Ahmed Qurei"}, {"AnswerType": "Entity", "AnswerArgument": "m.0203v", "EntityName": "Colin Powell"}, {"AnswerType": "Entity", "AnswerArgument": "m.036df9", "EntityName": "Hanan Ashrawi"}, {"AnswerType": "Entity", "AnswerArgument": "m.039b_q", "EntityName": "Dalal Mughrabi"}, {"AnswerType": "Entity", "AnswerArgument": "m.056xs", "EntityName": "Menachem Begin"}, {"AnswerType": "Entity", "AnswerArgument": "m.08849", "EntityName": "Yasser Arafat"}, {"AnswerType": "Entity", "AnswerArgument": "m.0b_zw", "EntityName": "Yitzhak Rabin"}, {"AnswerType": "Entity", "AnswerArgument": "m.0c_8s", "EntityName": "Shimon Peres"}, {"AnswerType": "Entity", "AnswerArgument": "m.0cj84", "EntityName": "Anthony Zinni"}, {"AnswerType": "Entity", "AnswerArgument": "m.0d58h", "EntityName": "Anwar Sadat"}, {"AnswerType": "Entity", "AnswerArgument": "m.0hspy", "EntityName": "David Ben-Gurion"}, {"AnswerType": "Entity", "AnswerArgument": "m.0jfzc", "EntityName": "Marwan Barghouti"}, {"AnswerType": "Entity", "AnswerArgument": "m.0kvhz", "EntityName": "Hussein of Jordan"}, {"AnswerType": "Entity", "AnswerArgument": "m.0kwtd", "EntityName": "Nabil Shaath"}, {"AnswerType": "Entity", "AnswerArgument": "m.0kww1", "EntityName": "Ahmed Yassin"}, {"AnswerType": "Entity", "AnswerArgument": "m.0lf35", "EntityName": "Abdullah of Saudi Arabia"}]}], "topic_entity": {"m.0cj5y": "Israeli\u2013Palestinian conflict"}, "qid_topic_entity": {"Q151622": "Israeli\u2013Palestinian conflict"}}, {"QuestionId": "WebQTest-916", "RawQuestion": "what is the language of russia s spoken?", "ProcessedQuestion": "what is the language of russia s spoken", "Parses": [{"ParseId": "WebQTest-916.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06bnz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06bnz ns:location.country.languages_spoken ?x .\n}\n", "PotentialTopicEntityMention": "russia", "TopicEntityName": "Russia", "TopicEntityMid": "m.06bnz", "InferentialChain": ["location.country.languages_spoken"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.017dsl", "EntityName": "Osetin Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.0198z0", "EntityName": "Chechen Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.019yz7", "EntityName": "Tatar Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.01bcw_", "EntityName": "Azerbaijani language"}, {"AnswerType": "Entity", "AnswerArgument": "m.01qyqy", "EntityName": "Abaza Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.01y_vl", "EntityName": "Mari language"}, {"AnswerType": "Entity", "AnswerArgument": "m.020g7w", "EntityName": "Bashkir Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.0234zj", "EntityName": "Avar Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.0264gxt", "EntityName": "Aghul language"}, {"AnswerType": "Entity", "AnswerArgument": "m.027bj_4", "EntityName": "Tsakhur Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02gj5b", "EntityName": "Tuvin Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02hwm9x", "EntityName": "Moksha Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02lpht", "EntityName": "Erzya Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02mj1c", "EntityName": "Kalmyk-Oirat Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02mxzf", "EntityName": "Kabardian Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02nbbh", "EntityName": "Adyghe Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02q4t0g", "EntityName": "Rutul language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02x9lm", "EntityName": "Lezgi Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.037lmh", "EntityName": "Ingush Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.037nfm", "EntityName": "Altai language"}, {"AnswerType": "Entity", "AnswerArgument": "m.03f3f1", "EntityName": "Crimean Turkish Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.03gn_0", "EntityName": "Nogai Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.03klw8", "EntityName": "Dargwa Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.03wt_j", "EntityName": "Komi language"}, {"AnswerType": "Entity", "AnswerArgument": "m.049jrm", "EntityName": "Udmurt Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.04rxz0", "EntityName": "Kumyk Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.04xqkr", "EntityName": "Karachay-Balkar Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.054zyh", "EntityName": "Buryat language"}, {"AnswerType": "Entity", "AnswerArgument": "m.05l6md", "EntityName": "Yakut Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.06b_j", "EntityName": "Russian Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.06bw_x", "EntityName": "Tabassaran Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.0880p", "EntityName": "Yiddish Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.091dr6", "EntityName": "Lak Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.093gjw", "EntityName": "Khakas Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.0cjk9", "EntityName": "Ukrainian Language"}]}, {"ParseId": "WebQTest-916.P1", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06bnz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06bnz ns:location.country.official_language ?x .\n}\n", "PotentialTopicEntityMention": "russia", "TopicEntityName": "Russia", "TopicEntityMid": "m.06bnz", "InferentialChain": ["location.country.official_language"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.06b_j", "EntityName": "Russian Language"}]}], "topic_entity": {"m.06bnz": "Russia"}, "qid_topic_entity": {"Q159": "Russia"}}, {"QuestionId": "WebQTest-1319", "RawQuestion": "who has pudge rodriguez played for?", "ProcessedQuestion": "who has pudge rodriguez played for", "Parses": [{"ParseId": "WebQTest-1319.P0", "AnnotatorId": 3, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02p6g7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02p6g7 ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\n}\n", "PotentialTopicEntityMention": "pudge rodriguez", "TopicEntityName": "Iv\u00e1n Rodr\u00edguez", "TopicEntityMid": "m.02p6g7", "InferentialChain": ["sports.pro_athlete.teams", "sports.sports_team_roster.team"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02__x", "EntityName": "Miami Marlins"}, {"AnswerType": "Entity", "AnswerArgument": "m.02d02", "EntityName": "Detroit Tigers"}, {"AnswerType": "Entity", "AnswerArgument": "m.07l8x", "EntityName": "Texas Rangers"}]}], "topic_entity": {"m.02p6g7": "Iv\u00e1n Rodr\u00edguez"}, "qid_topic_entity": {"Q706908": "Iv\u00e1n Rodr\u00edguez"}}, {"QuestionId": "WebQTest-1261", "RawQuestion": "where did the battle of passchendaele happen?", "ProcessedQuestion": "where did the battle of passchendaele happen", "Parses": [{"ParseId": "WebQTest-1261.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c3mz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c3mz ns:time.event.locations ?x .\n}\n", "PotentialTopicEntityMention": "passchendaele", "TopicEntityName": "Battle of Passchendaele", "TopicEntityMid": "m.0c3mz", "InferentialChain": ["time.event.locations"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02pb6l5", "EntityName": "Passendale"}, {"AnswerType": "Entity", "AnswerArgument": "m.02y4t", "EntityName": "Flanders"}]}], "topic_entity": {"m.0c3mz": "Battle of Passchendaele"}, "qid_topic_entity": {"Q426227": "Battle of Passchendaele"}}, {"QuestionId": "WebQTest-145", "RawQuestion": "what college did albert einstein go to?", "ProcessedQuestion": "what college did albert einstein go to", "Parses": [{"ParseId": "WebQTest-145.P0", "AnnotatorId": 5, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jcx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jcx ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n", "PotentialTopicEntityMention": "albert einstein", "TopicEntityName": "Albert Einstein", "TopicEntityMid": "m.0jcx", "InferentialChain": ["people.person.education", "education.education.institution"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.01y2hnl", "EntityName": "College/University", "SourceNodeIndex": 1, "NodePredicate": "common.topic.notable_types", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01dyk8", "EntityName": "ETH Zurich"}, {"AnswerType": "Entity", "AnswerArgument": "m.01tpvt", "EntityName": "University of Zurich"}]}], "topic_entity": {"m.0jcx": "Albert Einstein"}, "qid_topic_entity": {"Q937": "Albert Einstein"}}, {"QuestionId": "WebQTest-661", "RawQuestion": "who did nasri play for before arsenal?", "ProcessedQuestion": "who did nasri play for before arsenal", "Parses": [{"ParseId": "WebQTest-661.P0", "AnnotatorId": 3, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "!Manual Sparql. Comment: F Date comparison. Original comment: F cannot handle before query"}, "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nfilter(?x != ns:m.0xbm)\nns:m.0f2dbm ns:sports.pro_athlete.teams ?z . #Samir Nasri\n?z ns:sports.sports_team_roster.team ns:m.0xbm  . #arsenal\n?z ns:sports.sports_team_roster.from ?from .\nns:m.0f2dbm ns:sports.pro_athlete.teams ?y . #Samir Nasri\n?y ns:sports.sports_team_roster.team ?x .\n?y  ns:sports.sports_team_roster.to ?to .\nFILTER (xsd:dateTime(?from) - xsd:dateTime(?to) >= 0)\n}\nORDER BY Desc(xsd:datetime(?from))\nLIMIT 1", "PotentialTopicEntityMention": "nasri", "TopicEntityName": "Samir Nasri", "TopicEntityMid": "m.0f2dbm", "InferentialChain": null, "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02gys2", "EntityName": "Olympique de Marseille"}]}], "topic_entity": {"m.0f2dbm": "Samir Nasri"}, "qid_topic_entity": {"Q1920": "Samir Nasri"}}, {"QuestionId": "WebQTest-869", "RawQuestion": "where is ancient phoenician?", "ProcessedQuestion": "where is ancient phoenician", "Parses": [{"ParseId": "WebQTest-869.P0", "AnnotatorId": 2, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0617q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0617q ns:location.location.containedby ?x .\n}\n", "PotentialTopicEntityMention": "phoenician", "TopicEntityName": "Phoenicia", "TopicEntityMid": "m.0617q", "InferentialChain": ["location.location.containedby"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.04hqz", "EntityName": "Lebanon"}]}], "topic_entity": {"m.0617q": "Phoenicia"}, "qid_topic_entity": {"Q41642": "Phoenicia"}}, {"QuestionId": "WebQTest-193", "RawQuestion": "what school did ben roethlisberger go to?", "ProcessedQuestion": "what school did ben roethlisberger go to", "Parses": [{"ParseId": "WebQTest-193.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.033t8w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.033t8w ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n", "PotentialTopicEntityMention": "ben roethlisberger", "TopicEntityName": "Ben Roethlisberger", "TopicEntityMid": "m.033t8w", "InferentialChain": ["people.person.education", "education.education.institution"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01r3y2", "EntityName": "Miami University"}]}], "topic_entity": {"m.033t8w": "Ben Roethlisberger"}, "qid_topic_entity": {"Q537679": "Ben Roethlisberger"}}, {"QuestionId": "WebQTest-556", "RawQuestion": "when is saint george day celebrated?", "ProcessedQuestion": "when is saint george day celebrated", "Parses": [{"ParseId": "WebQTest-556.P0", "AnnotatorId": 2, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05474b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05474b ns:time.holiday.day_of_year ?x .\n}\n", "PotentialTopicEntityMention": "saint george day", "TopicEntityName": "St George's Day", "TopicEntityMid": "m.05474b", "InferentialChain": ["time.holiday.day_of_year"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0tht", "EntityName": "April 23"}]}], "topic_entity": {"m.05474b": "St George's Day"}, "qid_topic_entity": {"Q212829": "St George's Day"}}, {"QuestionId": "WebQTest-665", "RawQuestion": "what government does new zealand have?", "ProcessedQuestion": "what government does new zealand have", "Parses": [{"ParseId": "WebQTest-665.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ctw_b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ctw_b ns:location.country.form_of_government ?x .\n}\n", "PotentialTopicEntityMention": "new zealand", "TopicEntityName": "New Zealand", "TopicEntityMid": "m.0ctw_b", "InferentialChain": ["location.country.form_of_government"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.018wl5", "EntityName": "Parliamentary system"}, {"AnswerType": "Entity", "AnswerArgument": "m.01fpfn", "EntityName": "Unitary state"}, {"AnswerType": "Entity", "AnswerArgument": "m.01q20", "EntityName": "Constitutional monarchy"}]}], "topic_entity": {"m.0ctw_b": "New Zealand"}, "qid_topic_entity": {"Q664": "New Zealand"}}, {"QuestionId": "WebQTest-400", "RawQuestion": "what was the capital city of the east roman empire?", "ProcessedQuestion": "what was the capital city of the east roman empire", "Parses": [{"ParseId": "WebQTest-400.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.017cw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.017cw ns:location.country.capital ?x .\n}\n", "PotentialTopicEntityMention": "east roman empire", "TopicEntityName": "Byzantine Empire", "TopicEntityMid": "m.017cw", "InferentialChain": ["location.country.capital"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01q0l", "EntityName": "Constantinople"}]}], "topic_entity": {"m.017cw": "Byzantine Empire"}, "qid_topic_entity": {"Q12544": "Byzantine Empire"}}, {"QuestionId": "WebQTest-415", "RawQuestion": "what movies did tupac star in?", "ProcessedQuestion": "what movies did tupac star in", "Parses": [{"ParseId": "WebQTest-415.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07pzc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07pzc ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n", "PotentialTopicEntityMention": "tupac", "TopicEntityName": "Tupac Shakur", "TopicEntityMid": "m.07pzc", "InferentialChain": ["film.actor.film", "film.performance.film"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02pkz7", "EntityName": "Murder Was the Case"}, {"AnswerType": "Entity", "AnswerArgument": "m.06974q", "EntityName": "Poetic Justice"}, {"AnswerType": "Entity", "AnswerArgument": "m.08dk0b", "EntityName": "Gridlock'd"}, {"AnswerType": "Entity", "AnswerArgument": "m.08dk10", "EntityName": "Above the Rim"}, {"AnswerType": "Entity", "AnswerArgument": "m.08w51z", "EntityName": "Juice"}, {"AnswerType": "Entity", "AnswerArgument": "m.0c6vx0", "EntityName": "Nothing but Trouble"}, {"AnswerType": "Entity", "AnswerArgument": "m.0cc2r_", "EntityName": "Gang Related"}, {"AnswerType": "Entity", "AnswerArgument": "m.0f4nt1", "EntityName": "Bullet"}]}], "topic_entity": {"m.07pzc": "Tupac Shakur"}, "qid_topic_entity": {"Q6107": "Tupac Shakur"}}, {"QuestionId": "WebQTest-1914", "RawQuestion": "what year was allen iverson mvp?", "ProcessedQuestion": "what year was allen iverson mvp", "Parses": [{"ParseId": "WebQTest-1914.P0", "AnnotatorId": 1, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01sg7_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01sg7_ ns:sports.sports_award_winner.awards ?y .\n?y ns:sports.sports_award.season ?x .\n?y ns:sports.sports_award.award ns:m.02yqk8 .\n}\n", "PotentialTopicEntityMention": "allen iverson", "TopicEntityName": "Allen Iverson", "TopicEntityMid": "m.01sg7_", "InferentialChain": ["sports.sports_award_winner.awards", "sports.sports_award.season"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.02yqk8", "EntityName": "NBA Most Valuable Player Award", "SourceNodeIndex": 0, "NodePredicate": "sports.sports_award.award", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.080b2d", "EntityName": "2000\u201301 NBA season"}]}], "topic_entity": {"m.01sg7_": "Allen Iverson"}, "qid_topic_entity": {"Q190094": "Allen Iverson"}}, {"QuestionId": "WebQTest-1435", "RawQuestion": "who did kurt warner play 4?", "ProcessedQuestion": "who did kurt warner play 4", "Parses": [{"ParseId": "WebQTest-1435.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.025j0c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.025j0c ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\n}\n", "PotentialTopicEntityMention": "kurt warner", "TopicEntityName": "Kurt Warner", "TopicEntityMid": "m.025j0c", "InferentialChain": ["sports.pro_athlete.teams", "sports.sports_team_roster.team"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02y5f_", "EntityName": "Amsterdam Admirals"}, {"AnswerType": "Entity", "AnswerArgument": "m.03m3x9z", "EntityName": "Northern Iowa Panthers football"}, {"AnswerType": "Entity", "AnswerArgument": "m.05bd9b5", "EntityName": "Iowa Barnstormers"}, {"AnswerType": "Entity", "AnswerArgument": "m.05gg4", "EntityName": "New York Giants"}, {"AnswerType": "Entity", "AnswerArgument": "m.06x76", "EntityName": "St. Louis Rams"}, {"AnswerType": "Entity", "AnswerArgument": "m.0ws7", "EntityName": "Arizona Cardinals"}]}], "topic_entity": {"m.025j0c": "Kurt Warner"}, "qid_topic_entity": {"Q945750": "Kurt Warner"}}, {"QuestionId": "WebQTest-1348", "RawQuestion": "what team did peyton manning's dad play for?", "ProcessedQuestion": "what team did peyton manning 's dad play for", "Parses": [{"ParseId": "WebQTest-1348.P0", "AnnotatorId": 1, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "!Manual Sparql. Comment: F longer chain. Original comment: F "}, "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nns:m.027jv8 ns:people.person.parents ?y .\n?y ns:people.person.gender ns:m.05zppz . #Male\n?y ns:sports.pro_athlete.teams ?z .\n?z ns:sports.sports_team_roster.team ?x .\n}", "PotentialTopicEntityMention": "peyton manning", "TopicEntityName": "Peyton Manning", "TopicEntityMid": "m.027jv8", "InferentialChain": null, "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.03gqb0k", "EntityName": "Ole Miss Rebels football"}, {"AnswerType": "Entity", "AnswerArgument": "m.04nmxtk", "EntityName": "Houston Oilers"}, {"AnswerType": "Entity", "AnswerArgument": "m.051q5", "EntityName": "Minnesota Vikings"}, {"AnswerType": "Entity", "AnswerArgument": "m.05g3v", "EntityName": "New Orleans Saints"}]}], "topic_entity": {"m.027jv8": "Peyton Manning"}, "qid_topic_entity": {"Q7539": "Peyton Manning"}}, {"QuestionId": "WebQTest-1155", "RawQuestion": "what are the seven nations of central america?", "ProcessedQuestion": "what are the seven nations of central america", "Parses": [{"ParseId": "WebQTest-1155.P0", "AnnotatorId": 4, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01tzh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01tzh ns:location.location.contains ?x .\n?x ns:common.topic.notable_types ns:m.01mp .\n}\n", "PotentialTopicEntityMention": "central america", "TopicEntityName": "Central America", "TopicEntityMid": "m.01tzh", "InferentialChain": ["location.location.contains"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.01mp", "EntityName": "Country", "SourceNodeIndex": 0, "NodePredicate": "common.topic.notable_types", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0164b", "EntityName": "Belize"}, {"AnswerType": "Entity", "AnswerArgument": "m.01p8s", "EntityName": "Costa Rica"}, {"AnswerType": "Entity", "AnswerArgument": "m.02k8k", "EntityName": "El Salvador"}, {"AnswerType": "Entity", "AnswerArgument": "m.0345_", "EntityName": "Guatemala"}, {"AnswerType": "Entity", "AnswerArgument": "m.03h2c", "EntityName": "Honduras"}, {"AnswerType": "Entity", "AnswerArgument": "m.05qx1", "EntityName": "Panama"}, {"AnswerType": "Entity", "AnswerArgument": "m.0dkz7x", "EntityName": "Gran Colombia"}]}], "topic_entity": {"m.01tzh": "Central America"}, "qid_topic_entity": {"Q27611": "Central America"}}, {"QuestionId": "WebQTest-1766", "RawQuestion": "what language do russians speak?", "ProcessedQuestion": "what language do russians speak", "Parses": [{"ParseId": "WebQTest-1766.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06bnz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06bnz ns:location.country.languages_spoken ?x .\n}\n", "PotentialTopicEntityMention": "russians", "TopicEntityName": "Russia", "TopicEntityMid": "m.06bnz", "InferentialChain": ["location.country.languages_spoken"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.017dsl", "EntityName": "Osetin Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.0198z0", "EntityName": "Chechen Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.019yz7", "EntityName": "Tatar Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.01bcw_", "EntityName": "Azerbaijani language"}, {"AnswerType": "Entity", "AnswerArgument": "m.01qyqy", "EntityName": "Abaza Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.01y_vl", "EntityName": "Mari language"}, {"AnswerType": "Entity", "AnswerArgument": "m.020g7w", "EntityName": "Bashkir Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.0234zj", "EntityName": "Avar Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.0264gxt", "EntityName": "Aghul language"}, {"AnswerType": "Entity", "AnswerArgument": "m.027bj_4", "EntityName": "Tsakhur Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02gj5b", "EntityName": "Tuvin Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02hwm9x", "EntityName": "Moksha Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02lpht", "EntityName": "Erzya Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02mj1c", "EntityName": "Kalmyk-Oirat Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02mxzf", "EntityName": "Kabardian Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02nbbh", "EntityName": "Adyghe Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02q4t0g", "EntityName": "Rutul language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02x9lm", "EntityName": "Lezgi Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.037lmh", "EntityName": "Ingush Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.037nfm", "EntityName": "Altai language"}, {"AnswerType": "Entity", "AnswerArgument": "m.03f3f1", "EntityName": "Crimean Turkish Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.03gn_0", "EntityName": "Nogai Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.03klw8", "EntityName": "Dargwa Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.03wt_j", "EntityName": "Komi language"}, {"AnswerType": "Entity", "AnswerArgument": "m.049jrm", "EntityName": "Udmurt Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.04rxz0", "EntityName": "Kumyk Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.04xqkr", "EntityName": "Karachay-Balkar Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.054zyh", "EntityName": "Buryat language"}, {"AnswerType": "Entity", "AnswerArgument": "m.05l6md", "EntityName": "Yakut Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.06b_j", "EntityName": "Russian Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.06bw_x", "EntityName": "Tabassaran Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.0880p", "EntityName": "Yiddish Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.091dr6", "EntityName": "Lak Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.093gjw", "EntityName": "Khakas Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.0cjk9", "EntityName": "Ukrainian Language"}]}, {"ParseId": "WebQTest-1766.P1", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06bnz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06bnz ns:location.country.official_language ?x .\n}\n", "PotentialTopicEntityMention": "russians", "TopicEntityName": "Russia", "TopicEntityMid": "m.06bnz", "InferentialChain": ["location.country.official_language"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.06b_j", "EntityName": "Russian Language"}]}, {"ParseId": "WebQTest-1766.P2", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g6ff)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g6ff ns:people.ethnicity.languages_spoken ?x .\n}\n", "PotentialTopicEntityMention": "russians", "TopicEntityName": "Russian", "TopicEntityMid": "m.0g6ff", "InferentialChain": ["people.ethnicity.languages_spoken"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.06b_j", "EntityName": "Russian Language"}]}], "topic_entity": {"m.06bnz": "Russia", "m.0g6ff": "Russian"}, "qid_topic_entity": {"Q159": "Russia", "Q49542": "Russian"}}, {"QuestionId": "WebQTest-833", "RawQuestion": "what is the main language used in china?", "ProcessedQuestion": "what is the main language used in china", "Parses": [{"ParseId": "WebQTest-833.P0", "AnnotatorId": 5, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d05w3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d05w3 ns:location.country.official_language ?x .\n}\n", "PotentialTopicEntityMention": "china", "TopicEntityName": "China", "TopicEntityMid": "m.0d05w3", "InferentialChain": ["location.country.official_language"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0653m", "EntityName": "Standard Chinese"}]}], "topic_entity": {"m.0d05w3": "China"}, "qid_topic_entity": {"Q148": "China"}}, {"QuestionId": "WebQTest-1792", "RawQuestion": "where is midlothian scotland?", "ProcessedQuestion": "where is midlothian scotland", "Parses": [{"ParseId": "WebQTest-1792.P0", "AnnotatorId": 4, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Low", "FreeFormComment": "? GPS location?"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.011w8v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.011w8v ns:location.location.containedby ?x .\n}\n", "PotentialTopicEntityMention": "midlothian", "TopicEntityName": "Midlothian", "TopicEntityMid": "m.011w8v", "InferentialChain": ["location.location.containedby"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.06q1r", "EntityName": "Scotland"}, {"AnswerType": "Entity", "AnswerArgument": "m.07ssc", "EntityName": "United Kingdom"}, {"AnswerType": "Entity", "AnswerArgument": "m.0hzc9md", "EntityName": "United Kingdom, with Dependencies and Territories"}]}], "topic_entity": {"m.011w8v": "Midlothian"}, "qid_topic_entity": {"Q206934": "Midlothian"}}, {"QuestionId": "WebQTest-1392", "RawQuestion": "what the language spoken in indonesia?", "ProcessedQuestion": "what the language spoken in indonesia", "Parses": [{"ParseId": "WebQTest-1392.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ryn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ryn ns:location.country.languages_spoken ?x .\n}\n", "PotentialTopicEntityMention": "indonesia", "TopicEntityName": "Indonesia", "TopicEntityMid": "m.03ryn", "InferentialChain": ["location.country.languages_spoken"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01qzl2", "EntityName": "Sunda Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.0201jz", "EntityName": "Bali Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.020257", "EntityName": "Madura Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02bv9", "EntityName": "Dutch Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02h40lc", "EntityName": "English Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.02hwx1l", "EntityName": "Javanese Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.075yc64", "EntityName": "Batak Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.097kp", "EntityName": "Indonesian Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.0f9fsf", "EntityName": "Tobelo Language"}, {"AnswerType": "Entity", "AnswerArgument": "m.0y1mh", "EntityName": "Malay Language"}]}, {"ParseId": "WebQTest-1392.P1", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ryn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ryn ns:location.country.official_language ?x .\n}\n", "PotentialTopicEntityMention": "indonesia", "TopicEntityName": "Indonesia", "TopicEntityMid": "m.03ryn", "InferentialChain": ["location.country.official_language"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.097kp", "EntityName": "Indonesian Language"}]}], "topic_entity": {"m.03ryn": "Indonesia"}, "qid_topic_entity": {"Q252": "Indonesia"}}, {"QuestionId": "WebQTest-695", "RawQuestion": "what role did paul mccartney play in the beatles?", "ProcessedQuestion": "what role did paul mccartney play in the beatles", "Parses": [{"ParseId": "WebQTest-695.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03j24kf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03j24kf ns:music.group_member.membership ?y .\n?y ns:music.group_membership.role ?x .\n?y ns:music.group_membership.group ns:m.07c0j .\n}\n", "PotentialTopicEntityMention": "paul mccartney", "TopicEntityName": "Paul McCartney", "TopicEntityMid": "m.03j24kf", "InferentialChain": ["music.group_member.membership", "music.group_membership.role"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.07c0j", "EntityName": "The Beatles", "SourceNodeIndex": 0, "NodePredicate": "music.group_membership.group", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0_sv_90", "EntityName": "Lead Vocals"}, {"AnswerType": "Entity", "AnswerArgument": "m.01vj9c", "EntityName": "Bass"}, {"AnswerType": "Entity", "AnswerArgument": "m.03_vpw", "EntityName": "Backing vocalist"}]}], "topic_entity": {"m.03j24kf": "Paul McCartney"}, "qid_topic_entity": {"Q2599": "Paul McCartney"}}, {"QuestionId": "WebQTest-1586", "RawQuestion": "who was queen isabella's mother?", "ProcessedQuestion": "who was queen isabella 's mother", "Parses": [{"ParseId": "WebQTest-1586.P0", "AnnotatorId": 5, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jd6m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jd6m ns:people.person.parents ?x .\n?x ns:people.person.gender ns:m.02zsn .\n}\n", "PotentialTopicEntityMention": "queen isabella", "TopicEntityName": "Isabella I of Castile", "TopicEntityMid": "m.0jd6m", "InferentialChain": ["people.person.parents"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.02zsn", "EntityName": "Female", "SourceNodeIndex": 0, "NodePredicate": "people.person.gender", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0d18m0", "EntityName": "Isabella of Portugal, Queen of Castile"}]}], "topic_entity": {"m.0jd6m": "Isabella I of Castile"}, "qid_topic_entity": {"Q45859": "Isabella I of Castile"}}, {"QuestionId": "WebQTest-796", "RawQuestion": "what did thomas malthus do?", "ProcessedQuestion": "what did thomas malthus do", "Parses": [{"ParseId": "WebQTest-796.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07r3d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07r3d ns:people.person.profession ?x .\n}\n", "PotentialTopicEntityMention": "thomas malthus", "TopicEntityName": "Thomas Robert Malthus", "TopicEntityMid": "m.07r3d", "InferentialChain": ["people.person.profession"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.03l_bhv", "EntityName": "Demographer"}, {"AnswerType": "Entity", "AnswerArgument": "m.04s2z", "EntityName": "Mathematician"}, {"AnswerType": "Entity", "AnswerArgument": "m.06q2q", "EntityName": "Scientist"}, {"AnswerType": "Entity", "AnswerArgument": "m.0frz0", "EntityName": "Economist"}]}], "topic_entity": {"m.07r3d": "Thomas Robert Malthus"}, "qid_topic_entity": {"Q13526": "Thomas Robert Malthus"}}, {"QuestionId": "WebQTest-1032", "RawQuestion": "who played captain kirk in star trek movie?", "ProcessedQuestion": "who played captain kirk in star trek movie", "Parses": [{"ParseId": "WebQTest-1032.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0crtw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0crtw ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.06qyw .\n}\n", "PotentialTopicEntityMention": "captain kirk", "TopicEntityName": "James T. Kirk", "TopicEntityMid": "m.0crtw", "InferentialChain": ["film.film_character.portrayed_in_films", "film.performance.actor"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.06qyw", "EntityName": "Star Trek Generations", "SourceNodeIndex": 0, "NodePredicate": "film.performance.film", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.084m3", "EntityName": "William Shatner"}]}, {"ParseId": "WebQTest-1032.P1", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0crtw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0crtw ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.06r2_ .\n}\n", "PotentialTopicEntityMention": "captain kirk", "TopicEntityName": "James T. Kirk", "TopicEntityMid": "m.0crtw", "InferentialChain": ["film.film_character.portrayed_in_films", "film.performance.actor"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.06r2_", "EntityName": "Star Trek II: The Wrath of Khan", "SourceNodeIndex": 0, "NodePredicate": "film.performance.film", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.084m3", "EntityName": "William Shatner"}]}, {"ParseId": "WebQTest-1032.P2", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0crtw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0crtw ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.01dc8g .\n}\n", "PotentialTopicEntityMention": "captain kirk", "TopicEntityName": "James T. Kirk", "TopicEntityMid": "m.0crtw", "InferentialChain": ["film.film_character.portrayed_in_films", "film.performance.actor"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.01dc8g", "EntityName": "Star Trek III: The Search for Spock", "SourceNodeIndex": 0, "NodePredicate": "film.performance.film", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.084m3", "EntityName": "William Shatner"}]}, {"ParseId": "WebQTest-1032.P3", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0crtw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0crtw ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.0m5s5 .\n}\n", "PotentialTopicEntityMention": "captain kirk", "TopicEntityName": "James T. Kirk", "TopicEntityMid": "m.0crtw", "InferentialChain": ["film.film_character.portrayed_in_films", "film.performance.actor"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.0m5s5", "EntityName": "Star Trek IV: The Voyage Home", "SourceNodeIndex": 0, "NodePredicate": "film.performance.film", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.084m3", "EntityName": "William Shatner"}]}, {"ParseId": "WebQTest-1032.P4", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0crtw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0crtw ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.012gk9 .\n}\n", "PotentialTopicEntityMention": "captain kirk", "TopicEntityName": "James T. Kirk", "TopicEntityMid": "m.0crtw", "InferentialChain": ["film.film_character.portrayed_in_films", "film.performance.actor"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.012gk9", "EntityName": "Star Trek V: The Final Frontier", "SourceNodeIndex": 0, "NodePredicate": "film.performance.film", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.084m3", "EntityName": "William Shatner"}]}, {"ParseId": "WebQTest-1032.P5", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0crtw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0crtw ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.015bpl .\n}\n", "PotentialTopicEntityMention": "captain kirk", "TopicEntityName": "James T. Kirk", "TopicEntityMid": "m.0crtw", "InferentialChain": ["film.film_character.portrayed_in_films", "film.performance.actor"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.015bpl", "EntityName": "Star Trek VI: The Undiscovered Country", "SourceNodeIndex": 0, "NodePredicate": "film.performance.film", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.084m3", "EntityName": "William Shatner"}]}, {"ParseId": "WebQTest-1032.P6", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0crtw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0crtw ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.01pg1t .\n}\n", "PotentialTopicEntityMention": "captain kirk", "TopicEntityName": "James T. Kirk", "TopicEntityMid": "m.0crtw", "InferentialChain": ["film.film_character.portrayed_in_films", "film.performance.actor"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.01pg1t", "EntityName": "Star Trek: The Motion Picture", "SourceNodeIndex": 0, "NodePredicate": "film.performance.film", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.084m3", "EntityName": "William Shatner"}]}], "topic_entity": {"m.0crtw": "James T. Kirk"}, "qid_topic_entity": {"Q16311": "James T. Kirk"}}, {"QuestionId": "WebQTest-200", "RawQuestion": "where was the vietnam war location?", "ProcessedQuestion": "where was the vietnam war location", "Parses": [{"ParseId": "WebQTest-200.P0", "AnnotatorId": 2, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07_nf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07_nf ns:time.event.locations ?x .\n}\n", "PotentialTopicEntityMention": "vietnam war", "TopicEntityName": "Vietnam War", "TopicEntityMid": "m.07_nf", "InferentialChain": ["time.event.locations"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01crd5", "EntityName": "Vietnam"}, {"AnswerType": "Entity", "AnswerArgument": "m.01xbgx", "EntityName": "Cambodia"}, {"AnswerType": "Entity", "AnswerArgument": "m.04hhv", "EntityName": "Laos"}, {"AnswerType": "Entity", "AnswerArgument": "m.073q1", "EntityName": "Southeast Asia"}, {"AnswerType": "Entity", "AnswerArgument": "m.0g8bw", "EntityName": "South Vietnam"}, {"AnswerType": "Entity", "AnswerArgument": "m.0g970", "EntityName": "North Vietnam"}]}], "topic_entity": {"m.07_nf": "Vietnam War"}, "qid_topic_entity": {"Q8740": "Vietnam War"}}, {"QuestionId": "WebQTest-1427", "RawQuestion": "who was the secretary of state when andrew jackson was president?", "ProcessedQuestion": "who was the secretary of state when andrew jackson was president", "Parses": [{"ParseId": "WebQTest-1427.P0", "AnnotatorId": 3, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0rlz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0rlz ns:government.political_appointer.appointees ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.basic_title ns:m.0789n .\n}\n", "PotentialTopicEntityMention": "andrew jackson", "TopicEntityName": "Andrew Jackson", "TopicEntityMid": "m.0rlz", "InferentialChain": ["government.political_appointer.appointees", "government.government_position_held.office_holder"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.0789n", "EntityName": "Secretary of State", "SourceNodeIndex": 0, "NodePredicate": "government.government_position_held.basic_title", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01bxb3", "EntityName": "Edward Livingston"}, {"AnswerType": "Entity", "AnswerArgument": "m.02ggrk", "EntityName": "Louis McLane"}, {"AnswerType": "Entity", "AnswerArgument": "m.04_0m", "EntityName": "Martin Van Buren"}, {"AnswerType": "Entity", "AnswerArgument": "m.04lhfcl", "EntityName": "James Alexander Hamilton"}]}], "topic_entity": {"m.0rlz": "Andrew Jackson"}, "qid_topic_entity": {"Q11817": "Andrew Jackson"}}, {"QuestionId": "WebQTest-1232", "RawQuestion": "what year was albert pujols rookie year?", "ProcessedQuestion": "what year was albert pujols rookie year", "Parses": [{"ParseId": "WebQTest-1232.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.035gcb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.035gcb ns:sports.sports_award_winner.awards ?y .\n?y ns:sports.sports_award.season ?x .\n?y ns:sports.sports_award.award ns:m.04yny9t .\n}\n", "PotentialTopicEntityMention": "albert pujols", "TopicEntityName": "Albert Pujols", "TopicEntityMid": "m.035gcb", "InferentialChain": ["sports.sports_award_winner.awards", "sports.sports_award.season"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.04yny9t", "EntityName": "National League Rookie of the Year", "SourceNodeIndex": 0, "NodePredicate": "sports.sports_award.award", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02h7sdf", "EntityName": "2001 Major League Baseball Season"}]}], "topic_entity": {"m.035gcb": "Albert Pujols"}, "qid_topic_entity": {"Q148726": "Albert Pujols"}}, {"QuestionId": "WebQTest-1119", "RawQuestion": "what is colorado technical university?", "ProcessedQuestion": "what is colorado technical university", "Parses": [{"ParseId": "WebQTest-1119.P0", "AnnotatorId": 5, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Low", "FreeFormComment": "? meaning of \"what\" question here is not clear"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c_5g9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c_5g9 ns:common.topic.notable_types ?x .\n}\n", "PotentialTopicEntityMention": "colorado technical university", "TopicEntityName": "Colorado Technical University", "TopicEntityMid": "m.0c_5g9", "InferentialChain": ["common.topic.notable_types"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01y2hnl", "EntityName": "College/University"}]}], "topic_entity": {"m.0c_5g9": "Colorado Technical University"}, "qid_topic_entity": {"Q5148968": "Colorado Technical University"}}, {"QuestionId": "WebQTest-326", "RawQuestion": "what did gerald r ford die from?", "ProcessedQuestion": "what did gerald r ford die from", "Parses": [{"ParseId": "WebQTest-326.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c_md_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c_md_ ns:people.deceased_person.cause_of_death ?x .\n}\n", "PotentialTopicEntityMention": "gerald r ford", "TopicEntityName": "Gerald Ford", "TopicEntityMid": "m.0c_md_", "InferentialChain": ["people.deceased_person.cause_of_death"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.02k6hp", "EntityName": "Cardiovascular disease"}]}], "topic_entity": {"m.0c_md_": "Gerald Ford"}, "qid_topic_entity": {"Q9582": "Gerald Ford"}}, {"QuestionId": "WebQTest-1912", "RawQuestion": "what did joan crawford died of?", "ProcessedQuestion": "what did joan crawford died of", "Parses": [{"ParseId": "WebQTest-1912.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cgbf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cgbf ns:people.deceased_person.cause_of_death ?x .\n}\n", "PotentialTopicEntityMention": "joan crawford", "TopicEntityName": "Joan Crawford", "TopicEntityMid": "m.0cgbf", "InferentialChain": ["people.deceased_person.cause_of_death"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01_qc_", "EntityName": "Pancreatic cancer"}, {"AnswerType": "Entity", "AnswerArgument": "m.0gk4g", "EntityName": "heart attack"}]}], "topic_entity": {"m.0cgbf": "Joan Crawford"}, "qid_topic_entity": {"Q40475": "Joan Crawford"}}, {"QuestionId": "WebQTest-1332", "RawQuestion": "when does the vietnam war end?", "ProcessedQuestion": "when does the vietnam war end", "Parses": [{"ParseId": "WebQTest-1332.P0", "AnnotatorId": 1, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07_nf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07_nf ns:time.event.end_date ?x .\n}\n", "PotentialTopicEntityMention": "vietnam war", "TopicEntityName": "Vietnam War", "TopicEntityMid": "m.07_nf", "InferentialChain": ["time.event.end_date"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Value", "AnswerArgument": "1975-04-30", "EntityName": null}]}], "topic_entity": {"m.07_nf": "Vietnam War"}, "qid_topic_entity": {"Q8740": "Vietnam War"}}, {"QuestionId": "WebQTest-1737", "RawQuestion": "what movies has liam hemsworth played in?", "ProcessedQuestion": "what movies has liam hemsworth played in", "Parses": [{"ParseId": "WebQTest-1737.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04yd0fh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04yd0fh ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n", "PotentialTopicEntityMention": "liam hemsworth", "TopicEntityName": "Liam Hemsworth", "TopicEntityMid": "m.04yd0fh", "InferentialChain": ["film.actor.film", "film.performance.film"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01222hf6", "EntityName": "By Way of Helena"}, {"AnswerType": "Entity", "AnswerArgument": "m.0123hmcd", "EntityName": "The Dressmaker"}, {"AnswerType": "Entity", "AnswerArgument": "m.0134v4hd", "EntityName": "Draft:Independence Day 2"}, {"AnswerType": "Entity", "AnswerArgument": "m.047v2p4", "EntityName": "Knowing"}, {"AnswerType": "Entity", "AnswerArgument": "m.06_vszc", "EntityName": "Triangle"}, {"AnswerType": "Entity", "AnswerArgument": "m.07ykkx5", "EntityName": "The Last Song"}, {"AnswerType": "Entity", "AnswerArgument": "m.0gffmn8", "EntityName": "The Expendables 2"}, {"AnswerType": "Entity", "AnswerArgument": "m.0gkz15s", "EntityName": "The Hunger Games"}, {"AnswerType": "Entity", "AnswerArgument": "m.0gxtt2w", "EntityName": "Love and Honor"}, {"AnswerType": "Entity", "AnswerArgument": "m.0gxtt3_", "EntityName": "Arabian Nights"}, {"AnswerType": "Entity", "AnswerArgument": "m.0hz6697", "EntityName": "Timeless"}, {"AnswerType": "Entity", "AnswerArgument": "m.0k9390g", "EntityName": "Paranoia"}, {"AnswerType": "Entity", "AnswerArgument": "m.0lcw1gn", "EntityName": "Empire State"}, {"AnswerType": "Entity", "AnswerArgument": "m.0n40qmp", "EntityName": "The Hunger Games: Catching Fire"}, {"AnswerType": "Entity", "AnswerArgument": "m.0ngvsvk", "EntityName": "The Hunger Games: Mockingjay, Part 1"}, {"AnswerType": "Entity", "AnswerArgument": "m.0ngvtb_", "EntityName": "The Hunger Games: Mockingjay, Part 2"}, {"AnswerType": "Entity", "AnswerArgument": "m.0v9rfj5", "EntityName": "Aurora Rising"}, {"AnswerType": "Entity", "AnswerArgument": "m.0wk4knj", "EntityName": "Cut Bank"}]}], "topic_entity": {"m.04yd0fh": "Liam Hemsworth"}, "qid_topic_entity": {"Q32045": "Liam Hemsworth"}}, {"QuestionId": "WebQTest-28", "RawQuestion": "what electorate does anna bligh represent?", "ProcessedQuestion": "what electorate does anna bligh represent", "Parses": [{"ParseId": "WebQTest-28.P0", "AnnotatorId": 3, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.072_m3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.072_m3 ns:government.politician.government_positions_held ?y .\n?y ns:government.government_position_held.district_represented ?x .\n}\n", "PotentialTopicEntityMention": "anna bligh", "TopicEntityName": "Anna Bligh", "TopicEntityMid": "m.072_m3", "InferentialChain": ["government.politician.government_positions_held", "government.government_position_held.district_represented"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.026q11g", "EntityName": "Electoral district of South Brisbane"}]}], "topic_entity": {"m.072_m3": "Anna Bligh"}, "qid_topic_entity": {"Q466482": "Anna Bligh"}}, {"QuestionId": "WebQTest-1734", "RawQuestion": "what year did houston rockets win their first championship?", "ProcessedQuestion": "what year did houston rockets win their first championship", "Parses": [{"ParseId": "WebQTest-1734.P0", "AnnotatorId": 5, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jmfb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jmfb ns:sports.sports_team.championships ?x .\n?x ns:time.event.start_date ?sk0 .\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n", "PotentialTopicEntityMention": "houston rockets", "TopicEntityName": "Houston Rockets", "TopicEntityMid": "m.0jmfb", "InferentialChain": ["sports.sports_team.championships"], "Constraints": [], "Time": null, "Order": {"SortOrder": "Ascending", "Start": 0, "Count": 1, "SourceNodeIndex": 0, "NodePredicate": "time.event.start_date", "ValueType": "DateTime"}, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.08x9cq", "EntityName": "1994 NBA Finals"}]}], "topic_entity": {"m.0jmfb": "Houston Rockets"}, "qid_topic_entity": {"Q161345": "Houston Rockets"}}, {"QuestionId": "WebQTest-1398", "RawQuestion": "what movies did joan crawford play in?", "ProcessedQuestion": "what movies did joan crawford play in", "Parses": [{"ParseId": "WebQTest-1398.P0", "AnnotatorId": 3, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cgbf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cgbf ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n", "PotentialTopicEntityMention": "joan crawford", "TopicEntityName": "Joan Crawford", "TopicEntityMid": "m.0cgbf", "InferentialChain": ["film.actor.film", "film.performance.film"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.01937g", "EntityName": "Possessed"}, {"AnswerType": "Entity", "AnswerArgument": "m.019l8m", "EntityName": "Sudden Fear"}, {"AnswerType": "Entity", "AnswerArgument": "m.026v_q1", "EntityName": "Humoresque"}, {"AnswerType": "Entity", "AnswerArgument": "m.027_q_t", "EntityName": "Possessed"}, {"AnswerType": "Entity", "AnswerArgument": "m.0270fg0", "EntityName": "Harriet Craig"}, {"AnswerType": "Entity", "AnswerArgument": "m.0270xln", "EntityName": "Susan and God"}, {"AnswerType": "Entity", "AnswerArgument": "m.02710m8", "EntityName": "The Women"}, {"AnswerType": "Entity", "AnswerArgument": "m.027qqvj", "EntityName": "The Stolen Jools"}, {"AnswerType": "Entity", "AnswerArgument": "m.02pwvzg", "EntityName": "Spring Fever"}, {"AnswerType": "Entity", "AnswerArgument": "m.02qvt4z", "EntityName": "Sally, Irene and Mary"}, {"AnswerType": "Entity", "AnswerArgument": "m.02qvv1h", "EntityName": "Across to Singapore"}, {"AnswerType": "Entity", "AnswerArgument": "m.02r92ps", "EntityName": "This Woman Is Dangerous"}, {"AnswerType": "Entity", "AnswerArgument": "m.02r9t_k", "EntityName": "Pretty Ladies"}, {"AnswerType": "Entity", "AnswerArgument": "m.02r9tvd", "EntityName": "Old Clothes"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rbh2y", "EntityName": "Tramp, Tramp, Tramp"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rc9rv", "EntityName": "The Boob"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rfb5l", "EntityName": "The Taxi Dancer"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rfb8b", "EntityName": "Winners of the Wilderness"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rfbbd", "EntityName": "The Understanding Heart"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rfbd3", "EntityName": "Twelve Miles Out"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rgkfq", "EntityName": "The Law of the Range"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rgkjt", "EntityName": "West Point"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rhtrl", "EntityName": "Four Walls"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rj1n2", "EntityName": "Dream of Love"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rj2mq", "EntityName": "The Duke Steps Out"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rj2z0", "EntityName": "Our Modern Maidens"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rjdrw", "EntityName": "Montana Moon"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rjffj", "EntityName": "Our Blushing Brides"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rjfz0", "EntityName": "Paid"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rjtbf", "EntityName": "Dance, Fools, Dance"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rjv0t", "EntityName": "This Modern Age"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rkx49", "EntityName": "Laughing Sinners"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rkxqw", "EntityName": "Letty Lynton"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rkz1j", "EntityName": "Today We Live"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rl6rf", "EntityName": "Chained"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rl6vw", "EntityName": "Forsaking All Others"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rl6ym", "EntityName": "No More Ladies"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rl75j", "EntityName": "I Live My Life"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rlnc6", "EntityName": "The Bride Wore Red"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rlw5h", "EntityName": "The Shining Hour"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rlw9m", "EntityName": "Mannequin"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rm8lx", "EntityName": "The Ice Follies of 1939"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rm8yk", "EntityName": "Strange Cargo"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rm98x", "EntityName": "A Woman's Face"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rmlkd", "EntityName": "When Ladies Meet"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rmlwq", "EntityName": "They All Kissed the Bride"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rnd1v", "EntityName": "Reunion in France"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rndbf", "EntityName": "Above Suspicion"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rndrh", "EntityName": "Female on the Beach"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rp425", "EntityName": "Goodbye, My Fancy"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rp5tx", "EntityName": "The Story of Esther Costello"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rzp63", "EntityName": "A Slave of Fashion"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rzqnj", "EntityName": "Tide of Empire"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rzt27", "EntityName": "The Merry Widow"}, {"AnswerType": "Entity", "AnswerArgument": "m.02x7d7", "EntityName": "Trog"}, {"AnswerType": "Entity", "AnswerArgument": "m.03gq7tf", "EntityName": "Great Day"}, {"AnswerType": "Entity", "AnswerArgument": "m.03wfchq", "EntityName": "The Last of Mrs. Cheyney"}, {"AnswerType": "Entity", "AnswerArgument": "m.03wg0lz", "EntityName": "The Best of Everything"}, {"AnswerType": "Entity", "AnswerArgument": "m.03wgxy1", "EntityName": "Paris"}, {"AnswerType": "Entity", "AnswerArgument": "m.04hl97", "EntityName": "Queen Bee"}, {"AnswerType": "Entity", "AnswerArgument": "m.04w25m", "EntityName": "Johnny Guitar"}, {"AnswerType": "Entity", "AnswerArgument": "m.054_0p", "EntityName": "The Gorgeous Hussy"}, {"AnswerType": "Entity", "AnswerArgument": "m.05d_tr", "EntityName": "Torch Song"}, {"AnswerType": "Entity", "AnswerArgument": "m.05f04x", "EntityName": "Hush\u2026 Hush, Sweet Charlotte"}, {"AnswerType": "Entity", "AnswerArgument": "m.05m82n", "EntityName": "Autumn Leaves"}, {"AnswerType": "Entity", "AnswerArgument": "m.064nm14", "EntityName": "The Karate Killers"}, {"AnswerType": "Entity", "AnswerArgument": "m.065_f8", "EntityName": "What Ever Happened to Baby Jane?"}, {"AnswerType": "Entity", "AnswerArgument": "m.06y7_x", "EntityName": "Our Dancing Daughters"}, {"AnswerType": "Entity", "AnswerArgument": "m.076162", "EntityName": "It's a Great Feeling"}, {"AnswerType": "Entity", "AnswerArgument": "m.07bc2w", "EntityName": "The Damned Don't Cry!"}, {"AnswerType": "Entity", "AnswerArgument": "m.07n06p", "EntityName": "Rain"}, {"AnswerType": "Entity", "AnswerArgument": "m.07ncxk", "EntityName": "Flamingo Road"}, {"AnswerType": "Entity", "AnswerArgument": "m.07zbj7", "EntityName": "Dancing Lady"}, {"AnswerType": "Entity", "AnswerArgument": "m.080m7fp", "EntityName": "Rose-Marie"}, {"AnswerType": "Entity", "AnswerArgument": "m.080pgyc", "EntityName": "The Circle"}, {"AnswerType": "Entity", "AnswerArgument": "m.09l_6k", "EntityName": "The Unknown"}, {"AnswerType": "Entity", "AnswerArgument": "m.09x69j", "EntityName": "Sadie McKee"}, {"AnswerType": "Entity", "AnswerArgument": "m.0b8ghw", "EntityName": "Strait-Jacket"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bh8z_", "EntityName": "The Caretakers"}, {"AnswerType": "Entity", "AnswerArgument": "m.0bhjr3", "EntityName": "Untamed"}, {"AnswerType": "Entity", "AnswerArgument": "m.0brjnd", "EntityName": "I Saw What You Did"}, {"AnswerType": "Entity", "AnswerArgument": "m.0brk3r", "EntityName": "Berserk!"}, {"AnswerType": "Entity", "AnswerArgument": "m.0c5wn", "EntityName": "Grand Hotel"}, {"AnswerType": "Entity", "AnswerArgument": "m.0c61b", "EntityName": "The Hollywood Revue of 1929"}, {"AnswerType": "Entity", "AnswerArgument": "m.0c8q9k", "EntityName": "Love on the Run"}, {"AnswerType": "Entity", "AnswerArgument": "m.0cs4d2d", "EntityName": "Harry Langdon: The Forgotten Clown"}, {"AnswerType": "Entity", "AnswerArgument": "m.0cy__l", "EntityName": "Mildred Pierce"}, {"AnswerType": "Entity", "AnswerArgument": "m.0dkslz", "EntityName": "Daisy Kenyon"}, {"AnswerType": "Entity", "AnswerArgument": "m.0ngnd6x", "EntityName": "Della"}]}], "topic_entity": {"m.0cgbf": "Joan Crawford"}, "qid_topic_entity": {"Q40475": "Joan Crawford"}}, {"QuestionId": "WebQTest-849", "RawQuestion": "what country sponsored ferdinand magellan?", "ProcessedQuestion": "what country sponsored ferdinand magellan", "Parses": [{"ParseId": "WebQTest-849.P0", "AnnotatorId": 1, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "VeryLow", "FreeFormComment": "??"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.033ky)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.033ky ns:people.person.nationality ?x .\n}\n", "PotentialTopicEntityMention": "ferdinand magellan", "TopicEntityName": "Ferdinand Magellan", "TopicEntityMid": "m.033ky", "InferentialChain": ["people.person.nationality"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.0285m87", "EntityName": "Kingdom of Portugal"}]}], "topic_entity": {"m.033ky": "Ferdinand Magellan"}, "qid_topic_entity": {"Q1496": "Ferdinand Magellan"}}, {"QuestionId": "WebQTest-1829", "RawQuestion": "what type of religion did massachusetts have?", "ProcessedQuestion": "what type of religion did massachusetts have", "Parses": [{"ParseId": "WebQTest-1829.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05k7sb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05k7sb ns:location.statistical_region.religions ?y .\n?y ns:location.religion_percentage.religion ?x .\n}\n", "PotentialTopicEntityMention": "massachusetts", "TopicEntityName": "Massachusetts", "TopicEntityMid": "m.05k7sb", "InferentialChain": ["location.statistical_region.religions", "location.religion_percentage.religion"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.019cr", "EntityName": "Baptists"}, {"AnswerType": "Entity", "AnswerArgument": "m.01lp8", "EntityName": "Christianity"}, {"AnswerType": "Entity", "AnswerArgument": "m.01s5nb", "EntityName": "United Church of Christ"}, {"AnswerType": "Entity", "AnswerArgument": "m.021_0p", "EntityName": "Churches of Christ"}, {"AnswerType": "Entity", "AnswerArgument": "m.02rsw", "EntityName": "Episcopal Church"}, {"AnswerType": "Entity", "AnswerArgument": "m.03_gx", "EntityName": "Judaism"}, {"AnswerType": "Entity", "AnswerArgument": "m.04pk9", "EntityName": "Lutheranism"}, {"AnswerType": "Entity", "AnswerArgument": "m.051kv", "EntityName": "Methodism"}, {"AnswerType": "Entity", "AnswerArgument": "m.05sfs", "EntityName": "Protestantism"}, {"AnswerType": "Entity", "AnswerArgument": "m.05w5d", "EntityName": "Pentecostalism"}, {"AnswerType": "Entity", "AnswerArgument": "m.0631_", "EntityName": "Presbyterianism"}, {"AnswerType": "Entity", "AnswerArgument": "m.092bf5", "EntityName": "Buddhism"}, {"AnswerType": "Entity", "AnswerArgument": "m.0c8wxp", "EntityName": "Catholicism"}, {"AnswerType": "Entity", "AnswerArgument": "m.0dtdq", "EntityName": "Jehovah's Witnesses"}]}], "topic_entity": {"m.05k7sb": "Massachusetts"}, "qid_topic_entity": {"Q771": "Massachusetts"}}, {"QuestionId": "WebQTest-819", "RawQuestion": "where was bin laden found and killed?", "ProcessedQuestion": "where was bin laden found and killed", "Parses": [{"ParseId": "WebQTest-819.P0", "AnnotatorId": 0, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": "First-round parse verification"}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05mg9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05mg9 ns:people.deceased_person.place_of_death ?x .\n}\n", "PotentialTopicEntityMention": "bin laden", "TopicEntityName": "Osama bin Laden", "TopicEntityMid": "m.05mg9", "InferentialChain": ["people.deceased_person.place_of_death"], "Constraints": [], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.011hs1", "EntityName": "Abbottabad"}]}], "topic_entity": {"m.05mg9": "Osama bin Laden"}, "qid_topic_entity": {"Q1317": "Osama bin Laden"}}, {"QuestionId": "WebQTest-1052", "RawQuestion": "who played damien in the omen 2006?", "ProcessedQuestion": "who played damien in the omen 2006", "Parses": [{"ParseId": "WebQTest-1052.P0", "AnnotatorId": 4, "AnnotatorComment": {"ParseQuality": "Complete", "QuestionQuality": "Good", "Confidence": "Normal", "FreeFormComment": ""}, "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07c5kt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07c5kt ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.09s4pt .\n}\n", "PotentialTopicEntityMention": "the omen 2006", "TopicEntityName": "The Omen", "TopicEntityMid": "m.07c5kt", "InferentialChain": ["film.film.starring", "film.performance.actor"], "Constraints": [{"Operator": "Equal", "ArgumentType": "Entity", "Argument": "m.09s4pt", "EntityName": "Damien Thorn", "SourceNodeIndex": 0, "NodePredicate": "film.performance.character", "ValueType": "String"}], "Time": null, "Order": null, "Answers": [{"AnswerType": "Entity", "AnswerArgument": "m.05h9v7d", "EntityName": "Tomas Wooler"}, {"AnswerType": "Entity", "AnswerArgument": "m.0dcshy", "EntityName": "Seamus Davey-Fitzpatrick"}]}], "topic_entity": {"m.07c5kt": "The Omen"}, "qid_topic_entity": {"Q518863": "The Omen"}}]